[
  {
    "objectID": "course_notes.html",
    "href": "course_notes.html",
    "title": "Course Notes",
    "section": "",
    "text": "This is a quarto file. Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "course_notes.html#quarto",
    "href": "course_notes.html#quarto",
    "title": "Course Notes",
    "section": "",
    "text": "This is a quarto file. Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "course_notes.html#setup",
    "href": "course_notes.html#setup",
    "title": "Course Notes",
    "section": "Setup",
    "text": "Setup\nHere we load some packages that we’ll be using.\n\nlibrary(here)\n\nhere() starts at /Users/kjhealy/Documents/courses/data_visualization\n\nlibrary(socviz)\nlibrary(gapminder)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nhere::i_am(\"course_notes.qmd\") # relative to the course packet.\n\nhere() starts at /Users/kjhealy/Documents/courses/data_visualization"
  },
  {
    "objectID": "course_notes.html#running-code",
    "href": "course_notes.html#running-code",
    "title": "Course Notes",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "slides/09-case-studies.html#load-our-packages",
    "href": "slides/09-case-studies.html#load-our-packages",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Load our packages",
    "text": "Load our packages\n\nlibrary(here)       # manage file paths\nlibrary(tidyverse)  # your friend and mine\nlibrary(cavax)      # california vaccination exemption data\nlibrary(colorspace) # luminance-balanced palettes\nlibrary(demog)      # demographic data for a graph\nlibrary(ggforce)    # useful enhancements to ggplot\nlibrary(ggrepel)    # Text and labels\nlibrary(gssr)       # the gss packaged for r\nlibrary(patchwork)  # compose multiple plots\nlibrary(scales)     # scale adjustments and enhancements\nlibrary(socviz)     # data and some useful functions"
  },
  {
    "objectID": "slides/09-case-studies.html#what-to-do-instead",
    "href": "slides/09-case-studies.html#what-to-do-instead",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "What to do instead?",
    "text": "What to do instead?\n\nfredts &lt;- as_tibble(fredts)\nfredts\n\n# A tibble: 357 × 5\n   date       sp500 monbase sp500_i monbase_i\n   &lt;date&gt;     &lt;dbl&gt;   &lt;int&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1 2009-03-11  697. 1542228    100       100 \n 2 2009-03-18  767. 1693133    110.      110.\n 3 2009-03-25  799. 1693133    115.      110.\n 4 2009-04-01  809. 1733017    116.      112.\n 5 2009-04-08  831. 1733017    119.      112.\n 6 2009-04-15  852. 1789878    122.      116.\n 7 2009-04-22  852. 1789878    122.      116.\n 8 2009-04-29  861. 1709369    124.      111.\n 9 2009-05-06  896. 1709369    129.      111.\n10 2009-05-13  908. 1805373    130.      117.\n# ℹ 347 more rows"
  },
  {
    "objectID": "slides/09-case-studies.html#pivot-the-data",
    "href": "slides/09-case-studies.html#pivot-the-data",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Pivot the data",
    "text": "Pivot the data\n\n\n\nfredts\n\n\n\n\n# A tibble: 357 × 5\n   date       sp500 monbase sp500_i monbase_i\n   &lt;date&gt;     &lt;dbl&gt;   &lt;int&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1 2009-03-11  697. 1542228    100       100 \n 2 2009-03-18  767. 1693133    110.      110.\n 3 2009-03-25  799. 1693133    115.      110.\n 4 2009-04-01  809. 1733017    116.      112.\n 5 2009-04-08  831. 1733017    119.      112.\n 6 2009-04-15  852. 1789878    122.      116.\n 7 2009-04-22  852. 1789878    122.      116.\n 8 2009-04-29  861. 1709369    124.      111.\n 9 2009-05-06  896. 1709369    129.      111.\n10 2009-05-13  908. 1805373    130.      117.\n# ℹ 347 more rows"
  },
  {
    "objectID": "slides/09-case-studies.html#pivot-the-data-1",
    "href": "slides/09-case-studies.html#pivot-the-data-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Pivot the data",
    "text": "Pivot the data\n\n\n\nfredts |&gt;\n  select(date, sp500_i, monbase_i)\n\n\n\n\n# A tibble: 357 × 3\n   date       sp500_i monbase_i\n   &lt;date&gt;       &lt;dbl&gt;     &lt;dbl&gt;\n 1 2009-03-11    100       100 \n 2 2009-03-18    110.      110.\n 3 2009-03-25    115.      110.\n 4 2009-04-01    116.      112.\n 5 2009-04-08    119.      112.\n 6 2009-04-15    122.      116.\n 7 2009-04-22    122.      116.\n 8 2009-04-29    124.      111.\n 9 2009-05-06    129.      111.\n10 2009-05-13    130.      117.\n# ℹ 347 more rows"
  },
  {
    "objectID": "slides/09-case-studies.html#pivot-the-data-2",
    "href": "slides/09-case-studies.html#pivot-the-data-2",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Pivot the data",
    "text": "Pivot the data\n\n\n\nfredts |&gt;\n  select(date, sp500_i, monbase_i)  |&gt;\n  pivot_longer(sp500_i:monbase_i,\n               names_to = \"series\",\n               values_to = \"score\")\n\n\n\n\n# A tibble: 714 × 3\n   date       series    score\n   &lt;date&gt;     &lt;chr&gt;     &lt;dbl&gt;\n 1 2009-03-11 sp500_i    100 \n 2 2009-03-11 monbase_i  100 \n 3 2009-03-18 sp500_i    110.\n 4 2009-03-18 monbase_i  110.\n 5 2009-03-25 sp500_i    115.\n 6 2009-03-25 monbase_i  110.\n 7 2009-04-01 sp500_i    116.\n 8 2009-04-01 monbase_i  112.\n 9 2009-04-08 sp500_i    119.\n10 2009-04-08 monbase_i  112.\n# ℹ 704 more rows"
  },
  {
    "objectID": "slides/09-case-studies.html#pivot-the-data-3",
    "href": "slides/09-case-studies.html#pivot-the-data-3",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Pivot the data",
    "text": "Pivot the data\n\n\n\nfredts |&gt;\n  select(date, sp500_i, monbase_i)  |&gt;\n  pivot_longer(sp500_i:monbase_i,\n               names_to = \"series\",\n               values_to = \"score\") -&gt;\n  fredts_m"
  },
  {
    "objectID": "slides/09-case-studies.html#pivot-the-data-4",
    "href": "slides/09-case-studies.html#pivot-the-data-4",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Pivot the data",
    "text": "Pivot the data\n\n\n\nfredts |&gt;\n  select(date, sp500_i, monbase_i)  |&gt;\n  pivot_longer(sp500_i:monbase_i,\n               names_to = \"series\",\n               values_to = \"score\") -&gt;\n  fredts_m"
  },
  {
    "objectID": "slides/09-case-studies.html#make-two-plots",
    "href": "slides/09-case-studies.html#make-two-plots",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Make two plots",
    "text": "Make two plots\n\n\n\nfredts_m\n\n\n\n\n# A tibble: 714 × 3\n   date       series    score\n   &lt;date&gt;     &lt;chr&gt;     &lt;dbl&gt;\n 1 2009-03-11 sp500_i    100 \n 2 2009-03-11 monbase_i  100 \n 3 2009-03-18 sp500_i    110.\n 4 2009-03-18 monbase_i  110.\n 5 2009-03-25 sp500_i    115.\n 6 2009-03-25 monbase_i  110.\n 7 2009-04-01 sp500_i    116.\n 8 2009-04-01 monbase_i  112.\n 9 2009-04-08 sp500_i    119.\n10 2009-04-08 monbase_i  112.\n# ℹ 704 more rows"
  },
  {
    "objectID": "slides/09-case-studies.html#make-two-plots-1",
    "href": "slides/09-case-studies.html#make-two-plots-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Make two plots",
    "text": "Make two plots\n\n\n\nfredts_m |&gt;\n  ggplot(mapping =\n           aes(x = date,\n               y = score,\n               color = series))"
  },
  {
    "objectID": "slides/09-case-studies.html#make-two-plots-2",
    "href": "slides/09-case-studies.html#make-two-plots-2",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Make two plots",
    "text": "Make two plots\n\n\n\nfredts_m |&gt;\n  ggplot(mapping =\n           aes(x = date,\n               y = score,\n               color = series)) +\n  geom_line(linewidth = 2)"
  },
  {
    "objectID": "slides/09-case-studies.html#make-two-plots-3",
    "href": "slides/09-case-studies.html#make-two-plots-3",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Make two plots",
    "text": "Make two plots\n\n\n\nfredts_m |&gt;\n  ggplot(mapping =\n           aes(x = date,\n               y = score,\n               color = series)) +\n  geom_line(linewidth = 2) +\n  labs(x = \"Date\", y = \"Index\",\n        color = \"Series\")"
  },
  {
    "objectID": "slides/09-case-studies.html#make-two-plots-4",
    "href": "slides/09-case-studies.html#make-two-plots-4",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Make two plots",
    "text": "Make two plots\n\n\n\nfredts_m |&gt;\n  ggplot(mapping =\n           aes(x = date,\n               y = score,\n               color = series)) +\n  geom_line(linewidth = 2) +\n  labs(x = \"Date\", y = \"Index\",\n        color = \"Series\") +\n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank())"
  },
  {
    "objectID": "slides/09-case-studies.html#make-two-plots-5",
    "href": "slides/09-case-studies.html#make-two-plots-5",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Make two plots",
    "text": "Make two plots\n\n\n\nfredts_m |&gt;\n  ggplot(mapping =\n           aes(x = date,\n               y = score,\n               color = series)) +\n  geom_line(linewidth = 2) +\n  labs(x = \"Date\", y = \"Index\",\n        color = \"Series\") +\n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank()) -&gt;\n  p1"
  },
  {
    "objectID": "slides/09-case-studies.html#make-two-plots-6",
    "href": "slides/09-case-studies.html#make-two-plots-6",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Make two plots",
    "text": "Make two plots\n\n\n\nfredts_m |&gt;\n  ggplot(mapping =\n           aes(x = date,\n               y = score,\n               color = series)) +\n  geom_line(linewidth = 2) +\n  labs(x = \"Date\", y = \"Index\",\n        color = \"Series\") +\n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank()) -&gt;\n  p1\n\n# The original df\nfredts\n\n\n\n\n# A tibble: 357 × 5\n   date       sp500 monbase sp500_i monbase_i\n   &lt;date&gt;     &lt;dbl&gt;   &lt;int&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1 2009-03-11  697. 1542228    100       100 \n 2 2009-03-18  767. 1693133    110.      110.\n 3 2009-03-25  799. 1693133    115.      110.\n 4 2009-04-01  809. 1733017    116.      112.\n 5 2009-04-08  831. 1733017    119.      112.\n 6 2009-04-15  852. 1789878    122.      116.\n 7 2009-04-22  852. 1789878    122.      116.\n 8 2009-04-29  861. 1709369    124.      111.\n 9 2009-05-06  896. 1709369    129.      111.\n10 2009-05-13  908. 1805373    130.      117.\n# ℹ 347 more rows"
  },
  {
    "objectID": "slides/09-case-studies.html#make-two-plots-7",
    "href": "slides/09-case-studies.html#make-two-plots-7",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Make two plots",
    "text": "Make two plots\n\n\n\nfredts_m |&gt;\n  ggplot(mapping =\n           aes(x = date,\n               y = score,\n               color = series)) +\n  geom_line(linewidth = 2) +\n  labs(x = \"Date\", y = \"Index\",\n        color = \"Series\") +\n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank()) -&gt;\n  p1\n\n# The original df\nfredts |&gt;\n  ggplot(mapping =\n          aes(x = date,\n              y = sp500_i - monbase_i))"
  },
  {
    "objectID": "slides/09-case-studies.html#make-two-plots-8",
    "href": "slides/09-case-studies.html#make-two-plots-8",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Make two plots",
    "text": "Make two plots\n\n\n\nfredts_m |&gt;\n  ggplot(mapping =\n           aes(x = date,\n               y = score,\n               color = series)) +\n  geom_line(linewidth = 2) +\n  labs(x = \"Date\", y = \"Index\",\n        color = \"Series\") +\n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank()) -&gt;\n  p1\n\n# The original df\nfredts |&gt;\n  ggplot(mapping =\n          aes(x = date,\n              y = sp500_i - monbase_i)) +\n  geom_line(linewidth = 1.5)"
  },
  {
    "objectID": "slides/09-case-studies.html#make-two-plots-9",
    "href": "slides/09-case-studies.html#make-two-plots-9",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Make two plots",
    "text": "Make two plots\n\n\n\nfredts_m |&gt;\n  ggplot(mapping =\n           aes(x = date,\n               y = score,\n               color = series)) +\n  geom_line(linewidth = 2) +\n  labs(x = \"Date\", y = \"Index\",\n        color = \"Series\") +\n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank()) -&gt;\n  p1\n\n# The original df\nfredts |&gt;\n  ggplot(mapping =\n          aes(x = date,\n              y = sp500_i - monbase_i)) +\n  geom_line(linewidth = 1.5) +\n  labs(x = \"Date\", y = \"Difference\")"
  },
  {
    "objectID": "slides/09-case-studies.html#make-two-plots-10",
    "href": "slides/09-case-studies.html#make-two-plots-10",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Make two plots",
    "text": "Make two plots\n\n\n\nfredts_m |&gt;\n  ggplot(mapping =\n           aes(x = date,\n               y = score,\n               color = series)) +\n  geom_line(linewidth = 2) +\n  labs(x = \"Date\", y = \"Index\",\n        color = \"Series\") +\n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank()) -&gt;\n  p1\n\n# The original df\nfredts |&gt;\n  ggplot(mapping =\n          aes(x = date,\n              y = sp500_i - monbase_i)) +\n  geom_line(linewidth = 1.5) +\n  labs(x = \"Date\", y = \"Difference\") -&gt;\n  p2"
  },
  {
    "objectID": "slides/09-case-studies.html#make-two-plots-11",
    "href": "slides/09-case-studies.html#make-two-plots-11",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Make two plots",
    "text": "Make two plots\n\n\n\nfredts_m |&gt;\n  ggplot(mapping =\n           aes(x = date,\n               y = score,\n               color = series)) +\n  geom_line(linewidth = 2) +\n  labs(x = \"Date\", y = \"Index\",\n        color = \"Series\") +\n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank()) -&gt;\n  p1\n\n# The original df\nfredts |&gt;\n  ggplot(mapping =\n          aes(x = date,\n              y = sp500_i - monbase_i)) +\n  geom_line(linewidth = 1.5) +\n  labs(x = \"Date\", y = \"Difference\") -&gt;\n  p2"
  },
  {
    "objectID": "slides/09-case-studies.html#combine-with-patchwork",
    "href": "slides/09-case-studies.html#combine-with-patchwork",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Combine with patchwork",
    "text": "Combine with patchwork\n\n\n\nlibrary(patchwork)"
  },
  {
    "objectID": "slides/09-case-studies.html#combine-with-patchwork-1",
    "href": "slides/09-case-studies.html#combine-with-patchwork-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Combine with patchwork",
    "text": "Combine with patchwork\n\n\n\nlibrary(patchwork)\n\n(p1 / p2)"
  },
  {
    "objectID": "slides/09-case-studies.html#combine-with-patchwork-2",
    "href": "slides/09-case-studies.html#combine-with-patchwork-2",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Combine with patchwork",
    "text": "Combine with patchwork\n\n\n\nlibrary(patchwork)\n\n(p1 / p2) +\n  plot_layout(heights = c(4, 1))"
  },
  {
    "objectID": "slides/09-case-studies.html#combine-with-patchwork-3",
    "href": "slides/09-case-studies.html#combine-with-patchwork-3",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Combine with patchwork",
    "text": "Combine with patchwork\n\n\n\nlibrary(patchwork)\n\n(p1 / p2) +\n  plot_layout(heights = c(4, 1)) +\n  plot_annotation(title = \"Index and Difference\")"
  },
  {
    "objectID": "slides/09-case-studies.html#combine-with-patchwork-4",
    "href": "slides/09-case-studies.html#combine-with-patchwork-4",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Combine with patchwork",
    "text": "Combine with patchwork\n\n\n\nlibrary(patchwork)\n\n(p1 / p2) +\n  plot_layout(heights = c(4, 1)) +\n  plot_annotation(title = \"Index and Difference\") -&gt;\n  p_patch"
  },
  {
    "objectID": "slides/09-case-studies.html#the-data",
    "href": "slides/09-case-studies.html#the-data",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "The data",
    "text": "The data\n\nyahoo\n\n# A tibble: 12 × 4\n    Year Revenue Employees Mayer\n   &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;\n 1  2004    3574      7600 No   \n 2  2005    5257      9800 No   \n 3  2006    6425     11400 No   \n 4  2007    6969     14300 No   \n 5  2008    7208     13600 No   \n 6  2009    6460     13900 No   \n 7  2010    6324     13600 No   \n 8  2011    4984     14100 No   \n 9  2012    4986     12000 No   \n10  2012    4986     11500 Yes  \n11  2013    4680     12200 Yes  \n12  2014    4618     12500 Yes"
  },
  {
    "objectID": "slides/09-case-studies.html#option-1",
    "href": "slides/09-case-studies.html#option-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Option 1",
    "text": "Option 1\n\n\n\nyahoo\n\n\n\n\n# A tibble: 12 × 4\n    Year Revenue Employees Mayer\n   &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;\n 1  2004    3574      7600 No   \n 2  2005    5257      9800 No   \n 3  2006    6425     11400 No   \n 4  2007    6969     14300 No   \n 5  2008    7208     13600 No   \n 6  2009    6460     13900 No   \n 7  2010    6324     13600 No   \n 8  2011    4984     14100 No   \n 9  2012    4986     12000 No   \n10  2012    4986     11500 Yes  \n11  2013    4680     12200 Yes  \n12  2014    4618     12500 Yes"
  },
  {
    "objectID": "slides/09-case-studies.html#option-1-1",
    "href": "slides/09-case-studies.html#option-1-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Option 1",
    "text": "Option 1\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Employees,\n               y = Revenue))"
  },
  {
    "objectID": "slides/09-case-studies.html#option-1-2",
    "href": "slides/09-case-studies.html#option-1-2",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Option 1",
    "text": "Option 1\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Employees,\n               y = Revenue)) +\n  geom_path(color = \"gray40\",\n            linewidth = rel(2))"
  },
  {
    "objectID": "slides/09-case-studies.html#option-1-3",
    "href": "slides/09-case-studies.html#option-1-3",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Option 1",
    "text": "Option 1\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Employees,\n               y = Revenue)) +\n  geom_path(color = \"gray40\",\n            linewidth = rel(2)) +\n  geom_label(aes(color = Mayer,\n                label = Year),\n            size = rel(5),\n            fontface = \"bold\")"
  },
  {
    "objectID": "slides/09-case-studies.html#option-1-4",
    "href": "slides/09-case-studies.html#option-1-4",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Option 1",
    "text": "Option 1\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Employees,\n               y = Revenue)) +\n  geom_path(color = \"gray40\",\n            linewidth = rel(2)) +\n  geom_label(aes(color = Mayer,\n                label = Year),\n            size = rel(5),\n            fontface = \"bold\") +\n  scale_y_continuous(labels = label_dollar())"
  },
  {
    "objectID": "slides/09-case-studies.html#option-1-5",
    "href": "slides/09-case-studies.html#option-1-5",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Option 1",
    "text": "Option 1\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Employees,\n               y = Revenue)) +\n  geom_path(color = \"gray40\",\n            linewidth = rel(2)) +\n  geom_label(aes(color = Mayer,\n                label = Year),\n            size = rel(5),\n            fontface = \"bold\") +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_x_continuous(labels = label_comma())"
  },
  {
    "objectID": "slides/09-case-studies.html#option-1-6",
    "href": "slides/09-case-studies.html#option-1-6",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Option 1",
    "text": "Option 1\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Employees,\n               y = Revenue)) +\n  geom_path(color = \"gray40\",\n            linewidth = rel(2)) +\n  geom_label(aes(color = Mayer,\n                label = Year),\n            size = rel(5),\n            fontface = \"bold\") +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_x_continuous(labels = label_comma()) +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "slides/09-case-studies.html#option-1-7",
    "href": "slides/09-case-studies.html#option-1-7",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Option 1",
    "text": "Option 1\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Employees,\n               y = Revenue)) +\n  geom_path(color = \"gray40\",\n            linewidth = rel(2)) +\n  geom_label(aes(color = Mayer,\n                label = Year),\n            size = rel(5),\n            fontface = \"bold\") +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_x_continuous(labels = label_comma()) +\n  theme(legend.position = \"bottom\") +\n  labs(color = \"Mayer is CEO\",\n       x = \"Employees\", y = \"Revenue (Millions)\",\n       title = \"Yahoo Employees vs Revenues, 2004-2014\")"
  },
  {
    "objectID": "slides/09-case-studies.html#option-1-8",
    "href": "slides/09-case-studies.html#option-1-8",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Option 1",
    "text": "Option 1\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Employees,\n               y = Revenue)) +\n  geom_path(color = \"gray40\",\n            linewidth = rel(2)) +\n  geom_label(aes(color = Mayer,\n                label = Year),\n            size = rel(5),\n            fontface = \"bold\") +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_x_continuous(labels = label_comma()) +\n  theme(legend.position = \"bottom\") +\n  labs(color = \"Mayer is CEO\",\n       x = \"Employees\", y = \"Revenue (Millions)\",\n       title = \"Yahoo Employees vs Revenues, 2004-2014\") -&gt;\n  yahoo1"
  },
  {
    "objectID": "slides/09-case-studies.html#option-1-9",
    "href": "slides/09-case-studies.html#option-1-9",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Option 1",
    "text": "Option 1\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Employees,\n               y = Revenue)) +\n  geom_path(color = \"gray40\",\n            linewidth = rel(2)) +\n  geom_label(aes(color = Mayer,\n                label = Year),\n            size = rel(5),\n            fontface = \"bold\") +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_x_continuous(labels = label_comma()) +\n  theme(legend.position = \"bottom\") +\n  labs(color = \"Mayer is CEO\",\n       x = \"Employees\", y = \"Revenue (Millions)\",\n       title = \"Yahoo Employees vs Revenues, 2004-2014\") -&gt;\n  yahoo1"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively",
    "href": "slides/09-case-studies.html#alternatively",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively …",
    "text": "Alternatively …\n\n\n\nyahoo\n\n\n\n\n# A tibble: 12 × 4\n    Year Revenue Employees Mayer\n   &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;\n 1  2004    3574      7600 No   \n 2  2005    5257      9800 No   \n 3  2006    6425     11400 No   \n 4  2007    6969     14300 No   \n 5  2008    7208     13600 No   \n 6  2009    6460     13900 No   \n 7  2010    6324     13600 No   \n 8  2011    4984     14100 No   \n 9  2012    4986     12000 No   \n10  2012    4986     11500 Yes  \n11  2013    4680     12200 Yes  \n12  2014    4618     12500 Yes"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-1",
    "href": "slides/09-case-studies.html#alternatively-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively …",
    "text": "Alternatively …\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Year,\n               y = Revenue/Employees))"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-2",
    "href": "slides/09-case-studies.html#alternatively-2",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively …",
    "text": "Alternatively …\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Year,\n               y = Revenue/Employees)) +\n  geom_vline(xintercept = 2012,\n             linewidth = rel(0.5),\n             linetype = \"dotted\")"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-3",
    "href": "slides/09-case-studies.html#alternatively-3",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively …",
    "text": "Alternatively …\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Year,\n               y = Revenue/Employees)) +\n  geom_vline(xintercept = 2012,\n             linewidth = rel(0.5),\n             linetype = \"dotted\") +\n  geom_line(color = \"royalblue\", linewidth = rel(2))"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-4",
    "href": "slides/09-case-studies.html#alternatively-4",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively …",
    "text": "Alternatively …\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Year,\n               y = Revenue/Employees)) +\n  geom_vline(xintercept = 2012,\n             linewidth = rel(0.5),\n             linetype = \"dotted\") +\n  geom_line(color = \"royalblue\", linewidth = rel(2)) +\n  annotate(\"text\", x = 2012.6, y = 0.44,\n           label = \"Mayer\\n becomes\\n CEO\", size = rel(5))"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-5",
    "href": "slides/09-case-studies.html#alternatively-5",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively …",
    "text": "Alternatively …\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Year,\n               y = Revenue/Employees)) +\n  geom_vline(xintercept = 2012,\n             linewidth = rel(0.5),\n             linetype = \"dotted\") +\n  geom_line(color = \"royalblue\", linewidth = rel(2)) +\n  annotate(\"text\", x = 2012.6, y = 0.44,\n           label = \"Mayer\\n becomes\\n CEO\", size = rel(5)) +\n  labs(title = \"Yahoo Revenue to Employee Ratio, 2004-2014\",\n       x = \"Year\",\n       y = \"Revenue/Employees\")"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-6",
    "href": "slides/09-case-studies.html#alternatively-6",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively …",
    "text": "Alternatively …\n\n\n\nyahoo |&gt;\n  ggplot(mapping =\n           aes(x = Year,\n               y = Revenue/Employees)) +\n  geom_vline(xintercept = 2012,\n             linewidth = rel(0.5),\n             linetype = \"dotted\") +\n  geom_line(color = \"royalblue\", linewidth = rel(2)) +\n  annotate(\"text\", x = 2012.6, y = 0.44,\n           label = \"Mayer\\n becomes\\n CEO\", size = rel(5)) +\n  labs(title = \"Yahoo Revenue to Employee Ratio, 2004-2014\",\n       x = \"Year\",\n       y = \"Revenue/Employees\") -&gt;\n  yahoo2"
  },
  {
    "objectID": "slides/09-case-studies.html#pie-charts-are-easy-to-mess-up",
    "href": "slides/09-case-studies.html#pie-charts-are-easy-to-mess-up",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Pie charts are easy to mess up",
    "text": "Pie charts are easy to mess up\n\nFederal Reserve Bank of New York."
  },
  {
    "objectID": "slides/09-case-studies.html#the-data-1",
    "href": "slides/09-case-studies.html#the-data-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "The data",
    "text": "The data\n\nstudebt\n\n# A tibble: 16 × 4\n   Debt      type        pct Debtrc   \n   &lt;ord&gt;     &lt;fct&gt;     &lt;int&gt; &lt;ord&gt;    \n 1 Under $5  Borrowers    20 Under $5 \n 2 $5-$10    Borrowers    17 $5-$10   \n 3 $10-$25   Borrowers    28 $10-$25  \n 4 $25-$50   Borrowers    19 $25-$50  \n 5 $50-$75   Borrowers     8 $50-$75  \n 6 $75-$100  Borrowers     3 $75-$100 \n 7 $100-$200 Borrowers     4 $100-$200\n 8 Over $200 Borrowers     1 Over $200\n 9 Under $5  Balances      2 Under $5 \n10 $5-$10    Balances      4 $5-$10   \n11 $10-$25   Balances     15 $10-$25  \n12 $25-$50   Balances     23 $25-$50  \n13 $50-$75   Balances     16 $50-$75  \n14 $75-$100  Balances     10 $75-$100 \n15 $100-$200 Balances     19 $100-$200\n16 Over $200 Balances     11 Over $200\n\n\n\nDebt and Debtrc are both ordered factors."
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-prep-work",
    "href": "slides/09-case-studies.html#a-little-prep-work",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little prep work",
    "text": "A little prep work\n\np_ylab &lt;- \"Amount Owed, in thousands of Dollars\"\np_title &lt;- \"Outstanding Student Loans\"\np_subtitle &lt;- \"44 million borrowers owe a total of $1.3 trillion\"\np_caption &lt;- \"Source: FRB NY\"\n\nstudebt &lt;- studebt |&gt; \n  mutate(type_label = recode(type, \"Borrowers\" = \"Percent of all Borrowers\",\n                        \"Balances\" = \"Percent of all Balances\"))\n\nstudebt\n\n# A tibble: 16 × 5\n   Debt      type        pct Debtrc    type_label              \n   &lt;ord&gt;     &lt;fct&gt;     &lt;int&gt; &lt;ord&gt;     &lt;fct&gt;                   \n 1 Under $5  Borrowers    20 Under $5  Percent of all Borrowers\n 2 $5-$10    Borrowers    17 $5-$10    Percent of all Borrowers\n 3 $10-$25   Borrowers    28 $10-$25   Percent of all Borrowers\n 4 $25-$50   Borrowers    19 $25-$50   Percent of all Borrowers\n 5 $50-$75   Borrowers     8 $50-$75   Percent of all Borrowers\n 6 $75-$100  Borrowers     3 $75-$100  Percent of all Borrowers\n 7 $100-$200 Borrowers     4 $100-$200 Percent of all Borrowers\n 8 Over $200 Borrowers     1 Over $200 Percent of all Borrowers\n 9 Under $5  Balances      2 Under $5  Percent of all Balances \n10 $5-$10    Balances      4 $5-$10    Percent of all Balances \n11 $10-$25   Balances     15 $10-$25   Percent of all Balances \n12 $25-$50   Balances     23 $25-$50   Percent of all Balances \n13 $50-$75   Balances     16 $50-$75   Percent of all Balances \n14 $75-$100  Balances     10 $75-$100  Percent of all Balances \n15 $100-$200 Balances     19 $100-$200 Percent of all Balances \n16 Over $200 Balances     11 Over $200 Percent of all Balances"
  },
  {
    "objectID": "slides/09-case-studies.html#debt-plot-1",
    "href": "slides/09-case-studies.html#debt-plot-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Debt Plot 1",
    "text": "Debt Plot 1\n\n\n\nstudebt\n\n\n\n\n# A tibble: 16 × 5\n   Debt      type        pct Debtrc    type_label              \n   &lt;ord&gt;     &lt;fct&gt;     &lt;int&gt; &lt;ord&gt;     &lt;fct&gt;                   \n 1 Under $5  Borrowers    20 Under $5  Percent of all Borrowers\n 2 $5-$10    Borrowers    17 $5-$10    Percent of all Borrowers\n 3 $10-$25   Borrowers    28 $10-$25   Percent of all Borrowers\n 4 $25-$50   Borrowers    19 $25-$50   Percent of all Borrowers\n 5 $50-$75   Borrowers     8 $50-$75   Percent of all Borrowers\n 6 $75-$100  Borrowers     3 $75-$100  Percent of all Borrowers\n 7 $100-$200 Borrowers     4 $100-$200 Percent of all Borrowers\n 8 Over $200 Borrowers     1 Over $200 Percent of all Borrowers\n 9 Under $5  Balances      2 Under $5  Percent of all Balances \n10 $5-$10    Balances      4 $5-$10    Percent of all Balances \n11 $10-$25   Balances     15 $10-$25   Percent of all Balances \n12 $25-$50   Balances     23 $25-$50   Percent of all Balances \n13 $50-$75   Balances     16 $50-$75   Percent of all Balances \n14 $75-$100  Balances     10 $75-$100  Percent of all Balances \n15 $100-$200 Balances     19 $100-$200 Percent of all Balances \n16 Over $200 Balances     11 Over $200 Percent of all Balances"
  },
  {
    "objectID": "slides/09-case-studies.html#debt-plot-1-1",
    "href": "slides/09-case-studies.html#debt-plot-1-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Debt Plot 1",
    "text": "Debt Plot 1\n\n\n\nstudebt |&gt;\n  ggplot(mapping =\n           aes(x = pct/100,\n               y = Debt,\n               fill = type))"
  },
  {
    "objectID": "slides/09-case-studies.html#debt-plot-1-2",
    "href": "slides/09-case-studies.html#debt-plot-1-2",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Debt Plot 1",
    "text": "Debt Plot 1\n\n\n\nstudebt |&gt;\n  ggplot(mapping =\n           aes(x = pct/100,\n               y = Debt,\n               fill = type)) +\n  geom_col()"
  },
  {
    "objectID": "slides/09-case-studies.html#debt-plot-1-3",
    "href": "slides/09-case-studies.html#debt-plot-1-3",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Debt Plot 1",
    "text": "Debt Plot 1\n\n\n\nstudebt |&gt;\n  ggplot(mapping =\n           aes(x = pct/100,\n               y = Debt,\n               fill = type)) +\n  geom_col() +\n  scale_fill_brewer(type = \"qual\",\n                    palette = \"Dark2\")"
  },
  {
    "objectID": "slides/09-case-studies.html#debt-plot-1-4",
    "href": "slides/09-case-studies.html#debt-plot-1-4",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Debt Plot 1",
    "text": "Debt Plot 1\n\n\n\nstudebt |&gt;\n  ggplot(mapping =\n           aes(x = pct/100,\n               y = Debt,\n               fill = type)) +\n  geom_col() +\n  scale_fill_brewer(type = \"qual\",\n                    palette = \"Dark2\") +\n  scale_x_continuous(labels = label_percent())"
  },
  {
    "objectID": "slides/09-case-studies.html#debt-plot-1-5",
    "href": "slides/09-case-studies.html#debt-plot-1-5",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Debt Plot 1",
    "text": "Debt Plot 1\n\n\n\nstudebt |&gt;\n  ggplot(mapping =\n           aes(x = pct/100,\n               y = Debt,\n               fill = type)) +\n  geom_col() +\n  scale_fill_brewer(type = \"qual\",\n                    palette = \"Dark2\") +\n  scale_x_continuous(labels = label_percent()) +\n  guides(fill = \"none\")"
  },
  {
    "objectID": "slides/09-case-studies.html#debt-plot-1-6",
    "href": "slides/09-case-studies.html#debt-plot-1-6",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Debt Plot 1",
    "text": "Debt Plot 1\n\n\n\nstudebt |&gt;\n  ggplot(mapping =\n           aes(x = pct/100,\n               y = Debt,\n               fill = type)) +\n  geom_col() +\n  scale_fill_brewer(type = \"qual\",\n                    palette = \"Dark2\") +\n  scale_x_continuous(labels = label_percent()) +\n  guides(fill = \"none\") +\n  labs(x = \"Percent\",\n       y = p_ylab,\n       caption = p_caption,\n       title = p_title,\n       subtitle = p_subtitle)"
  },
  {
    "objectID": "slides/09-case-studies.html#debt-plot-1-7",
    "href": "slides/09-case-studies.html#debt-plot-1-7",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Debt Plot 1",
    "text": "Debt Plot 1\n\n\n\nstudebt |&gt;\n  ggplot(mapping =\n           aes(x = pct/100,\n               y = Debt,\n               fill = type)) +\n  geom_col() +\n  scale_fill_brewer(type = \"qual\",\n                    palette = \"Dark2\") +\n  scale_x_continuous(labels = label_percent()) +\n  guides(fill = \"none\") +\n  labs(x = \"Percent\",\n       y = p_ylab,\n       caption = p_caption,\n       title = p_title,\n       subtitle = p_subtitle) +\n  facet_wrap(~ type_label,\n             labeller =\n               label_wrap_gen(width=10))"
  },
  {
    "objectID": "slides/09-case-studies.html#debt-plot-1-8",
    "href": "slides/09-case-studies.html#debt-plot-1-8",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Debt Plot 1",
    "text": "Debt Plot 1\n\n\n\nstudebt |&gt;\n  ggplot(mapping =\n           aes(x = pct/100,\n               y = Debt,\n               fill = type)) +\n  geom_col() +\n  scale_fill_brewer(type = \"qual\",\n                    palette = \"Dark2\") +\n  scale_x_continuous(labels = label_percent()) +\n  guides(fill = \"none\") +\n  labs(x = \"Percent\",\n       y = p_ylab,\n       caption = p_caption,\n       title = p_title,\n       subtitle = p_subtitle) +\n  facet_wrap(~ type_label,\n             labeller =\n               label_wrap_gen(width=10)) +\n    theme(strip.text.x =\n          element_text(face = \"bold\"))"
  },
  {
    "objectID": "slides/09-case-studies.html#debt-plot-1-9",
    "href": "slides/09-case-studies.html#debt-plot-1-9",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Debt Plot 1",
    "text": "Debt Plot 1\n\n\n\nstudebt |&gt;\n  ggplot(mapping =\n           aes(x = pct/100,\n               y = Debt,\n               fill = type)) +\n  geom_col() +\n  scale_fill_brewer(type = \"qual\",\n                    palette = \"Dark2\") +\n  scale_x_continuous(labels = label_percent()) +\n  guides(fill = \"none\") +\n  labs(x = \"Percent\",\n       y = p_ylab,\n       caption = p_caption,\n       title = p_title,\n       subtitle = p_subtitle) +\n  facet_wrap(~ type_label,\n             labeller =\n               label_wrap_gen(width=10)) +\n    theme(strip.text.x =\n          element_text(face = \"bold\")) -&gt;\n  p1_debt"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart",
    "href": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively, a kind of stacked bar chart",
    "text": "Alternatively, a kind of stacked bar chart\n\n\n\nstudebt\n\n\n\n\n# A tibble: 16 × 5\n   Debt      type        pct Debtrc    type_label              \n   &lt;ord&gt;     &lt;fct&gt;     &lt;int&gt; &lt;ord&gt;     &lt;fct&gt;                   \n 1 Under $5  Borrowers    20 Under $5  Percent of all Borrowers\n 2 $5-$10    Borrowers    17 $5-$10    Percent of all Borrowers\n 3 $10-$25   Borrowers    28 $10-$25   Percent of all Borrowers\n 4 $25-$50   Borrowers    19 $25-$50   Percent of all Borrowers\n 5 $50-$75   Borrowers     8 $50-$75   Percent of all Borrowers\n 6 $75-$100  Borrowers     3 $75-$100  Percent of all Borrowers\n 7 $100-$200 Borrowers     4 $100-$200 Percent of all Borrowers\n 8 Over $200 Borrowers     1 Over $200 Percent of all Borrowers\n 9 Under $5  Balances      2 Under $5  Percent of all Balances \n10 $5-$10    Balances      4 $5-$10    Percent of all Balances \n11 $10-$25   Balances     15 $10-$25   Percent of all Balances \n12 $25-$50   Balances     23 $25-$50   Percent of all Balances \n13 $50-$75   Balances     16 $50-$75   Percent of all Balances \n14 $75-$100  Balances     10 $75-$100  Percent of all Balances \n15 $100-$200 Balances     19 $100-$200 Percent of all Balances \n16 Over $200 Balances     11 Over $200 Percent of all Balances"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-1",
    "href": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively, a kind of stacked bar chart",
    "text": "Alternatively, a kind of stacked bar chart\n\n\n\nstudebt |&gt;\n  ggplot(mapping = aes(x = pct/100,\n                       y = type_label,\n                       fill = Debtrc))"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-2",
    "href": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-2",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively, a kind of stacked bar chart",
    "text": "Alternatively, a kind of stacked bar chart\n\n\n\nstudebt |&gt;\n  ggplot(mapping = aes(x = pct/100,\n                       y = type_label,\n                       fill = Debtrc)) +\n  geom_col(color = \"gray80\")"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-3",
    "href": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-3",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively, a kind of stacked bar chart",
    "text": "Alternatively, a kind of stacked bar chart\n\n\n\nstudebt |&gt;\n  ggplot(mapping = aes(x = pct/100,\n                       y = type_label,\n                       fill = Debtrc)) +\n  geom_col(color = \"gray80\") +\n  scale_x_continuous(labels =\n                       label_percent())"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-4",
    "href": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-4",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively, a kind of stacked bar chart",
    "text": "Alternatively, a kind of stacked bar chart\n\n\n\nstudebt |&gt;\n  ggplot(mapping = aes(x = pct/100,\n                       y = type_label,\n                       fill = Debtrc)) +\n  geom_col(color = \"gray80\") +\n  scale_x_continuous(labels =\n                       label_percent()) +\n  scale_fill_viridis_d()"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-5",
    "href": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-5",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively, a kind of stacked bar chart",
    "text": "Alternatively, a kind of stacked bar chart\n\n\n\nstudebt |&gt;\n  ggplot(mapping = aes(x = pct/100,\n                       y = type_label,\n                       fill = Debtrc)) +\n  geom_col(color = \"gray80\") +\n  scale_x_continuous(labels =\n                       label_percent()) +\n  scale_fill_viridis_d() +\n  guides(fill =\n           guide_legend(reverse = TRUE,\n                        title.position = \"top\",\n                        label.position = \"bottom\",\n                        keywidth = 3,\n                        nrow = 1))"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-6",
    "href": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-6",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively, a kind of stacked bar chart",
    "text": "Alternatively, a kind of stacked bar chart\n\n\n\nstudebt |&gt;\n  ggplot(mapping = aes(x = pct/100,\n                       y = type_label,\n                       fill = Debtrc)) +\n  geom_col(color = \"gray80\") +\n  scale_x_continuous(labels =\n                       label_percent()) +\n  scale_fill_viridis_d() +\n  guides(fill =\n           guide_legend(reverse = TRUE,\n                        title.position = \"top\",\n                        label.position = \"bottom\",\n                        keywidth = 3,\n                        nrow = 1)) +\n  labs(x = NULL, y = NULL,\n       fill = \"Amount Owed, in thousands of dollars\",\n       caption = p_caption, title = p_title,\n       subtitle = p_subtitle)"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-7",
    "href": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-7",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively, a kind of stacked bar chart",
    "text": "Alternatively, a kind of stacked bar chart\n\n\n\nstudebt |&gt;\n  ggplot(mapping = aes(x = pct/100,\n                       y = type_label,\n                       fill = Debtrc)) +\n  geom_col(color = \"gray80\") +\n  scale_x_continuous(labels =\n                       label_percent()) +\n  scale_fill_viridis_d() +\n  guides(fill =\n           guide_legend(reverse = TRUE,\n                        title.position = \"top\",\n                        label.position = \"bottom\",\n                        keywidth = 3,\n                        nrow = 1)) +\n  labs(x = NULL, y = NULL,\n       fill = \"Amount Owed, in thousands of dollars\",\n       caption = p_caption, title = p_title,\n       subtitle = p_subtitle) +\n  theme(legend.position = \"top\",\n        plot.title = element_text(size = rel(2.8)),\n        axis.text = element_text(face = \"bold\",\n                hjust = 1,\n                size = rel(2)),\n          axis.ticks.length = unit(0, \"cm\"),\n          axis.line = element_blank(),\n          panel.grid = element_blank())"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-8",
    "href": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-8",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively, a kind of stacked bar chart",
    "text": "Alternatively, a kind of stacked bar chart\n\n\n\nstudebt |&gt;\n  ggplot(mapping = aes(x = pct/100,\n                       y = type_label,\n                       fill = Debtrc)) +\n  geom_col(color = \"gray80\") +\n  scale_x_continuous(labels =\n                       label_percent()) +\n  scale_fill_viridis_d() +\n  guides(fill =\n           guide_legend(reverse = TRUE,\n                        title.position = \"top\",\n                        label.position = \"bottom\",\n                        keywidth = 3,\n                        nrow = 1)) +\n  labs(x = NULL, y = NULL,\n       fill = \"Amount Owed, in thousands of dollars\",\n       caption = p_caption, title = p_title,\n       subtitle = p_subtitle) +\n  theme(legend.position = \"top\",\n        plot.title = element_text(size = rel(2.8)),\n        axis.text = element_text(face = \"bold\",\n                hjust = 1,\n                size = rel(2)),\n          axis.ticks.length = unit(0, \"cm\"),\n          axis.line = element_blank(),\n          panel.grid = element_blank()) -&gt;\n  p_debt2"
  },
  {
    "objectID": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-9",
    "href": "slides/09-case-studies.html#alternatively-a-kind-of-stacked-bar-chart-9",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Alternatively, a kind of stacked bar chart",
    "text": "Alternatively, a kind of stacked bar chart\n\n\n\nstudebt |&gt;\n  ggplot(mapping = aes(x = pct/100,\n                       y = type_label,\n                       fill = Debtrc)) +\n  geom_col(color = \"gray80\") +\n  scale_x_continuous(labels =\n                       label_percent()) +\n  scale_fill_viridis_d() +\n  guides(fill =\n           guide_legend(reverse = TRUE,\n                        title.position = \"top\",\n                        label.position = \"bottom\",\n                        keywidth = 3,\n                        nrow = 1)) +\n  labs(x = NULL, y = NULL,\n       fill = \"Amount Owed, in thousands of dollars\",\n       caption = p_caption, title = p_title,\n       subtitle = p_subtitle) +\n  theme(legend.position = \"top\",\n        plot.title = element_text(size = rel(2.8)),\n        axis.text = element_text(face = \"bold\",\n                hjust = 1,\n                size = rel(2)),\n          axis.ticks.length = unit(0, \"cm\"),\n          axis.line = element_blank(),\n          panel.grid = element_blank()) -&gt;\n  p_debt2"
  },
  {
    "objectID": "slides/09-case-studies.html#show-ponies",
    "href": "slides/09-case-studies.html#show-ponies",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Show ponies",
    "text": "Show ponies\n\nBeeswarm plot"
  },
  {
    "objectID": "slides/09-case-studies.html#show-ponies-1",
    "href": "slides/09-case-studies.html#show-ponies-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Show ponies",
    "text": "Show ponies\n\nMortality in France"
  },
  {
    "objectID": "slides/09-case-studies.html#show-ponies-2",
    "href": "slides/09-case-studies.html#show-ponies-2",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Show ponies",
    "text": "Show ponies\n\nThe Baby Boom"
  },
  {
    "objectID": "slides/09-case-studies.html#the-demog-package",
    "href": "slides/09-case-studies.html#the-demog-package",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "The demog package",
    "text": "The demog package\n\n# remotes::install_github(\"kjhealy/demog\")\n# library(demog)\n\nokboomer\n\n# A tibble: 1,644 × 12\n    year month n_days births total_pop births_pct births_pct_day date      \n   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;          &lt;dbl&gt; &lt;date&gt;    \n 1  1938     1     31  51820  41215000    0.00126           40.6 1938-01-01\n 2  1938     2     28  47421  41215000    0.00115           41.1 1938-02-01\n 3  1938     3     31  54887  41215000    0.00133           43.0 1938-03-01\n 4  1938     4     30  54623  41215000    0.00133           44.2 1938-04-01\n 5  1938     5     31  56853  41215000    0.00138           44.5 1938-05-01\n 6  1938     6     30  53145  41215000    0.00129           43.0 1938-06-01\n 7  1938     7     31  53214  41215000    0.00129           41.6 1938-07-01\n 8  1938     8     31  50444  41215000    0.00122           39.5 1938-08-01\n 9  1938     9     30  50545  41215000    0.00123           40.9 1938-09-01\n10  1938    10     31  50079  41215000    0.00122           39.2 1938-10-01\n# ℹ 1,634 more rows\n# ℹ 4 more variables: seasonal &lt;dbl&gt;, trend &lt;dbl&gt;, remainder &lt;dbl&gt;,\n#   country &lt;chr&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#boomer-line-graph",
    "href": "slides/09-case-studies.html#boomer-line-graph",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Boomer Line Graph",
    "text": "Boomer Line Graph\n\n\n\nokboomer\n\n\n\n\n# A tibble: 1,644 × 12\n    year month n_days births total_pop births_pct births_pct_day date      \n   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;          &lt;dbl&gt; &lt;date&gt;    \n 1  1938     1     31  51820  41215000    0.00126           40.6 1938-01-01\n 2  1938     2     28  47421  41215000    0.00115           41.1 1938-02-01\n 3  1938     3     31  54887  41215000    0.00133           43.0 1938-03-01\n 4  1938     4     30  54623  41215000    0.00133           44.2 1938-04-01\n 5  1938     5     31  56853  41215000    0.00138           44.5 1938-05-01\n 6  1938     6     30  53145  41215000    0.00129           43.0 1938-06-01\n 7  1938     7     31  53214  41215000    0.00129           41.6 1938-07-01\n 8  1938     8     31  50444  41215000    0.00122           39.5 1938-08-01\n 9  1938     9     30  50545  41215000    0.00123           40.9 1938-09-01\n10  1938    10     31  50079  41215000    0.00122           39.2 1938-10-01\n# ℹ 1,634 more rows\n# ℹ 4 more variables: seasonal &lt;dbl&gt;, trend &lt;dbl&gt;, remainder &lt;dbl&gt;,\n#   country &lt;chr&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#boomer-line-graph-1",
    "href": "slides/09-case-studies.html#boomer-line-graph-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Boomer Line Graph",
    "text": "Boomer Line Graph\n\n\n\nokboomer |&gt;\n    filter(country == \"United States\")\n\n\n\n\n# A tibble: 996 × 12\n    year month n_days births total_pop births_pct births_pct_day date      \n   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;          &lt;dbl&gt; &lt;date&gt;    \n 1  1933     1     31 180545 125579000    0.00144           46.4 1933-01-01\n 2  1933     2     28 165986 125579000    0.00132           47.2 1933-02-01\n 3  1933     3     31 183762 125579000    0.00146           47.2 1933-03-01\n 4  1933     4     30 171354 125579000    0.00136           45.5 1933-04-01\n 5  1933     5     31 174811 125579000    0.00139           44.9 1933-05-01\n 6  1933     6     30 169255 125579000    0.00135           44.9 1933-06-01\n 7  1933     7     31 180880 125579000    0.00144           46.5 1933-07-01\n 8  1933     8     31 181856 125579000    0.00145           46.7 1933-08-01\n 9  1933     9     30 167637 125579000    0.00133           44.5 1933-09-01\n10  1933    10     31 167055 125579000    0.00133           42.9 1933-10-01\n# ℹ 986 more rows\n# ℹ 4 more variables: seasonal &lt;dbl&gt;, trend &lt;dbl&gt;, remainder &lt;dbl&gt;,\n#   country &lt;chr&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#boomer-line-graph-2",
    "href": "slides/09-case-studies.html#boomer-line-graph-2",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Boomer Line Graph",
    "text": "Boomer Line Graph\n\n\n\nokboomer |&gt;\n    filter(country == \"United States\")  |&gt;\n    ggplot(aes(x = date, y = births_pct_day))"
  },
  {
    "objectID": "slides/09-case-studies.html#boomer-line-graph-3",
    "href": "slides/09-case-studies.html#boomer-line-graph-3",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Boomer Line Graph",
    "text": "Boomer Line Graph\n\n\n\nokboomer |&gt;\n    filter(country == \"United States\")  |&gt;\n    ggplot(aes(x = date, y = births_pct_day)) +\n    geom_line(linewidth = 0.5)"
  },
  {
    "objectID": "slides/09-case-studies.html#boomer-line-graph-4",
    "href": "slides/09-case-studies.html#boomer-line-graph-4",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Boomer Line Graph",
    "text": "Boomer Line Graph\n\n\n\nokboomer |&gt;\n    filter(country == \"United States\")  |&gt;\n    ggplot(aes(x = date, y = births_pct_day)) +\n    geom_line(linewidth = 0.5) +\n    labs(x = \"Year\",\n         y = \"Average daily births per million\")"
  },
  {
    "objectID": "slides/09-case-studies.html#boomer-line-graph-5",
    "href": "slides/09-case-studies.html#boomer-line-graph-5",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Boomer Line Graph",
    "text": "Boomer Line Graph\n\n\n\nokboomer |&gt;\n    filter(country == \"United States\")  |&gt;\n    ggplot(aes(x = date, y = births_pct_day)) +\n    geom_line(linewidth = 0.5) +\n    labs(x = \"Year\",\n         y = \"Average daily births per million\") -&gt;\n  p_lineboom"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap",
    "href": "slides/09-case-studies.html#tiled-heatmap",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer\n\n\n\n\n# A tibble: 1,644 × 12\n    year month n_days births total_pop births_pct births_pct_day date      \n   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;          &lt;dbl&gt; &lt;date&gt;    \n 1  1938     1     31  51820  41215000    0.00126           40.6 1938-01-01\n 2  1938     2     28  47421  41215000    0.00115           41.1 1938-02-01\n 3  1938     3     31  54887  41215000    0.00133           43.0 1938-03-01\n 4  1938     4     30  54623  41215000    0.00133           44.2 1938-04-01\n 5  1938     5     31  56853  41215000    0.00138           44.5 1938-05-01\n 6  1938     6     30  53145  41215000    0.00129           43.0 1938-06-01\n 7  1938     7     31  53214  41215000    0.00129           41.6 1938-07-01\n 8  1938     8     31  50444  41215000    0.00122           39.5 1938-08-01\n 9  1938     9     30  50545  41215000    0.00123           40.9 1938-09-01\n10  1938    10     31  50079  41215000    0.00122           39.2 1938-10-01\n# ℹ 1,634 more rows\n# ℹ 4 more variables: seasonal &lt;dbl&gt;, trend &lt;dbl&gt;, remainder &lt;dbl&gt;,\n#   country &lt;chr&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap-1",
    "href": "slides/09-case-studies.html#tiled-heatmap-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer |&gt;\n    mutate(year_fct =\n             factor(year,\n                    levels = unique(year),\n                    ordered = TRUE),\n           month_fct = factor(month,\n                              levels = rev(c(1:12)),\n                              labels = rev(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                  \"May\", \"Jun\", \"Jul\", \"Aug\",\n                                  \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n                              ordered = TRUE))\n\n\n\n\n# A tibble: 1,644 × 14\n    year month n_days births total_pop births_pct births_pct_day date      \n   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;          &lt;dbl&gt; &lt;date&gt;    \n 1  1938     1     31  51820  41215000    0.00126           40.6 1938-01-01\n 2  1938     2     28  47421  41215000    0.00115           41.1 1938-02-01\n 3  1938     3     31  54887  41215000    0.00133           43.0 1938-03-01\n 4  1938     4     30  54623  41215000    0.00133           44.2 1938-04-01\n 5  1938     5     31  56853  41215000    0.00138           44.5 1938-05-01\n 6  1938     6     30  53145  41215000    0.00129           43.0 1938-06-01\n 7  1938     7     31  53214  41215000    0.00129           41.6 1938-07-01\n 8  1938     8     31  50444  41215000    0.00122           39.5 1938-08-01\n 9  1938     9     30  50545  41215000    0.00123           40.9 1938-09-01\n10  1938    10     31  50079  41215000    0.00122           39.2 1938-10-01\n# ℹ 1,634 more rows\n# ℹ 6 more variables: seasonal &lt;dbl&gt;, trend &lt;dbl&gt;, remainder &lt;dbl&gt;,\n#   country &lt;chr&gt;, year_fct &lt;ord&gt;, month_fct &lt;ord&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap-2",
    "href": "slides/09-case-studies.html#tiled-heatmap-2",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer |&gt;\n    mutate(year_fct =\n             factor(year,\n                    levels = unique(year),\n                    ordered = TRUE),\n           month_fct = factor(month,\n                              levels = rev(c(1:12)),\n                              labels = rev(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                  \"May\", \"Jun\", \"Jul\", \"Aug\",\n                                  \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n                              ordered = TRUE)) |&gt;\n    select(year, month, year_fct, month_fct, everything())\n\n\n\n\n# A tibble: 1,644 × 14\n    year month year_fct month_fct n_days births total_pop births_pct\n   &lt;dbl&gt; &lt;dbl&gt; &lt;ord&gt;    &lt;ord&gt;      &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n 1  1938     1 1938     Jan           31  51820  41215000    0.00126\n 2  1938     2 1938     Feb           28  47421  41215000    0.00115\n 3  1938     3 1938     Mar           31  54887  41215000    0.00133\n 4  1938     4 1938     Apr           30  54623  41215000    0.00133\n 5  1938     5 1938     May           31  56853  41215000    0.00138\n 6  1938     6 1938     Jun           30  53145  41215000    0.00129\n 7  1938     7 1938     Jul           31  53214  41215000    0.00129\n 8  1938     8 1938     Aug           31  50444  41215000    0.00122\n 9  1938     9 1938     Sep           30  50545  41215000    0.00123\n10  1938    10 1938     Oct           31  50079  41215000    0.00122\n# ℹ 1,634 more rows\n# ℹ 6 more variables: births_pct_day &lt;dbl&gt;, date &lt;date&gt;, seasonal &lt;dbl&gt;,\n#   trend &lt;dbl&gt;, remainder &lt;dbl&gt;, country &lt;chr&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap-3",
    "href": "slides/09-case-studies.html#tiled-heatmap-3",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer |&gt;\n    mutate(year_fct =\n             factor(year,\n                    levels = unique(year),\n                    ordered = TRUE),\n           month_fct = factor(month,\n                              levels = rev(c(1:12)),\n                              labels = rev(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                  \"May\", \"Jun\", \"Jul\", \"Aug\",\n                                  \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n                              ordered = TRUE)) |&gt;\n    select(year, month, year_fct, month_fct, everything()) |&gt;\n  filter(country == \"United States\")\n\n\n\n\n# A tibble: 996 × 14\n    year month year_fct month_fct n_days births total_pop births_pct\n   &lt;dbl&gt; &lt;dbl&gt; &lt;ord&gt;    &lt;ord&gt;      &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n 1  1933     1 1933     Jan           31 180545 125579000    0.00144\n 2  1933     2 1933     Feb           28 165986 125579000    0.00132\n 3  1933     3 1933     Mar           31 183762 125579000    0.00146\n 4  1933     4 1933     Apr           30 171354 125579000    0.00136\n 5  1933     5 1933     May           31 174811 125579000    0.00139\n 6  1933     6 1933     Jun           30 169255 125579000    0.00135\n 7  1933     7 1933     Jul           31 180880 125579000    0.00144\n 8  1933     8 1933     Aug           31 181856 125579000    0.00145\n 9  1933     9 1933     Sep           30 167637 125579000    0.00133\n10  1933    10 1933     Oct           31 167055 125579000    0.00133\n# ℹ 986 more rows\n# ℹ 6 more variables: births_pct_day &lt;dbl&gt;, date &lt;date&gt;, seasonal &lt;dbl&gt;,\n#   trend &lt;dbl&gt;, remainder &lt;dbl&gt;, country &lt;chr&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap-4",
    "href": "slides/09-case-studies.html#tiled-heatmap-4",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer |&gt;\n    mutate(year_fct =\n             factor(year,\n                    levels = unique(year),\n                    ordered = TRUE),\n           month_fct = factor(month,\n                              levels = rev(c(1:12)),\n                              labels = rev(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                  \"May\", \"Jun\", \"Jul\", \"Aug\",\n                                  \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n                              ordered = TRUE)) |&gt;\n    select(year, month, year_fct, month_fct, everything()) |&gt;\n  filter(country == \"United States\") |&gt;\n    ggplot(aes(x = year_fct, y = month_fct))"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap-5",
    "href": "slides/09-case-studies.html#tiled-heatmap-5",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer |&gt;\n    mutate(year_fct =\n             factor(year,\n                    levels = unique(year),\n                    ordered = TRUE),\n           month_fct = factor(month,\n                              levels = rev(c(1:12)),\n                              labels = rev(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                  \"May\", \"Jun\", \"Jul\", \"Aug\",\n                                  \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n                              ordered = TRUE)) |&gt;\n    select(year, month, year_fct, month_fct, everything()) |&gt;\n  filter(country == \"United States\") |&gt;\n    ggplot(aes(x = year_fct, y = month_fct)) +\n    geom_tile(mapping = aes(fill = births_pct_day),\n              color = \"white\")"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap-6",
    "href": "slides/09-case-studies.html#tiled-heatmap-6",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer |&gt;\n    mutate(year_fct =\n             factor(year,\n                    levels = unique(year),\n                    ordered = TRUE),\n           month_fct = factor(month,\n                              levels = rev(c(1:12)),\n                              labels = rev(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                  \"May\", \"Jun\", \"Jul\", \"Aug\",\n                                  \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n                              ordered = TRUE)) |&gt;\n    select(year, month, year_fct, month_fct, everything()) |&gt;\n  filter(country == \"United States\") |&gt;\n    ggplot(aes(x = year_fct, y = month_fct)) +\n    geom_tile(mapping = aes(fill = births_pct_day),\n              color = \"white\") +\n   scale_x_discrete(breaks = seq(1940, 2010, 5))"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap-7",
    "href": "slides/09-case-studies.html#tiled-heatmap-7",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer |&gt;\n    mutate(year_fct =\n             factor(year,\n                    levels = unique(year),\n                    ordered = TRUE),\n           month_fct = factor(month,\n                              levels = rev(c(1:12)),\n                              labels = rev(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                  \"May\", \"Jun\", \"Jul\", \"Aug\",\n                                  \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n                              ordered = TRUE)) |&gt;\n    select(year, month, year_fct, month_fct, everything()) |&gt;\n  filter(country == \"United States\") |&gt;\n    ggplot(aes(x = year_fct, y = month_fct)) +\n    geom_tile(mapping = aes(fill = births_pct_day),\n              color = \"white\") +\n   scale_x_discrete(breaks = seq(1940, 2010, 5)) +\n   scale_fill_viridis_c(option = \"B\")"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap-8",
    "href": "slides/09-case-studies.html#tiled-heatmap-8",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer |&gt;\n    mutate(year_fct =\n             factor(year,\n                    levels = unique(year),\n                    ordered = TRUE),\n           month_fct = factor(month,\n                              levels = rev(c(1:12)),\n                              labels = rev(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                  \"May\", \"Jun\", \"Jul\", \"Aug\",\n                                  \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n                              ordered = TRUE)) |&gt;\n    select(year, month, year_fct, month_fct, everything()) |&gt;\n  filter(country == \"United States\") |&gt;\n    ggplot(aes(x = year_fct, y = month_fct)) +\n    geom_tile(mapping = aes(fill = births_pct_day),\n              color = \"white\") +\n   scale_x_discrete(breaks = seq(1940, 2010, 5)) +\n   scale_fill_viridis_c(option = \"B\") +\n  labs(x = NULL, y = NULL,\n       title = \"Monthly Birth Rates\",\n       fill = \"Average births per million people per day\",\n         caption = \"Data: US Census Bureau.\")"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap-9",
    "href": "slides/09-case-studies.html#tiled-heatmap-9",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer |&gt;\n    mutate(year_fct =\n             factor(year,\n                    levels = unique(year),\n                    ordered = TRUE),\n           month_fct = factor(month,\n                              levels = rev(c(1:12)),\n                              labels = rev(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                  \"May\", \"Jun\", \"Jul\", \"Aug\",\n                                  \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n                              ordered = TRUE)) |&gt;\n    select(year, month, year_fct, month_fct, everything()) |&gt;\n  filter(country == \"United States\") |&gt;\n    ggplot(aes(x = year_fct, y = month_fct)) +\n    geom_tile(mapping = aes(fill = births_pct_day),\n              color = \"white\") +\n   scale_x_discrete(breaks = seq(1940, 2010, 5)) +\n   scale_fill_viridis_c(option = \"B\") +\n  labs(x = NULL, y = NULL,\n       title = \"Monthly Birth Rates\",\n       fill = \"Average births per million people per day\",\n         caption = \"Data: US Census Bureau.\") +\n  coord_fixed()"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap-10",
    "href": "slides/09-case-studies.html#tiled-heatmap-10",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer |&gt;\n    mutate(year_fct =\n             factor(year,\n                    levels = unique(year),\n                    ordered = TRUE),\n           month_fct = factor(month,\n                              levels = rev(c(1:12)),\n                              labels = rev(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                  \"May\", \"Jun\", \"Jul\", \"Aug\",\n                                  \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n                              ordered = TRUE)) |&gt;\n    select(year, month, year_fct, month_fct, everything()) |&gt;\n  filter(country == \"United States\") |&gt;\n    ggplot(aes(x = year_fct, y = month_fct)) +\n    geom_tile(mapping = aes(fill = births_pct_day),\n              color = \"white\") +\n   scale_x_discrete(breaks = seq(1940, 2010, 5)) +\n   scale_fill_viridis_c(option = \"B\") +\n  labs(x = NULL, y = NULL,\n       title = \"Monthly Birth Rates\",\n       fill = \"Average births per million people per day\",\n         caption = \"Data: US Census Bureau.\") +\n  coord_fixed() +\n  guides(fill = guide_legend(keywidth = 3,\n                    label.position = \"bottom\"))"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap-11",
    "href": "slides/09-case-studies.html#tiled-heatmap-11",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer |&gt;\n    mutate(year_fct =\n             factor(year,\n                    levels = unique(year),\n                    ordered = TRUE),\n           month_fct = factor(month,\n                              levels = rev(c(1:12)),\n                              labels = rev(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                  \"May\", \"Jun\", \"Jul\", \"Aug\",\n                                  \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n                              ordered = TRUE)) |&gt;\n    select(year, month, year_fct, month_fct, everything()) |&gt;\n  filter(country == \"United States\") |&gt;\n    ggplot(aes(x = year_fct, y = month_fct)) +\n    geom_tile(mapping = aes(fill = births_pct_day),\n              color = \"white\") +\n   scale_x_discrete(breaks = seq(1940, 2010, 5)) +\n   scale_fill_viridis_c(option = \"B\") +\n  labs(x = NULL, y = NULL,\n       title = \"Monthly Birth Rates\",\n       fill = \"Average births per million people per day\",\n         caption = \"Data: US Census Bureau.\") +\n  coord_fixed() +\n  guides(fill = guide_legend(keywidth = 3,\n                    label.position = \"bottom\")) +\n  theme(legend.position = \"bottom\",\n        legend.justification = \"left\")"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap-12",
    "href": "slides/09-case-studies.html#tiled-heatmap-12",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer |&gt;\n    mutate(year_fct =\n             factor(year,\n                    levels = unique(year),\n                    ordered = TRUE),\n           month_fct = factor(month,\n                              levels = rev(c(1:12)),\n                              labels = rev(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                  \"May\", \"Jun\", \"Jul\", \"Aug\",\n                                  \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n                              ordered = TRUE)) |&gt;\n    select(year, month, year_fct, month_fct, everything()) |&gt;\n  filter(country == \"United States\") |&gt;\n    ggplot(aes(x = year_fct, y = month_fct)) +\n    geom_tile(mapping = aes(fill = births_pct_day),\n              color = \"white\") +\n   scale_x_discrete(breaks = seq(1940, 2010, 5)) +\n   scale_fill_viridis_c(option = \"B\") +\n  labs(x = NULL, y = NULL,\n       title = \"Monthly Birth Rates\",\n       fill = \"Average births per million people per day\",\n         caption = \"Data: US Census Bureau.\") +\n  coord_fixed() +\n  guides(fill = guide_legend(keywidth = 3,\n                    label.position = \"bottom\")) +\n  theme(legend.position = \"bottom\",\n        legend.justification = \"left\") -&gt;\n  p_tileboom"
  },
  {
    "objectID": "slides/09-case-studies.html#tiled-heatmap-13",
    "href": "slides/09-case-studies.html#tiled-heatmap-13",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Tiled Heatmap",
    "text": "Tiled Heatmap\n\n\n\nokboomer |&gt;\n    mutate(year_fct =\n             factor(year,\n                    levels = unique(year),\n                    ordered = TRUE),\n           month_fct = factor(month,\n                              levels = rev(c(1:12)),\n                              labels = rev(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                  \"May\", \"Jun\", \"Jul\", \"Aug\",\n                                  \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n                              ordered = TRUE)) |&gt;\n    select(year, month, year_fct, month_fct, everything()) |&gt;\n  filter(country == \"United States\") |&gt;\n    ggplot(aes(x = year_fct, y = month_fct)) +\n    geom_tile(mapping = aes(fill = births_pct_day),\n              color = \"white\") +\n   scale_x_discrete(breaks = seq(1940, 2010, 5)) +\n   scale_fill_viridis_c(option = \"B\") +\n  labs(x = NULL, y = NULL,\n       title = \"Monthly Birth Rates\",\n       fill = \"Average births per million people per day\",\n         caption = \"Data: US Census Bureau.\") +\n  coord_fixed() +\n  guides(fill = guide_legend(keywidth = 3,\n                    label.position = \"bottom\")) +\n  theme(legend.position = \"bottom\",\n        legend.justification = \"left\") -&gt;\n  p_tileboom"
  },
  {
    "objectID": "slides/09-case-studies.html#the-cavax-package",
    "href": "slides/09-case-studies.html#the-cavax-package",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "The cavax package",
    "text": "The cavax package\n\n# remotes::install_github(\"kjhealy/cavax)\nlibrary(cavax)\n\ncavax\n\n# A tibble: 7,032 × 13\n     code county name  type  district city  enrollment pbe_pct exempt med_exempt\n    &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n 1 1.10e5 ALAME… FAME… PUBL… ALAMEDA… NEWA…        109      13  12.8        0   \n 2 6.00e6 ALAME… COX … PUBL… ALAMEDA… OAKL…        115       1   0.87       0.87\n 3 6.00e6 ALAME… LAZE… PUBL… ALAMEDA… OAKL…         40       0   0          0   \n 4 1.24e5 ALAME… YU M… PUBL… ALAMEDA… OAKL…         52      10   9.62       0   \n 5 6.10e6 ALAME… AMEL… PUBL… ALAMEDA… ALAM…        128       2   1.56       0   \n 6 6.11e6 ALAME… BAY … PUBL… ALAMEDA… ALAM…         70       1   1.43       0   \n 7 6.09e6 ALAME… DONA… PUBL… ALAMEDA… ALAM…        100       3   3          0   \n 8 6.09e6 ALAME… EDIS… PUBL… ALAMEDA… ALAM…         70       1   1.43       0   \n 9 6.09e6 ALAME… FRAN… PUBL… ALAMEDA… ALAM…         95       1   1.05       1.05\n10 6.09e6 ALAME… FRAN… PUBL… ALAMEDA… ALAM…         50       2   2          0   \n# ℹ 7,022 more rows\n# ℹ 3 more variables: rel_exempt &lt;dbl&gt;, mwc &lt;fct&gt;, kind &lt;fct&gt;\n\n\nHere we will do some custom manual labeling."
  },
  {
    "objectID": "slides/09-case-studies.html#aux-info-panel",
    "href": "slides/09-case-studies.html#aux-info-panel",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Aux Info Panel",
    "text": "Aux Info Panel\n\n\n\nlibrary(ggbeeswarm)"
  },
  {
    "objectID": "slides/09-case-studies.html#aux-info-panel-1",
    "href": "slides/09-case-studies.html#aux-info-panel-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Aux Info Panel",
    "text": "Aux Info Panel\n\n\n\nlibrary(ggbeeswarm)\nmake_comma &lt;- scales::label_comma()"
  },
  {
    "objectID": "slides/09-case-studies.html#aux-info-panel-2",
    "href": "slides/09-case-studies.html#aux-info-panel-2",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Aux Info Panel",
    "text": "Aux Info Panel\n\n\n\nlibrary(ggbeeswarm)\nmake_comma &lt;- scales::label_comma()\n\ncavax\n\n\n\n\n# A tibble: 7,032 × 13\n     code county name  type  district city  enrollment pbe_pct exempt med_exempt\n    &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n 1 1.10e5 ALAME… FAME… PUBL… ALAMEDA… NEWA…        109      13  12.8        0   \n 2 6.00e6 ALAME… COX … PUBL… ALAMEDA… OAKL…        115       1   0.87       0.87\n 3 6.00e6 ALAME… LAZE… PUBL… ALAMEDA… OAKL…         40       0   0          0   \n 4 1.24e5 ALAME… YU M… PUBL… ALAMEDA… OAKL…         52      10   9.62       0   \n 5 6.10e6 ALAME… AMEL… PUBL… ALAMEDA… ALAM…        128       2   1.56       0   \n 6 6.11e6 ALAME… BAY … PUBL… ALAMEDA… ALAM…         70       1   1.43       0   \n 7 6.09e6 ALAME… DONA… PUBL… ALAMEDA… ALAM…        100       3   3          0   \n 8 6.09e6 ALAME… EDIS… PUBL… ALAMEDA… ALAM…         70       1   1.43       0   \n 9 6.09e6 ALAME… FRAN… PUBL… ALAMEDA… ALAM…         95       1   1.05       1.05\n10 6.09e6 ALAME… FRAN… PUBL… ALAMEDA… ALAM…         50       2   2          0   \n# ℹ 7,022 more rows\n# ℹ 3 more variables: rel_exempt &lt;dbl&gt;, mwc &lt;fct&gt;, kind &lt;fct&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#aux-info-panel-3",
    "href": "slides/09-case-studies.html#aux-info-panel-3",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Aux Info Panel",
    "text": "Aux Info Panel\n\n\n\nlibrary(ggbeeswarm)\nmake_comma &lt;- scales::label_comma()\n\ncavax |&gt;\n  group_by(mwc)\n\n\n\n\n# A tibble: 7,032 × 13\n# Groups:   mwc [11]\n     code county name  type  district city  enrollment pbe_pct exempt med_exempt\n    &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n 1 1.10e5 ALAME… FAME… PUBL… ALAMEDA… NEWA…        109      13  12.8        0   \n 2 6.00e6 ALAME… COX … PUBL… ALAMEDA… OAKL…        115       1   0.87       0.87\n 3 6.00e6 ALAME… LAZE… PUBL… ALAMEDA… OAKL…         40       0   0          0   \n 4 1.24e5 ALAME… YU M… PUBL… ALAMEDA… OAKL…         52      10   9.62       0   \n 5 6.10e6 ALAME… AMEL… PUBL… ALAMEDA… ALAM…        128       2   1.56       0   \n 6 6.11e6 ALAME… BAY … PUBL… ALAMEDA… ALAM…         70       1   1.43       0   \n 7 6.09e6 ALAME… DONA… PUBL… ALAMEDA… ALAM…        100       3   3          0   \n 8 6.09e6 ALAME… EDIS… PUBL… ALAMEDA… ALAM…         70       1   1.43       0   \n 9 6.09e6 ALAME… FRAN… PUBL… ALAMEDA… ALAM…         95       1   1.05       1.05\n10 6.09e6 ALAME… FRAN… PUBL… ALAMEDA… ALAM…         50       2   2          0   \n# ℹ 7,022 more rows\n# ℹ 3 more variables: rel_exempt &lt;dbl&gt;, mwc &lt;fct&gt;, kind &lt;fct&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#aux-info-panel-4",
    "href": "slides/09-case-studies.html#aux-info-panel-4",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Aux Info Panel",
    "text": "Aux Info Panel\n\n\n\nlibrary(ggbeeswarm)\nmake_comma &lt;- scales::label_comma()\n\ncavax |&gt;\n  group_by(mwc) |&gt;\n  summarize(n_schools=n(),\n            n_students = sum(enrollment, na.rm=TRUE))\n\n\n\n\n# A tibble: 11 × 3\n   mwc                          n_schools n_students\n   &lt;fct&gt;                            &lt;int&gt;      &lt;dbl&gt;\n 1 Public                            5314     472802\n 2 Charter                            314      19863\n 3 Private Non-Specific               591      16697\n 4 Private Christian                  336       8836\n 5 Private Catholic                   334       9869\n 6 Private Montessori                  99       2112\n 7 Private Waldorf                     16        513\n 8 Charter Montessori                   5        227\n 9 Public Montessori                   11        706\n10 Private Christian Montessori         4         78\n11 Private Jewish/Islamic               8        237"
  },
  {
    "objectID": "slides/09-case-studies.html#aux-info-panel-5",
    "href": "slides/09-case-studies.html#aux-info-panel-5",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Aux Info Panel",
    "text": "Aux Info Panel\n\n\n\nlibrary(ggbeeswarm)\nmake_comma &lt;- scales::label_comma()\n\ncavax |&gt;\n  group_by(mwc) |&gt;\n  summarize(n_schools=n(),\n            n_students = sum(enrollment, na.rm=TRUE)) |&gt;\n  drop_na()\n\n\n\n\n# A tibble: 11 × 3\n   mwc                          n_schools n_students\n   &lt;fct&gt;                            &lt;int&gt;      &lt;dbl&gt;\n 1 Public                            5314     472802\n 2 Charter                            314      19863\n 3 Private Non-Specific               591      16697\n 4 Private Christian                  336       8836\n 5 Private Catholic                   334       9869\n 6 Private Montessori                  99       2112\n 7 Private Waldorf                     16        513\n 8 Charter Montessori                   5        227\n 9 Public Montessori                   11        706\n10 Private Christian Montessori         4         78\n11 Private Jewish/Islamic               8        237"
  },
  {
    "objectID": "slides/09-case-studies.html#aux-info-panel-6",
    "href": "slides/09-case-studies.html#aux-info-panel-6",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Aux Info Panel",
    "text": "Aux Info Panel\n\n\n\nlibrary(ggbeeswarm)\nmake_comma &lt;- scales::label_comma()\n\ncavax |&gt;\n  group_by(mwc) |&gt;\n  summarize(n_schools=n(),\n            n_students = sum(enrollment, na.rm=TRUE)) |&gt;\n  drop_na() |&gt;\n  mutate(n_schools_fmt = make_comma(n_schools),\n         n_students_fmt = make_comma(n_students),\n         info_schools = paste(n_schools_fmt, \"Schools Enrolling\"),\n         info_students = paste(n_students_fmt, \"Kindergarteners\"))\n\n\n\n\n# A tibble: 11 × 7\n   mwc            n_schools n_students n_schools_fmt n_students_fmt info_schools\n   &lt;fct&gt;              &lt;int&gt;      &lt;dbl&gt; &lt;chr&gt;         &lt;chr&gt;          &lt;chr&gt;       \n 1 Public              5314     472802 5,314         472,802        5,314 Schoo…\n 2 Charter              314      19863 314           19,863         314 Schools…\n 3 Private Non-S…       591      16697 591           16,697         591 Schools…\n 4 Private Chris…       336       8836 336           8,836          336 Schools…\n 5 Private Catho…       334       9869 334           9,869          334 Schools…\n 6 Private Monte…        99       2112 99            2,112          99 Schools …\n 7 Private Waldo…        16        513 16            513            16 Schools …\n 8 Charter Monte…         5        227 5             227            5 Schools E…\n 9 Public Montes…        11        706 11            706            11 Schools …\n10 Private Chris…         4         78 4             78             4 Schools E…\n11 Private Jewis…         8        237 8             237            8 Schools E…\n# ℹ 1 more variable: info_students &lt;chr&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#aux-info-panel-7",
    "href": "slides/09-case-studies.html#aux-info-panel-7",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "Aux Info Panel",
    "text": "Aux Info Panel\n\n\n\nlibrary(ggbeeswarm)\nmake_comma &lt;- scales::label_comma()\n\ncavax |&gt;\n  group_by(mwc) |&gt;\n  summarize(n_schools=n(),\n            n_students = sum(enrollment, na.rm=TRUE)) |&gt;\n  drop_na() |&gt;\n  mutate(n_schools_fmt = make_comma(n_schools),\n         n_students_fmt = make_comma(n_students),\n         info_schools = paste(n_schools_fmt, \"Schools Enrolling\"),\n         info_students = paste(n_students_fmt, \"Kindergarteners\")) -&gt;\n  aux_info"
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge",
    "href": "slides/09-case-studies.html#a-little-kludge",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info\n\n\n\n\n# A tibble: 11 × 7\n   mwc            n_schools n_students n_schools_fmt n_students_fmt info_schools\n   &lt;fct&gt;              &lt;int&gt;      &lt;dbl&gt; &lt;chr&gt;         &lt;chr&gt;          &lt;chr&gt;       \n 1 Public              5314     472802 5,314         472,802        5,314 Schoo…\n 2 Charter              314      19863 314           19,863         314 Schools…\n 3 Private Non-S…       591      16697 591           16,697         591 Schools…\n 4 Private Chris…       336       8836 336           8,836          336 Schools…\n 5 Private Catho…       334       9869 334           9,869          334 Schools…\n 6 Private Monte…        99       2112 99            2,112          99 Schools …\n 7 Private Waldo…        16        513 16            513            16 Schools …\n 8 Charter Monte…         5        227 5             227            5 Schools E…\n 9 Public Montes…        11        706 11            706            11 Schools …\n10 Private Chris…         4         78 4             78             4 Schools E…\n11 Private Jewis…         8        237 8             237            8 Schools E…\n# ℹ 1 more variable: info_students &lt;chr&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-1",
    "href": "slides/09-case-studies.html#a-little-kludge-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students)\n\n\n\n\n# A tibble: 11 × 3\n   mwc                          info_schools            info_students          \n   &lt;fct&gt;                        &lt;chr&gt;                   &lt;chr&gt;                  \n 1 Public                       5,314 Schools Enrolling 472,802 Kindergarteners\n 2 Charter                      314 Schools Enrolling   19,863 Kindergarteners \n 3 Private Non-Specific         591 Schools Enrolling   16,697 Kindergarteners \n 4 Private Christian            336 Schools Enrolling   8,836 Kindergarteners  \n 5 Private Catholic             334 Schools Enrolling   9,869 Kindergarteners  \n 6 Private Montessori           99 Schools Enrolling    2,112 Kindergarteners  \n 7 Private Waldorf              16 Schools Enrolling    513 Kindergarteners    \n 8 Charter Montessori           5 Schools Enrolling     227 Kindergarteners    \n 9 Public Montessori            11 Schools Enrolling    706 Kindergarteners    \n10 Private Christian Montessori 4 Schools Enrolling     78 Kindergarteners     \n11 Private Jewish/Islamic       8 Schools Enrolling     237 Kindergarteners"
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-2",
    "href": "slides/09-case-studies.html#a-little-kludge-2",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character))\n\n\n\n\n# A tibble: 11 × 3\n   mwc                          info_schools            info_students          \n   &lt;chr&gt;                        &lt;chr&gt;                   &lt;chr&gt;                  \n 1 Public                       5,314 Schools Enrolling 472,802 Kindergarteners\n 2 Charter                      314 Schools Enrolling   19,863 Kindergarteners \n 3 Private Non-Specific         591 Schools Enrolling   16,697 Kindergarteners \n 4 Private Christian            336 Schools Enrolling   8,836 Kindergarteners  \n 5 Private Catholic             334 Schools Enrolling   9,869 Kindergarteners  \n 6 Private Montessori           99 Schools Enrolling    2,112 Kindergarteners  \n 7 Private Waldorf              16 Schools Enrolling    513 Kindergarteners    \n 8 Charter Montessori           5 Schools Enrolling     227 Kindergarteners    \n 9 Public Montessori            11 Schools Enrolling    706 Kindergarteners    \n10 Private Christian Montessori 4 Schools Enrolling     78 Kindergarteners     \n11 Private Jewish/Islamic       8 Schools Enrolling     237 Kindergarteners"
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-3",
    "href": "slides/09-case-studies.html#a-little-kludge-3",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_by(mwc)\n\n\n\n\n# A tibble: 11 × 3\n# Groups:   mwc [11]\n   mwc                          info_schools            info_students          \n   &lt;chr&gt;                        &lt;chr&gt;                   &lt;chr&gt;                  \n 1 Public                       5,314 Schools Enrolling 472,802 Kindergarteners\n 2 Charter                      314 Schools Enrolling   19,863 Kindergarteners \n 3 Private Non-Specific         591 Schools Enrolling   16,697 Kindergarteners \n 4 Private Christian            336 Schools Enrolling   8,836 Kindergarteners  \n 5 Private Catholic             334 Schools Enrolling   9,869 Kindergarteners  \n 6 Private Montessori           99 Schools Enrolling    2,112 Kindergarteners  \n 7 Private Waldorf              16 Schools Enrolling    513 Kindergarteners    \n 8 Charter Montessori           5 Schools Enrolling     227 Kindergarteners    \n 9 Public Montessori            11 Schools Enrolling    706 Kindergarteners    \n10 Private Christian Montessori 4 Schools Enrolling     78 Kindergarteners     \n11 Private Jewish/Islamic       8 Schools Enrolling     237 Kindergarteners"
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-4",
    "href": "slides/09-case-studies.html#a-little-kludge-4",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_by(mwc) |&gt;\n  group_keys()\n\n\n\n\n# A tibble: 11 × 1\n   mwc                         \n   &lt;chr&gt;                       \n 1 Charter                     \n 2 Charter Montessori          \n 3 Private Catholic            \n 4 Private Christian           \n 5 Private Christian Montessori\n 6 Private Jewish/Islamic      \n 7 Private Montessori          \n 8 Private Non-Specific        \n 9 Private Waldorf             \n10 Public                      \n11 Public Montessori"
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-5",
    "href": "slides/09-case-studies.html#a-little-kludge-5",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_by(mwc) |&gt;\n  group_keys() |&gt;\n  pull()\n\n\n\n\n [1] \"Charter\"                      \"Charter Montessori\"          \n [3] \"Private Catholic\"             \"Private Christian\"           \n [5] \"Private Christian Montessori\" \"Private Jewish/Islamic\"      \n [7] \"Private Montessori\"           \"Private Non-Specific\"        \n [9] \"Private Waldorf\"              \"Public\"                      \n[11] \"Public Montessori\""
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-6",
    "href": "slides/09-case-studies.html#a-little-kludge-6",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_by(mwc) |&gt;\n  group_keys() |&gt;\n  pull() |&gt;\n  as.character()\n\n\n\n\n [1] \"Charter\"                      \"Charter Montessori\"          \n [3] \"Private Catholic\"             \"Private Christian\"           \n [5] \"Private Christian Montessori\" \"Private Jewish/Islamic\"      \n [7] \"Private Montessori\"           \"Private Non-Specific\"        \n [9] \"Private Waldorf\"              \"Public\"                      \n[11] \"Public Montessori\""
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-7",
    "href": "slides/09-case-studies.html#a-little-kludge-7",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_by(mwc) |&gt;\n  group_keys() |&gt;\n  pull() |&gt;\n  as.character() -&gt;\n  keys"
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-8",
    "href": "slides/09-case-studies.html#a-little-kludge-8",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_by(mwc) |&gt;\n  group_keys() |&gt;\n  pull() |&gt;\n  as.character() -&gt;\n  keys\n\naux_info\n\n\n\n\n# A tibble: 11 × 7\n   mwc            n_schools n_students n_schools_fmt n_students_fmt info_schools\n   &lt;fct&gt;              &lt;int&gt;      &lt;dbl&gt; &lt;chr&gt;         &lt;chr&gt;          &lt;chr&gt;       \n 1 Public              5314     472802 5,314         472,802        5,314 Schoo…\n 2 Charter              314      19863 314           19,863         314 Schools…\n 3 Private Non-S…       591      16697 591           16,697         591 Schools…\n 4 Private Chris…       336       8836 336           8,836          336 Schools…\n 5 Private Catho…       334       9869 334           9,869          334 Schools…\n 6 Private Monte…        99       2112 99            2,112          99 Schools …\n 7 Private Waldo…        16        513 16            513            16 Schools …\n 8 Charter Monte…         5        227 5             227            5 Schools E…\n 9 Public Montes…        11        706 11            706            11 Schools …\n10 Private Chris…         4         78 4             78             4 Schools E…\n11 Private Jewis…         8        237 8             237            8 Schools E…\n# ℹ 1 more variable: info_students &lt;chr&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-9",
    "href": "slides/09-case-studies.html#a-little-kludge-9",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_by(mwc) |&gt;\n  group_keys() |&gt;\n  pull() |&gt;\n  as.character() -&gt;\n  keys\n\naux_info |&gt;\n  select(mwc, info_schools, info_students)\n\n\n\n\n# A tibble: 11 × 3\n   mwc                          info_schools            info_students          \n   &lt;fct&gt;                        &lt;chr&gt;                   &lt;chr&gt;                  \n 1 Public                       5,314 Schools Enrolling 472,802 Kindergarteners\n 2 Charter                      314 Schools Enrolling   19,863 Kindergarteners \n 3 Private Non-Specific         591 Schools Enrolling   16,697 Kindergarteners \n 4 Private Christian            336 Schools Enrolling   8,836 Kindergarteners  \n 5 Private Catholic             334 Schools Enrolling   9,869 Kindergarteners  \n 6 Private Montessori           99 Schools Enrolling    2,112 Kindergarteners  \n 7 Private Waldorf              16 Schools Enrolling    513 Kindergarteners    \n 8 Charter Montessori           5 Schools Enrolling     227 Kindergarteners    \n 9 Public Montessori            11 Schools Enrolling    706 Kindergarteners    \n10 Private Christian Montessori 4 Schools Enrolling     78 Kindergarteners     \n11 Private Jewish/Islamic       8 Schools Enrolling     237 Kindergarteners"
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-10",
    "href": "slides/09-case-studies.html#a-little-kludge-10",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_by(mwc) |&gt;\n  group_keys() |&gt;\n  pull() |&gt;\n  as.character() -&gt;\n  keys\n\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character))\n\n\n\n\n# A tibble: 11 × 3\n   mwc                          info_schools            info_students          \n   &lt;chr&gt;                        &lt;chr&gt;                   &lt;chr&gt;                  \n 1 Public                       5,314 Schools Enrolling 472,802 Kindergarteners\n 2 Charter                      314 Schools Enrolling   19,863 Kindergarteners \n 3 Private Non-Specific         591 Schools Enrolling   16,697 Kindergarteners \n 4 Private Christian            336 Schools Enrolling   8,836 Kindergarteners  \n 5 Private Catholic             334 Schools Enrolling   9,869 Kindergarteners  \n 6 Private Montessori           99 Schools Enrolling    2,112 Kindergarteners  \n 7 Private Waldorf              16 Schools Enrolling    513 Kindergarteners    \n 8 Charter Montessori           5 Schools Enrolling     227 Kindergarteners    \n 9 Public Montessori            11 Schools Enrolling    706 Kindergarteners    \n10 Private Christian Montessori 4 Schools Enrolling     78 Kindergarteners     \n11 Private Jewish/Islamic       8 Schools Enrolling     237 Kindergarteners"
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-11",
    "href": "slides/09-case-studies.html#a-little-kludge-11",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_by(mwc) |&gt;\n  group_keys() |&gt;\n  pull() |&gt;\n  as.character() -&gt;\n  keys\n\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_split(mwc)\n\n\n\n\n&lt;list_of&lt;\n  tbl_df&lt;\n    mwc          : character\n    info_schools : character\n    info_students: character\n  &gt;\n&gt;[11]&gt;\n[[1]]\n# A tibble: 1 × 3\n  mwc     info_schools          info_students         \n  &lt;chr&gt;   &lt;chr&gt;                 &lt;chr&gt;                 \n1 Charter 314 Schools Enrolling 19,863 Kindergarteners\n\n[[2]]\n# A tibble: 1 × 3\n  mwc                info_schools        info_students      \n  &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;              \n1 Charter Montessori 5 Schools Enrolling 227 Kindergarteners\n\n[[3]]\n# A tibble: 1 × 3\n  mwc              info_schools          info_students        \n  &lt;chr&gt;            &lt;chr&gt;                 &lt;chr&gt;                \n1 Private Catholic 334 Schools Enrolling 9,869 Kindergarteners\n\n[[4]]\n# A tibble: 1 × 3\n  mwc               info_schools          info_students        \n  &lt;chr&gt;             &lt;chr&gt;                 &lt;chr&gt;                \n1 Private Christian 336 Schools Enrolling 8,836 Kindergarteners\n\n[[5]]\n# A tibble: 1 × 3\n  mwc                          info_schools        info_students     \n  &lt;chr&gt;                        &lt;chr&gt;               &lt;chr&gt;             \n1 Private Christian Montessori 4 Schools Enrolling 78 Kindergarteners\n\n[[6]]\n# A tibble: 1 × 3\n  mwc                    info_schools        info_students      \n  &lt;chr&gt;                  &lt;chr&gt;               &lt;chr&gt;              \n1 Private Jewish/Islamic 8 Schools Enrolling 237 Kindergarteners\n\n[[7]]\n# A tibble: 1 × 3\n  mwc                info_schools         info_students        \n  &lt;chr&gt;              &lt;chr&gt;                &lt;chr&gt;                \n1 Private Montessori 99 Schools Enrolling 2,112 Kindergarteners\n\n[[8]]\n# A tibble: 1 × 3\n  mwc                  info_schools          info_students         \n  &lt;chr&gt;                &lt;chr&gt;                 &lt;chr&gt;                 \n1 Private Non-Specific 591 Schools Enrolling 16,697 Kindergarteners\n\n[[9]]\n# A tibble: 1 × 3\n  mwc             info_schools         info_students      \n  &lt;chr&gt;           &lt;chr&gt;                &lt;chr&gt;              \n1 Private Waldorf 16 Schools Enrolling 513 Kindergarteners\n\n[[10]]\n# A tibble: 1 × 3\n  mwc    info_schools            info_students          \n  &lt;chr&gt;  &lt;chr&gt;                   &lt;chr&gt;                  \n1 Public 5,314 Schools Enrolling 472,802 Kindergarteners\n\n[[11]]\n# A tibble: 1 × 3\n  mwc               info_schools         info_students      \n  &lt;chr&gt;             &lt;chr&gt;                &lt;chr&gt;              \n1 Public Montessori 11 Schools Enrolling 706 Kindergarteners"
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-12",
    "href": "slides/09-case-studies.html#a-little-kludge-12",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_by(mwc) |&gt;\n  group_keys() |&gt;\n  pull() |&gt;\n  as.character() -&gt;\n  keys\n\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_split(mwc) |&gt;\n  set_names(keys)   # There's a better way ...\n\n\n\n\n&lt;list_of&lt;\n  tbl_df&lt;\n    mwc          : character\n    info_schools : character\n    info_students: character\n  &gt;\n&gt;[11]&gt;\n$Charter\n# A tibble: 1 × 3\n  mwc     info_schools          info_students         \n  &lt;chr&gt;   &lt;chr&gt;                 &lt;chr&gt;                 \n1 Charter 314 Schools Enrolling 19,863 Kindergarteners\n\n$`Charter Montessori`\n# A tibble: 1 × 3\n  mwc                info_schools        info_students      \n  &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;              \n1 Charter Montessori 5 Schools Enrolling 227 Kindergarteners\n\n$`Private Catholic`\n# A tibble: 1 × 3\n  mwc              info_schools          info_students        \n  &lt;chr&gt;            &lt;chr&gt;                 &lt;chr&gt;                \n1 Private Catholic 334 Schools Enrolling 9,869 Kindergarteners\n\n$`Private Christian`\n# A tibble: 1 × 3\n  mwc               info_schools          info_students        \n  &lt;chr&gt;             &lt;chr&gt;                 &lt;chr&gt;                \n1 Private Christian 336 Schools Enrolling 8,836 Kindergarteners\n\n$`Private Christian Montessori`\n# A tibble: 1 × 3\n  mwc                          info_schools        info_students     \n  &lt;chr&gt;                        &lt;chr&gt;               &lt;chr&gt;             \n1 Private Christian Montessori 4 Schools Enrolling 78 Kindergarteners\n\n$`Private Jewish/Islamic`\n# A tibble: 1 × 3\n  mwc                    info_schools        info_students      \n  &lt;chr&gt;                  &lt;chr&gt;               &lt;chr&gt;              \n1 Private Jewish/Islamic 8 Schools Enrolling 237 Kindergarteners\n\n$`Private Montessori`\n# A tibble: 1 × 3\n  mwc                info_schools         info_students        \n  &lt;chr&gt;              &lt;chr&gt;                &lt;chr&gt;                \n1 Private Montessori 99 Schools Enrolling 2,112 Kindergarteners\n\n$`Private Non-Specific`\n# A tibble: 1 × 3\n  mwc                  info_schools          info_students         \n  &lt;chr&gt;                &lt;chr&gt;                 &lt;chr&gt;                 \n1 Private Non-Specific 591 Schools Enrolling 16,697 Kindergarteners\n\n$`Private Waldorf`\n# A tibble: 1 × 3\n  mwc             info_schools         info_students      \n  &lt;chr&gt;           &lt;chr&gt;                &lt;chr&gt;              \n1 Private Waldorf 16 Schools Enrolling 513 Kindergarteners\n\n$Public\n# A tibble: 1 × 3\n  mwc    info_schools            info_students          \n  &lt;chr&gt;  &lt;chr&gt;                   &lt;chr&gt;                  \n1 Public 5,314 Schools Enrolling 472,802 Kindergarteners\n\n$`Public Montessori`\n# A tibble: 1 × 3\n  mwc               info_schools         info_students      \n  &lt;chr&gt;             &lt;chr&gt;                &lt;chr&gt;              \n1 Public Montessori 11 Schools Enrolling 706 Kindergarteners"
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-13",
    "href": "slides/09-case-studies.html#a-little-kludge-13",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_by(mwc) |&gt;\n  group_keys() |&gt;\n  pull() |&gt;\n  as.character() -&gt;\n  keys\n\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_split(mwc) |&gt;\n  set_names(keys) |&gt;  # There's a better way ...\n  map_chr(.f = paste, sep = \"\", collapse = \"\\n\")\n\n\n\n\n                                                                Charter \n               \"Charter\\n314 Schools Enrolling\\n19,863 Kindergarteners\" \n                                                     Charter Montessori \n         \"Charter Montessori\\n5 Schools Enrolling\\n227 Kindergarteners\" \n                                                       Private Catholic \n       \"Private Catholic\\n334 Schools Enrolling\\n9,869 Kindergarteners\" \n                                                      Private Christian \n      \"Private Christian\\n336 Schools Enrolling\\n8,836 Kindergarteners\" \n                                           Private Christian Montessori \n\"Private Christian Montessori\\n4 Schools Enrolling\\n78 Kindergarteners\" \n                                                 Private Jewish/Islamic \n     \"Private Jewish/Islamic\\n8 Schools Enrolling\\n237 Kindergarteners\" \n                                                     Private Montessori \n      \"Private Montessori\\n99 Schools Enrolling\\n2,112 Kindergarteners\" \n                                                   Private Non-Specific \n  \"Private Non-Specific\\n591 Schools Enrolling\\n16,697 Kindergarteners\" \n                                                        Private Waldorf \n           \"Private Waldorf\\n16 Schools Enrolling\\n513 Kindergarteners\" \n                                                                 Public \n             \"Public\\n5,314 Schools Enrolling\\n472,802 Kindergarteners\" \n                                                      Public Montessori \n         \"Public Montessori\\n11 Schools Enrolling\\n706 Kindergarteners\""
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-14",
    "href": "slides/09-case-studies.html#a-little-kludge-14",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_by(mwc) |&gt;\n  group_keys() |&gt;\n  pull() |&gt;\n  as.character() -&gt;\n  keys\n\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_split(mwc) |&gt;\n  set_names(keys) |&gt;  # There's a better way ...\n  map_chr(.f = paste, sep = \"\", collapse = \"\\n\") -&gt;\n  special_x_labs"
  },
  {
    "objectID": "slides/09-case-studies.html#a-little-kludge-15",
    "href": "slides/09-case-studies.html#a-little-kludge-15",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "A little kludge",
    "text": "A little kludge\n\n\n\n## This is not an efficient way to do this\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_by(mwc) |&gt;\n  group_keys() |&gt;\n  pull() |&gt;\n  as.character() -&gt;\n  keys\n\naux_info |&gt;\n  select(mwc, info_schools, info_students) |&gt;\n  mutate(across(everything(), as.character)) |&gt;\n  group_split(mwc) |&gt;\n  set_names(keys) |&gt;  # There's a better way ...\n  map_chr(.f = paste, sep = \"\", collapse = \"\\n\") -&gt;\n  special_x_labs"
  },
  {
    "objectID": "slides/09-case-studies.html#at-last-the-beeplot",
    "href": "slides/09-case-studies.html#at-last-the-beeplot",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "At last, the Beeplot",
    "text": "At last, the Beeplot\n\n\n\ncavax\n\n\n\n\n# A tibble: 7,032 × 13\n     code county name  type  district city  enrollment pbe_pct exempt med_exempt\n    &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n 1 1.10e5 ALAME… FAME… PUBL… ALAMEDA… NEWA…        109      13  12.8        0   \n 2 6.00e6 ALAME… COX … PUBL… ALAMEDA… OAKL…        115       1   0.87       0.87\n 3 6.00e6 ALAME… LAZE… PUBL… ALAMEDA… OAKL…         40       0   0          0   \n 4 1.24e5 ALAME… YU M… PUBL… ALAMEDA… OAKL…         52      10   9.62       0   \n 5 6.10e6 ALAME… AMEL… PUBL… ALAMEDA… ALAM…        128       2   1.56       0   \n 6 6.11e6 ALAME… BAY … PUBL… ALAMEDA… ALAM…         70       1   1.43       0   \n 7 6.09e6 ALAME… DONA… PUBL… ALAMEDA… ALAM…        100       3   3          0   \n 8 6.09e6 ALAME… EDIS… PUBL… ALAMEDA… ALAM…         70       1   1.43       0   \n 9 6.09e6 ALAME… FRAN… PUBL… ALAMEDA… ALAM…         95       1   1.05       1.05\n10 6.09e6 ALAME… FRAN… PUBL… ALAMEDA… ALAM…         50       2   2          0   \n# ℹ 7,022 more rows\n# ℹ 3 more variables: rel_exempt &lt;dbl&gt;, mwc &lt;fct&gt;, kind &lt;fct&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#at-last-the-beeplot-1",
    "href": "slides/09-case-studies.html#at-last-the-beeplot-1",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "At last, the Beeplot",
    "text": "At last, the Beeplot\n\n\n\ncavax |&gt;\n  filter(mwc %nin% c(\"Private Christian Montessori\",\n                     \"Charter Montessori\",\n                     \"Private Jewish/Islamic\"))\n\n\n\n\n# A tibble: 7,015 × 13\n     code county name  type  district city  enrollment pbe_pct exempt med_exempt\n    &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n 1 1.10e5 ALAME… FAME… PUBL… ALAMEDA… NEWA…        109      13  12.8        0   \n 2 6.00e6 ALAME… COX … PUBL… ALAMEDA… OAKL…        115       1   0.87       0.87\n 3 6.00e6 ALAME… LAZE… PUBL… ALAMEDA… OAKL…         40       0   0          0   \n 4 1.24e5 ALAME… YU M… PUBL… ALAMEDA… OAKL…         52      10   9.62       0   \n 5 6.10e6 ALAME… AMEL… PUBL… ALAMEDA… ALAM…        128       2   1.56       0   \n 6 6.11e6 ALAME… BAY … PUBL… ALAMEDA… ALAM…         70       1   1.43       0   \n 7 6.09e6 ALAME… DONA… PUBL… ALAMEDA… ALAM…        100       3   3          0   \n 8 6.09e6 ALAME… EDIS… PUBL… ALAMEDA… ALAM…         70       1   1.43       0   \n 9 6.09e6 ALAME… FRAN… PUBL… ALAMEDA… ALAM…         95       1   1.05       1.05\n10 6.09e6 ALAME… FRAN… PUBL… ALAMEDA… ALAM…         50       2   2          0   \n# ℹ 7,005 more rows\n# ℹ 3 more variables: rel_exempt &lt;dbl&gt;, mwc &lt;fct&gt;, kind &lt;fct&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#at-last-the-beeplot-2",
    "href": "slides/09-case-studies.html#at-last-the-beeplot-2",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "At last, the Beeplot",
    "text": "At last, the Beeplot\n\n\n\ncavax |&gt;\n  filter(mwc %nin% c(\"Private Christian Montessori\",\n                     \"Charter Montessori\",\n                     \"Private Jewish/Islamic\")) |&gt;\n  left_join(aux_info, by = \"mwc\")\n\n\n\n\n# A tibble: 7,015 × 19\n     code county name  type  district city  enrollment pbe_pct exempt med_exempt\n    &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n 1 1.10e5 ALAME… FAME… PUBL… ALAMEDA… NEWA…        109      13  12.8        0   \n 2 6.00e6 ALAME… COX … PUBL… ALAMEDA… OAKL…        115       1   0.87       0.87\n 3 6.00e6 ALAME… LAZE… PUBL… ALAMEDA… OAKL…         40       0   0          0   \n 4 1.24e5 ALAME… YU M… PUBL… ALAMEDA… OAKL…         52      10   9.62       0   \n 5 6.10e6 ALAME… AMEL… PUBL… ALAMEDA… ALAM…        128       2   1.56       0   \n 6 6.11e6 ALAME… BAY … PUBL… ALAMEDA… ALAM…         70       1   1.43       0   \n 7 6.09e6 ALAME… DONA… PUBL… ALAMEDA… ALAM…        100       3   3          0   \n 8 6.09e6 ALAME… EDIS… PUBL… ALAMEDA… ALAM…         70       1   1.43       0   \n 9 6.09e6 ALAME… FRAN… PUBL… ALAMEDA… ALAM…         95       1   1.05       1.05\n10 6.09e6 ALAME… FRAN… PUBL… ALAMEDA… ALAM…         50       2   2          0   \n# ℹ 7,005 more rows\n# ℹ 9 more variables: rel_exempt &lt;dbl&gt;, mwc &lt;fct&gt;, kind &lt;fct&gt;, n_schools &lt;int&gt;,\n#   n_students &lt;dbl&gt;, n_schools_fmt &lt;chr&gt;, n_students_fmt &lt;chr&gt;,\n#   info_schools &lt;chr&gt;, info_students &lt;chr&gt;"
  },
  {
    "objectID": "slides/09-case-studies.html#at-last-the-beeplot-3",
    "href": "slides/09-case-studies.html#at-last-the-beeplot-3",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "At last, the Beeplot",
    "text": "At last, the Beeplot\n\n\n\ncavax |&gt;\n  filter(mwc %nin% c(\"Private Christian Montessori\",\n                     \"Charter Montessori\",\n                     \"Private Jewish/Islamic\")) |&gt;\n  left_join(aux_info, by = \"mwc\") |&gt;\n  ggplot(mapping =\n           aes(y = pbe_pct,\n               x = reorder(mwc, -n_students),\n               size = enrollment,\n               fill = mwc))"
  },
  {
    "objectID": "slides/09-case-studies.html#at-last-the-beeplot-4",
    "href": "slides/09-case-studies.html#at-last-the-beeplot-4",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "At last, the Beeplot",
    "text": "At last, the Beeplot\n\n\n\ncavax |&gt;\n  filter(mwc %nin% c(\"Private Christian Montessori\",\n                     \"Charter Montessori\",\n                     \"Private Jewish/Islamic\")) |&gt;\n  left_join(aux_info, by = \"mwc\") |&gt;\n  ggplot(mapping =\n           aes(y = pbe_pct,\n               x = reorder(mwc, -n_students),\n               size = enrollment,\n               fill = mwc)) +\n  geom_quasirandom(shape=21,\n        alpha = 0.4,color=\"gray30\",\n        method = \"quasirandom\",\n        varwidth = FALSE,\n        bandwidth = 0.9)"
  },
  {
    "objectID": "slides/09-case-studies.html#at-last-the-beeplot-5",
    "href": "slides/09-case-studies.html#at-last-the-beeplot-5",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "At last, the Beeplot",
    "text": "At last, the Beeplot\n\n\n\ncavax |&gt;\n  filter(mwc %nin% c(\"Private Christian Montessori\",\n                     \"Charter Montessori\",\n                     \"Private Jewish/Islamic\")) |&gt;\n  left_join(aux_info, by = \"mwc\") |&gt;\n  ggplot(mapping =\n           aes(y = pbe_pct,\n               x = reorder(mwc, -n_students),\n               size = enrollment,\n               fill = mwc)) +\n  geom_quasirandom(shape=21,\n        alpha = 0.4,color=\"gray30\",\n        method = \"quasirandom\",\n        varwidth = FALSE,\n        bandwidth = 0.9) +\n      guides(color = \"none\",\n          shape= \"none\",\n          fill= \"none\",\n          size = guide_legend(override.aes =\n                    list(fill = \"black\")))"
  },
  {
    "objectID": "slides/09-case-studies.html#at-last-the-beeplot-6",
    "href": "slides/09-case-studies.html#at-last-the-beeplot-6",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "At last, the Beeplot",
    "text": "At last, the Beeplot\n\n\n\ncavax |&gt;\n  filter(mwc %nin% c(\"Private Christian Montessori\",\n                     \"Charter Montessori\",\n                     \"Private Jewish/Islamic\")) |&gt;\n  left_join(aux_info, by = \"mwc\") |&gt;\n  ggplot(mapping =\n           aes(y = pbe_pct,\n               x = reorder(mwc, -n_students),\n               size = enrollment,\n               fill = mwc)) +\n  geom_quasirandom(shape=21,\n        alpha = 0.4,color=\"gray30\",\n        method = \"quasirandom\",\n        varwidth = FALSE,\n        bandwidth = 0.9) +\n      guides(color = \"none\",\n          shape= \"none\",\n          fill= \"none\",\n          size = guide_legend(override.aes =\n                    list(fill = \"black\"))) +\n      scale_size(breaks=c(20, 40, 75, 100, 300),\n                   range=c(1,10))"
  },
  {
    "objectID": "slides/09-case-studies.html#at-last-the-beeplot-7",
    "href": "slides/09-case-studies.html#at-last-the-beeplot-7",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "At last, the Beeplot",
    "text": "At last, the Beeplot\n\n\n\ncavax |&gt;\n  filter(mwc %nin% c(\"Private Christian Montessori\",\n                     \"Charter Montessori\",\n                     \"Private Jewish/Islamic\")) |&gt;\n  left_join(aux_info, by = \"mwc\") |&gt;\n  ggplot(mapping =\n           aes(y = pbe_pct,\n               x = reorder(mwc, -n_students),\n               size = enrollment,\n               fill = mwc)) +\n  geom_quasirandom(shape=21,\n        alpha = 0.4,color=\"gray30\",\n        method = \"quasirandom\",\n        varwidth = FALSE,\n        bandwidth = 0.9) +\n      guides(color = \"none\",\n          shape= \"none\",\n          fill= \"none\",\n          size = guide_legend(override.aes =\n                    list(fill = \"black\"))) +\n      scale_size(breaks=c(20, 40, 75, 100, 300),\n                   range=c(1,10)) +\n      scale_x_discrete(labels = special_x_labs)"
  },
  {
    "objectID": "slides/09-case-studies.html#at-last-the-beeplot-8",
    "href": "slides/09-case-studies.html#at-last-the-beeplot-8",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "At last, the Beeplot",
    "text": "At last, the Beeplot\n\n\n\ncavax |&gt;\n  filter(mwc %nin% c(\"Private Christian Montessori\",\n                     \"Charter Montessori\",\n                     \"Private Jewish/Islamic\")) |&gt;\n  left_join(aux_info, by = \"mwc\") |&gt;\n  ggplot(mapping =\n           aes(y = pbe_pct,\n               x = reorder(mwc, -n_students),\n               size = enrollment,\n               fill = mwc)) +\n  geom_quasirandom(shape=21,\n        alpha = 0.4,color=\"gray30\",\n        method = \"quasirandom\",\n        varwidth = FALSE,\n        bandwidth = 0.9) +\n      guides(color = \"none\",\n          shape= \"none\",\n          fill= \"none\",\n          size = guide_legend(override.aes =\n                    list(fill = \"black\"))) +\n      scale_size(breaks=c(20, 40, 75, 100, 300),\n                   range=c(1,10)) +\n      scale_x_discrete(labels = special_x_labs) +\n      labs(size = \"Number of kindergarteners in each school\",\n           x = NULL, y = \"Percent\",\n           title = \"Vaccination Exemptions in California Kindergartens\")"
  },
  {
    "objectID": "slides/09-case-studies.html#at-last-the-beeplot-9",
    "href": "slides/09-case-studies.html#at-last-the-beeplot-9",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "At last, the Beeplot",
    "text": "At last, the Beeplot\n\n\n\ncavax |&gt;\n  filter(mwc %nin% c(\"Private Christian Montessori\",\n                     \"Charter Montessori\",\n                     \"Private Jewish/Islamic\")) |&gt;\n  left_join(aux_info, by = \"mwc\") |&gt;\n  ggplot(mapping =\n           aes(y = pbe_pct,\n               x = reorder(mwc, -n_students),\n               size = enrollment,\n               fill = mwc)) +\n  geom_quasirandom(shape=21,\n        alpha = 0.4,color=\"gray30\",\n        method = \"quasirandom\",\n        varwidth = FALSE,\n        bandwidth = 0.9) +\n      guides(color = \"none\",\n          shape= \"none\",\n          fill= \"none\",\n          size = guide_legend(override.aes =\n                    list(fill = \"black\"))) +\n      scale_size(breaks=c(20, 40, 75, 100, 300),\n                   range=c(1,10)) +\n      scale_x_discrete(labels = special_x_labs) +\n      labs(size = \"Number of kindergarteners in each school\",\n           x = NULL, y = \"Percent\",\n           title = \"Vaccination Exemptions in California Kindergartens\") +\n        theme(legend.position = \"bottom\",\n              plot.title = element_text(size = rel(1.4),\n                                        face = \"bold\"))"
  },
  {
    "objectID": "slides/09-case-studies.html#at-last-the-beeplot-10",
    "href": "slides/09-case-studies.html#at-last-the-beeplot-10",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "At last, the Beeplot",
    "text": "At last, the Beeplot\n\n\n\ncavax |&gt;\n  filter(mwc %nin% c(\"Private Christian Montessori\",\n                     \"Charter Montessori\",\n                     \"Private Jewish/Islamic\")) |&gt;\n  left_join(aux_info, by = \"mwc\") |&gt;\n  ggplot(mapping =\n           aes(y = pbe_pct,\n               x = reorder(mwc, -n_students),\n               size = enrollment,\n               fill = mwc)) +\n  geom_quasirandom(shape=21,\n        alpha = 0.4,color=\"gray30\",\n        method = \"quasirandom\",\n        varwidth = FALSE,\n        bandwidth = 0.9) +\n      guides(color = \"none\",\n          shape= \"none\",\n          fill= \"none\",\n          size = guide_legend(override.aes =\n                    list(fill = \"black\"))) +\n      scale_size(breaks=c(20, 40, 75, 100, 300),\n                   range=c(1,10)) +\n      scale_x_discrete(labels = special_x_labs) +\n      labs(size = \"Number of kindergarteners in each school\",\n           x = NULL, y = \"Percent\",\n           title = \"Vaccination Exemptions in California Kindergartens\") +\n        theme(legend.position = \"bottom\",\n              plot.title = element_text(size = rel(1.4),\n                                        face = \"bold\")) -&gt;\n  p_bee_main"
  },
  {
    "objectID": "slides/09-case-studies.html#at-last-the-beeplot-11",
    "href": "slides/09-case-studies.html#at-last-the-beeplot-11",
    "title": "Data Visualization. 9 - Case Studies",
    "section": "At last, the Beeplot",
    "text": "At last, the Beeplot\n\n\n\ncavax |&gt;\n  filter(mwc %nin% c(\"Private Christian Montessori\",\n                     \"Charter Montessori\",\n                     \"Private Jewish/Islamic\")) |&gt;\n  left_join(aux_info, by = \"mwc\") |&gt;\n  ggplot(mapping =\n           aes(y = pbe_pct,\n               x = reorder(mwc, -n_students),\n               size = enrollment,\n               fill = mwc)) +\n  geom_quasirandom(shape=21,\n        alpha = 0.4,color=\"gray30\",\n        method = \"quasirandom\",\n        varwidth = FALSE,\n        bandwidth = 0.9) +\n      guides(color = \"none\",\n          shape= \"none\",\n          fill= \"none\",\n          size = guide_legend(override.aes =\n                    list(fill = \"black\"))) +\n      scale_size(breaks=c(20, 40, 75, 100, 300),\n                   range=c(1,10)) +\n      scale_x_discrete(labels = special_x_labs) +\n      labs(size = \"Number of kindergarteners in each school\",\n           x = NULL, y = \"Percent\",\n           title = \"Vaccination Exemptions in California Kindergartens\") +\n        theme(legend.position = \"bottom\",\n              plot.title = element_text(size = rel(1.4),\n                                        face = \"bold\")) -&gt;\n  p_bee_main"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#load-our-libraries",
    "href": "slides/05-work-with-dplyr-and-geoms.html#load-our-libraries",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Load our libraries",
    "text": "Load our libraries\n\nlibrary(here)      # manage file paths\nlibrary(socviz)    # data and some useful functions\nlibrary(tidyverse) # your friend and mine"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#tidyverse-components",
    "href": "slides/05-work-with-dplyr-and-geoms.html#tidyverse-components",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Tidyverse components",
    "text": "Tidyverse components\n\n\n\nlibrary(tidyverse)\nLoading tidyverse: ggplot2\nLoading tidyverse: tibble\nLoading tidyverse: tidyr\nLoading tidyverse: readr\nLoading tidyverse: purrr\nLoading tidyverse: dplyr\n\n\n\nLoad the package and …\n&lt;| Draw graphs\n&lt;| Nicer data tables\n&lt;| Tidy your data\n&lt;| Get data into R\n&lt;| Fancy Iteration\n&lt;| Action verbs for tables"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#other-tidyverse-components",
    "href": "slides/05-work-with-dplyr-and-geoms.html#other-tidyverse-components",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Other tidyverse components",
    "text": "Other tidyverse components\n\n\n\nforcats\nhaven\nlubridate\nreadxl\nstringr\nreprex\n\n\n\n&lt;| Deal with factors\n&lt;| Import Stata, SPSS, etc\n&lt;| Dates, Durations, Times\n&lt;| Import from spreadsheets\n&lt;| Strings and Regular Expressions\n&lt;| Make reproducible examples\n\n\nNot all of these are attached when we do library(tidyverse)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#u.s.-general-social-survey-data-gss_sm",
    "href": "slides/05-work-with-dplyr-and-geoms.html#u.s.-general-social-survey-data-gss_sm",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "U.S. General Social Survey data: gss_sm",
    "text": "U.S. General Social Survey data: gss_sm\n\ngss_sm  \n\n# A tibble: 2,867 × 32\n    year    id ballot       age childs sibs   degree race  sex   region income16\n   &lt;dbl&gt; &lt;dbl&gt; &lt;labelled&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;labe&gt; &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt;   \n 1  2016     1 1             47      3 2      Bache… White Male  New E… $170000…\n 2  2016     2 2             61      0 3      High … White Male  New E… $50000 …\n 3  2016     3 3             72      2 3      Bache… White Male  New E… $75000 …\n 4  2016     4 1             43      4 3      High … White Fema… New E… $170000…\n 5  2016     5 3             55      2 2      Gradu… White Fema… New E… $170000…\n 6  2016     6 2             53      2 2      Junio… White Fema… New E… $60000 …\n 7  2016     7 1             50      2 2      High … White Male  New E… $170000…\n 8  2016     8 3             23      3 6      High … Other Fema… Middl… $30000 …\n 9  2016     9 1             45      3 5      High … Black Male  Middl… $60000 …\n10  2016    10 3             71      4 1      Junio… White Male  Middl… $60000 …\n# ℹ 2,857 more rows\n# ℹ 21 more variables: relig &lt;fct&gt;, marital &lt;fct&gt;, padeg &lt;fct&gt;, madeg &lt;fct&gt;,\n#   partyid &lt;fct&gt;, polviews &lt;fct&gt;, happy &lt;fct&gt;, partners &lt;fct&gt;, grass &lt;fct&gt;,\n#   zodiac &lt;fct&gt;, pres12 &lt;labelled&gt;, wtssall &lt;dbl&gt;, income_rc &lt;fct&gt;,\n#   agegrp &lt;fct&gt;, ageq &lt;fct&gt;, siblings &lt;fct&gt;, kids &lt;fct&gt;, religion &lt;fct&gt;,\n#   bigregion &lt;fct&gt;, partners_rc &lt;fct&gt;, obama &lt;dbl&gt;\n\n\nWe often want summary tables or graphs of data like this."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#two-way-tables-row-percents",
    "href": "slides/05-work-with-dplyr-and-geoms.html#two-way-tables-row-percents",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Two-way tables: Row percents",
    "text": "Two-way tables: Row percents\n\n\n\n\n\nbigregion\nProtestant\nCatholic\nJewish\nNone\nOther\nTotal\n\n\n\n\nNortheast\n32.4\n33.3\n5.5\n23.0\n5.7\n100.0\n\n\nMidwest\n47.1\n24.9\n0.4\n22.8\n4.8\n100.0\n\n\nSouth\n62.4\n15.4\n1.1\n16.3\n4.8\n100.0\n\n\nWest\n37.7\n24.6\n1.6\n28.5\n7.6\n100.0"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#two-way-tables-column-percents",
    "href": "slides/05-work-with-dplyr-and-geoms.html#two-way-tables-column-percents",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Two-way tables: Column percents",
    "text": "Two-way tables: Column percents\n\n\n\n\n\nbigregion\nProtestant\nCatholic\nJewish\nNone\nOther\n\n\n\n\nNortheast\n11.5\n25.0\n52.9\n18.1\n17.6\n\n\nMidwest\n23.7\n26.5\n5.9\n25.4\n20.8\n\n\nSouth\n47.4\n24.7\n21.6\n27.5\n31.4\n\n\nWest\n17.4\n23.9\n19.6\n29.1\n30.2\n\n\nTotal\n100.0\n100.0\n100.0\n100.0\n100.0"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#two-way-tables-full-marginals",
    "href": "slides/05-work-with-dplyr-and-geoms.html#two-way-tables-full-marginals",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Two-way tables: Full marginals",
    "text": "Two-way tables: Full marginals\n\n\n\n\n\nbigregion\nProtestant\nCatholic\nJewish\nNone\nOther\n\n\n\n\nNortheast\n5.5\n5.7\n0.9\n3.9\n1.0\n\n\nMidwest\n11.4\n6.0\n0.1\n5.5\n1.2\n\n\nSouth\n22.8\n5.6\n0.4\n6.0\n1.8\n\n\nWest\n8.4\n5.4\n0.4\n6.3\n1.7"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#dplyr-lets-you-work-with-tibbles",
    "href": "slides/05-work-with-dplyr-and-geoms.html#dplyr-lets-you-work-with-tibbles",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "dplyr lets you work with tibbles",
    "text": "dplyr lets you work with tibbles\n\nRemember, tibbles are tables of data where the columns can be of different types, such as numeric, logical, character, factor, etc.\nWe’ll use dplyr to transform and summarize our data."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#dplyr-lets-you-work-with-tibbles-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#dplyr-lets-you-work-with-tibbles-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "dplyr lets you work with tibbles",
    "text": "dplyr lets you work with tibbles\n\nRemember, tibbles are tables of data where the columns can be of different types, such as numeric, logical, character, factor, etc.\nWe’ll use dplyr to transform and summarize our data.\nWe’ll use the pipe operator, |&gt;, to chain together sequences of actions on our tables."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#some-actions-to-take-on-a-single-table",
    "href": "slides/05-work-with-dplyr-and-geoms.html#some-actions-to-take-on-a-single-table",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Some actions to take on a single table",
    "text": "Some actions to take on a single table\n\nGroup the data at the level we want, such as “Religion by Region” or “Children by School”.\nSubset either the rows or columns of or table—i.e. remove them before doing anything.\nMutate the data. That is, change something at the current level of grouping. Mutating adds new columns to the table, or changes the content of an existing column. It never changes the number of rows.\nSummarize or aggregate the data. That is, make something new at a higher level of grouping. E.g., calculate means or counts by some grouping variable. This will generally result in a smaller, summary table. Usually this will have the same number of rows as there are groups being summarized."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#for-each-action-theres-a-function",
    "href": "slides/05-work-with-dplyr-and-geoms.html#for-each-action-theres-a-function",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "For each action there’s a function",
    "text": "For each action there’s a function\n\nGroup using group_by().\nSubset has one action for rows and one for columns. We filter() rows and select() columns.\nMutate tables (i.e. add new columns, or re-make existing ones) using mutate().\nSummarize tables (i.e. perform aggregating calculations) using summarize()."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#general-social-survey-data-gss_sm",
    "href": "slides/05-work-with-dplyr-and-geoms.html#general-social-survey-data-gss_sm",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "General Social Survey data: gss_sm",
    "text": "General Social Survey data: gss_sm\n\n## library(socviz) # if not loaded\ngss_sm\n\n# A tibble: 2,867 × 32\n    year    id ballot       age childs sibs   degree race  sex   region income16\n   &lt;dbl&gt; &lt;dbl&gt; &lt;labelled&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;labe&gt; &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt;   \n 1  2016     1 1             47      3 2      Bache… White Male  New E… $170000…\n 2  2016     2 2             61      0 3      High … White Male  New E… $50000 …\n 3  2016     3 3             72      2 3      Bache… White Male  New E… $75000 …\n 4  2016     4 1             43      4 3      High … White Fema… New E… $170000…\n 5  2016     5 3             55      2 2      Gradu… White Fema… New E… $170000…\n 6  2016     6 2             53      2 2      Junio… White Fema… New E… $60000 …\n 7  2016     7 1             50      2 2      High … White Male  New E… $170000…\n 8  2016     8 3             23      3 6      High … Other Fema… Middl… $30000 …\n 9  2016     9 1             45      3 5      High … Black Male  Middl… $60000 …\n10  2016    10 3             71      4 1      Junio… White Male  Middl… $60000 …\n# ℹ 2,857 more rows\n# ℹ 21 more variables: relig &lt;fct&gt;, marital &lt;fct&gt;, padeg &lt;fct&gt;, madeg &lt;fct&gt;,\n#   partyid &lt;fct&gt;, polviews &lt;fct&gt;, happy &lt;fct&gt;, partners &lt;fct&gt;, grass &lt;fct&gt;,\n#   zodiac &lt;fct&gt;, pres12 &lt;labelled&gt;, wtssall &lt;dbl&gt;, income_rc &lt;fct&gt;,\n#   agegrp &lt;fct&gt;, ageq &lt;fct&gt;, siblings &lt;fct&gt;, kids &lt;fct&gt;, religion &lt;fct&gt;,\n#   bigregion &lt;fct&gt;, partners_rc &lt;fct&gt;, obama &lt;dbl&gt;\n\n\nNotice how the tibble already tells us a lot."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#summarizing-a-table",
    "href": "slides/05-work-with-dplyr-and-geoms.html#summarizing-a-table",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Summarizing a Table",
    "text": "Summarizing a Table\n\nHere’s what we’re going to do:"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#summarizing-a-table-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#summarizing-a-table-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Summarizing a Table",
    "text": "Summarizing a Table\n\ngss_sm |&gt; \n  select(id, bigregion, religion)\n\n# A tibble: 2,867 × 3\n      id bigregion religion  \n   &lt;dbl&gt; &lt;fct&gt;     &lt;fct&gt;     \n 1     1 Northeast None      \n 2     2 Northeast None      \n 3     3 Northeast Catholic  \n 4     4 Northeast Catholic  \n 5     5 Northeast None      \n 6     6 Northeast None      \n 7     7 Northeast None      \n 8     8 Northeast Catholic  \n 9     9 Northeast Protestant\n10    10 Northeast None      \n# ℹ 2,857 more rows\n\n\nWe’re just taking a look at the relevant columns here."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#group-by-one-column-or-variable",
    "href": "slides/05-work-with-dplyr-and-geoms.html#group-by-one-column-or-variable",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Group by one column or variable",
    "text": "Group by one column or variable\n\ngss_sm |&gt; \n  group_by(bigregion)\n\n# A tibble: 2,867 × 32\n# Groups:   bigregion [4]\n    year    id ballot       age childs sibs   degree race  sex   region income16\n   &lt;dbl&gt; &lt;dbl&gt; &lt;labelled&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;labe&gt; &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt;   \n 1  2016     1 1             47      3 2      Bache… White Male  New E… $170000…\n 2  2016     2 2             61      0 3      High … White Male  New E… $50000 …\n 3  2016     3 3             72      2 3      Bache… White Male  New E… $75000 …\n 4  2016     4 1             43      4 3      High … White Fema… New E… $170000…\n 5  2016     5 3             55      2 2      Gradu… White Fema… New E… $170000…\n 6  2016     6 2             53      2 2      Junio… White Fema… New E… $60000 …\n 7  2016     7 1             50      2 2      High … White Male  New E… $170000…\n 8  2016     8 3             23      3 6      High … Other Fema… Middl… $30000 …\n 9  2016     9 1             45      3 5      High … Black Male  Middl… $60000 …\n10  2016    10 3             71      4 1      Junio… White Male  Middl… $60000 …\n# ℹ 2,857 more rows\n# ℹ 21 more variables: relig &lt;fct&gt;, marital &lt;fct&gt;, padeg &lt;fct&gt;, madeg &lt;fct&gt;,\n#   partyid &lt;fct&gt;, polviews &lt;fct&gt;, happy &lt;fct&gt;, partners &lt;fct&gt;, grass &lt;fct&gt;,\n#   zodiac &lt;fct&gt;, pres12 &lt;labelled&gt;, wtssall &lt;dbl&gt;, income_rc &lt;fct&gt;,\n#   agegrp &lt;fct&gt;, ageq &lt;fct&gt;, siblings &lt;fct&gt;, kids &lt;fct&gt;, religion &lt;fct&gt;,\n#   bigregion &lt;fct&gt;, partners_rc &lt;fct&gt;, obama &lt;dbl&gt;\n\n\nGrouping just changes the logical structure of the tibble."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#group-and-summarize-by-one-column",
    "href": "slides/05-work-with-dplyr-and-geoms.html#group-and-summarize-by-one-column",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Group and summarize by one column",
    "text": "Group and summarize by one column\n\n\n\ngss_sm\n\n\n\n\n# A tibble: 2,867 × 32\n    year    id ballot       age childs sibs   degree race  sex   region income16\n   &lt;dbl&gt; &lt;dbl&gt; &lt;labelled&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;labe&gt; &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt;   \n 1  2016     1 1             47      3 2      Bache… White Male  New E… $170000…\n 2  2016     2 2             61      0 3      High … White Male  New E… $50000 …\n 3  2016     3 3             72      2 3      Bache… White Male  New E… $75000 …\n 4  2016     4 1             43      4 3      High … White Fema… New E… $170000…\n 5  2016     5 3             55      2 2      Gradu… White Fema… New E… $170000…\n 6  2016     6 2             53      2 2      Junio… White Fema… New E… $60000 …\n 7  2016     7 1             50      2 2      High … White Male  New E… $170000…\n 8  2016     8 3             23      3 6      High … Other Fema… Middl… $30000 …\n 9  2016     9 1             45      3 5      High … Black Male  Middl… $60000 …\n10  2016    10 3             71      4 1      Junio… White Male  Middl… $60000 …\n# ℹ 2,857 more rows\n# ℹ 21 more variables: relig &lt;fct&gt;, marital &lt;fct&gt;, padeg &lt;fct&gt;, madeg &lt;fct&gt;,\n#   partyid &lt;fct&gt;, polviews &lt;fct&gt;, happy &lt;fct&gt;, partners &lt;fct&gt;, grass &lt;fct&gt;,\n#   zodiac &lt;fct&gt;, pres12 &lt;labelled&gt;, wtssall &lt;dbl&gt;, income_rc &lt;fct&gt;,\n#   agegrp &lt;fct&gt;, ageq &lt;fct&gt;, siblings &lt;fct&gt;, kids &lt;fct&gt;, religion &lt;fct&gt;,\n#   bigregion &lt;fct&gt;, partners_rc &lt;fct&gt;, obama &lt;dbl&gt;"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#group-and-summarize-by-one-column-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#group-and-summarize-by-one-column-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Group and summarize by one column",
    "text": "Group and summarize by one column\n\n\n\ngss_sm |&gt;\n  group_by(bigregion)\n\n\n\n\n# A tibble: 2,867 × 32\n# Groups:   bigregion [4]\n    year    id ballot       age childs sibs   degree race  sex   region income16\n   &lt;dbl&gt; &lt;dbl&gt; &lt;labelled&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;labe&gt; &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt;   \n 1  2016     1 1             47      3 2      Bache… White Male  New E… $170000…\n 2  2016     2 2             61      0 3      High … White Male  New E… $50000 …\n 3  2016     3 3             72      2 3      Bache… White Male  New E… $75000 …\n 4  2016     4 1             43      4 3      High … White Fema… New E… $170000…\n 5  2016     5 3             55      2 2      Gradu… White Fema… New E… $170000…\n 6  2016     6 2             53      2 2      Junio… White Fema… New E… $60000 …\n 7  2016     7 1             50      2 2      High … White Male  New E… $170000…\n 8  2016     8 3             23      3 6      High … Other Fema… Middl… $30000 …\n 9  2016     9 1             45      3 5      High … Black Male  Middl… $60000 …\n10  2016    10 3             71      4 1      Junio… White Male  Middl… $60000 …\n# ℹ 2,857 more rows\n# ℹ 21 more variables: relig &lt;fct&gt;, marital &lt;fct&gt;, padeg &lt;fct&gt;, madeg &lt;fct&gt;,\n#   partyid &lt;fct&gt;, polviews &lt;fct&gt;, happy &lt;fct&gt;, partners &lt;fct&gt;, grass &lt;fct&gt;,\n#   zodiac &lt;fct&gt;, pres12 &lt;labelled&gt;, wtssall &lt;dbl&gt;, income_rc &lt;fct&gt;,\n#   agegrp &lt;fct&gt;, ageq &lt;fct&gt;, siblings &lt;fct&gt;, kids &lt;fct&gt;, religion &lt;fct&gt;,\n#   bigregion &lt;fct&gt;, partners_rc &lt;fct&gt;, obama &lt;dbl&gt;"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#group-and-summarize-by-one-column-2",
    "href": "slides/05-work-with-dplyr-and-geoms.html#group-and-summarize-by-one-column-2",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Group and summarize by one column",
    "text": "Group and summarize by one column\n\n\n\ngss_sm |&gt;\n  group_by(bigregion) |&gt;\n  summarize(total = n())\n\n\n\n\n# A tibble: 4 × 2\n  bigregion total\n  &lt;fct&gt;     &lt;int&gt;\n1 Northeast   488\n2 Midwest     695\n3 South      1052\n4 West        632\n\n\n\n\nThe function n() counts up the rows within each group.\n\nAll the other columns are dropped in the summary operation\nYour original gss_sm table is untouched"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#group-and-summarize-by-two-columns",
    "href": "slides/05-work-with-dplyr-and-geoms.html#group-and-summarize-by-two-columns",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Group and summarize by two columns",
    "text": "Group and summarize by two columns\n\n\n\ngss_sm\n\n\n\n\n# A tibble: 2,867 × 32\n    year    id ballot       age childs sibs   degree race  sex   region income16\n   &lt;dbl&gt; &lt;dbl&gt; &lt;labelled&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;labe&gt; &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt;   \n 1  2016     1 1             47      3 2      Bache… White Male  New E… $170000…\n 2  2016     2 2             61      0 3      High … White Male  New E… $50000 …\n 3  2016     3 3             72      2 3      Bache… White Male  New E… $75000 …\n 4  2016     4 1             43      4 3      High … White Fema… New E… $170000…\n 5  2016     5 3             55      2 2      Gradu… White Fema… New E… $170000…\n 6  2016     6 2             53      2 2      Junio… White Fema… New E… $60000 …\n 7  2016     7 1             50      2 2      High … White Male  New E… $170000…\n 8  2016     8 3             23      3 6      High … Other Fema… Middl… $30000 …\n 9  2016     9 1             45      3 5      High … Black Male  Middl… $60000 …\n10  2016    10 3             71      4 1      Junio… White Male  Middl… $60000 …\n# ℹ 2,857 more rows\n# ℹ 21 more variables: relig &lt;fct&gt;, marital &lt;fct&gt;, padeg &lt;fct&gt;, madeg &lt;fct&gt;,\n#   partyid &lt;fct&gt;, polviews &lt;fct&gt;, happy &lt;fct&gt;, partners &lt;fct&gt;, grass &lt;fct&gt;,\n#   zodiac &lt;fct&gt;, pres12 &lt;labelled&gt;, wtssall &lt;dbl&gt;, income_rc &lt;fct&gt;,\n#   agegrp &lt;fct&gt;, ageq &lt;fct&gt;, siblings &lt;fct&gt;, kids &lt;fct&gt;, religion &lt;fct&gt;,\n#   bigregion &lt;fct&gt;, partners_rc &lt;fct&gt;, obama &lt;dbl&gt;"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#group-and-summarize-by-two-columns-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#group-and-summarize-by-two-columns-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Group and summarize by two columns",
    "text": "Group and summarize by two columns\n\n\n\ngss_sm |&gt;\n  group_by(bigregion, religion)\n\n\n\n\n# A tibble: 2,867 × 32\n# Groups:   bigregion, religion [24]\n    year    id ballot       age childs sibs   degree race  sex   region income16\n   &lt;dbl&gt; &lt;dbl&gt; &lt;labelled&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;labe&gt; &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt;   \n 1  2016     1 1             47      3 2      Bache… White Male  New E… $170000…\n 2  2016     2 2             61      0 3      High … White Male  New E… $50000 …\n 3  2016     3 3             72      2 3      Bache… White Male  New E… $75000 …\n 4  2016     4 1             43      4 3      High … White Fema… New E… $170000…\n 5  2016     5 3             55      2 2      Gradu… White Fema… New E… $170000…\n 6  2016     6 2             53      2 2      Junio… White Fema… New E… $60000 …\n 7  2016     7 1             50      2 2      High … White Male  New E… $170000…\n 8  2016     8 3             23      3 6      High … Other Fema… Middl… $30000 …\n 9  2016     9 1             45      3 5      High … Black Male  Middl… $60000 …\n10  2016    10 3             71      4 1      Junio… White Male  Middl… $60000 …\n# ℹ 2,857 more rows\n# ℹ 21 more variables: relig &lt;fct&gt;, marital &lt;fct&gt;, padeg &lt;fct&gt;, madeg &lt;fct&gt;,\n#   partyid &lt;fct&gt;, polviews &lt;fct&gt;, happy &lt;fct&gt;, partners &lt;fct&gt;, grass &lt;fct&gt;,\n#   zodiac &lt;fct&gt;, pres12 &lt;labelled&gt;, wtssall &lt;dbl&gt;, income_rc &lt;fct&gt;,\n#   agegrp &lt;fct&gt;, ageq &lt;fct&gt;, siblings &lt;fct&gt;, kids &lt;fct&gt;, religion &lt;fct&gt;,\n#   bigregion &lt;fct&gt;, partners_rc &lt;fct&gt;, obama &lt;dbl&gt;"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#group-and-summarize-by-two-columns-2",
    "href": "slides/05-work-with-dplyr-and-geoms.html#group-and-summarize-by-two-columns-2",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Group and summarize by two columns",
    "text": "Group and summarize by two columns\n\n\n\ngss_sm |&gt;\n  group_by(bigregion, religion) |&gt;\n  summarize(total = n())\n\n\n\n\n# A tibble: 24 × 3\n# Groups:   bigregion [4]\n   bigregion religion   total\n   &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt;\n 1 Northeast Protestant   158\n 2 Northeast Catholic     162\n 3 Northeast Jewish        27\n 4 Northeast None         112\n 5 Northeast Other         28\n 6 Northeast &lt;NA&gt;           1\n 7 Midwest   Protestant   325\n 8 Midwest   Catholic     172\n 9 Midwest   Jewish         3\n10 Midwest   None         157\n# ℹ 14 more rows\n\n\n\n\nThe function n() counts up the rows within the innermost (i.e. the rightmost) group."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#calculate-frequencies",
    "href": "slides/05-work-with-dplyr-and-geoms.html#calculate-frequencies",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Calculate frequencies",
    "text": "Calculate frequencies\n\n\n\ngss_sm\n\n\n\n\n# A tibble: 2,867 × 32\n    year    id ballot       age childs sibs   degree race  sex   region income16\n   &lt;dbl&gt; &lt;dbl&gt; &lt;labelled&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;labe&gt; &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt;   \n 1  2016     1 1             47      3 2      Bache… White Male  New E… $170000…\n 2  2016     2 2             61      0 3      High … White Male  New E… $50000 …\n 3  2016     3 3             72      2 3      Bache… White Male  New E… $75000 …\n 4  2016     4 1             43      4 3      High … White Fema… New E… $170000…\n 5  2016     5 3             55      2 2      Gradu… White Fema… New E… $170000…\n 6  2016     6 2             53      2 2      Junio… White Fema… New E… $60000 …\n 7  2016     7 1             50      2 2      High … White Male  New E… $170000…\n 8  2016     8 3             23      3 6      High … Other Fema… Middl… $30000 …\n 9  2016     9 1             45      3 5      High … Black Male  Middl… $60000 …\n10  2016    10 3             71      4 1      Junio… White Male  Middl… $60000 …\n# ℹ 2,857 more rows\n# ℹ 21 more variables: relig &lt;fct&gt;, marital &lt;fct&gt;, padeg &lt;fct&gt;, madeg &lt;fct&gt;,\n#   partyid &lt;fct&gt;, polviews &lt;fct&gt;, happy &lt;fct&gt;, partners &lt;fct&gt;, grass &lt;fct&gt;,\n#   zodiac &lt;fct&gt;, pres12 &lt;labelled&gt;, wtssall &lt;dbl&gt;, income_rc &lt;fct&gt;,\n#   agegrp &lt;fct&gt;, ageq &lt;fct&gt;, siblings &lt;fct&gt;, kids &lt;fct&gt;, religion &lt;fct&gt;,\n#   bigregion &lt;fct&gt;, partners_rc &lt;fct&gt;, obama &lt;dbl&gt;"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#calculate-frequencies-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#calculate-frequencies-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Calculate frequencies",
    "text": "Calculate frequencies\n\n\n\ngss_sm |&gt;\n  group_by(bigregion, religion)\n\n\n\n\n# A tibble: 2,867 × 32\n# Groups:   bigregion, religion [24]\n    year    id ballot       age childs sibs   degree race  sex   region income16\n   &lt;dbl&gt; &lt;dbl&gt; &lt;labelled&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;labe&gt; &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt;   \n 1  2016     1 1             47      3 2      Bache… White Male  New E… $170000…\n 2  2016     2 2             61      0 3      High … White Male  New E… $50000 …\n 3  2016     3 3             72      2 3      Bache… White Male  New E… $75000 …\n 4  2016     4 1             43      4 3      High … White Fema… New E… $170000…\n 5  2016     5 3             55      2 2      Gradu… White Fema… New E… $170000…\n 6  2016     6 2             53      2 2      Junio… White Fema… New E… $60000 …\n 7  2016     7 1             50      2 2      High … White Male  New E… $170000…\n 8  2016     8 3             23      3 6      High … Other Fema… Middl… $30000 …\n 9  2016     9 1             45      3 5      High … Black Male  Middl… $60000 …\n10  2016    10 3             71      4 1      Junio… White Male  Middl… $60000 …\n# ℹ 2,857 more rows\n# ℹ 21 more variables: relig &lt;fct&gt;, marital &lt;fct&gt;, padeg &lt;fct&gt;, madeg &lt;fct&gt;,\n#   partyid &lt;fct&gt;, polviews &lt;fct&gt;, happy &lt;fct&gt;, partners &lt;fct&gt;, grass &lt;fct&gt;,\n#   zodiac &lt;fct&gt;, pres12 &lt;labelled&gt;, wtssall &lt;dbl&gt;, income_rc &lt;fct&gt;,\n#   agegrp &lt;fct&gt;, ageq &lt;fct&gt;, siblings &lt;fct&gt;, kids &lt;fct&gt;, religion &lt;fct&gt;,\n#   bigregion &lt;fct&gt;, partners_rc &lt;fct&gt;, obama &lt;dbl&gt;"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#calculate-frequencies-2",
    "href": "slides/05-work-with-dplyr-and-geoms.html#calculate-frequencies-2",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Calculate frequencies",
    "text": "Calculate frequencies\n\n\n\ngss_sm |&gt;\n  group_by(bigregion, religion) |&gt;\n  summarize(total = n())\n\n\n\n\n# A tibble: 24 × 3\n# Groups:   bigregion [4]\n   bigregion religion   total\n   &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt;\n 1 Northeast Protestant   158\n 2 Northeast Catholic     162\n 3 Northeast Jewish        27\n 4 Northeast None         112\n 5 Northeast Other         28\n 6 Northeast &lt;NA&gt;           1\n 7 Midwest   Protestant   325\n 8 Midwest   Catholic     172\n 9 Midwest   Jewish         3\n10 Midwest   None         157\n# ℹ 14 more rows"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#calculate-frequencies-3",
    "href": "slides/05-work-with-dplyr-and-geoms.html#calculate-frequencies-3",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Calculate frequencies",
    "text": "Calculate frequencies\n\n\n\ngss_sm |&gt;\n  group_by(bigregion, religion) |&gt;\n  summarize(total = n()) |&gt;\n  mutate(freq = total / sum(total),\n           pct = round((freq*100), 1))\n\n\n\n\n# A tibble: 24 × 5\n# Groups:   bigregion [4]\n   bigregion religion   total    freq   pct\n   &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 Northeast Protestant   158 0.324    32.4\n 2 Northeast Catholic     162 0.332    33.2\n 3 Northeast Jewish        27 0.0553    5.5\n 4 Northeast None         112 0.230    23  \n 5 Northeast Other         28 0.0574    5.7\n 6 Northeast &lt;NA&gt;           1 0.00205   0.2\n 7 Midwest   Protestant   325 0.468    46.8\n 8 Midwest   Catholic     172 0.247    24.7\n 9 Midwest   Jewish         3 0.00432   0.4\n10 Midwest   None         157 0.226    22.6\n# ℹ 14 more rows\n\n\n\n\nThe function n() counts up the rows\nWhich rows? The ones fed down the pipeline\nThe innermost (i.e. the rightmost) group."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#pipelines-carry-assumptions-forward",
    "href": "slides/05-work-with-dplyr-and-geoms.html#pipelines-carry-assumptions-forward",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Pipelines carry assumptions forward",
    "text": "Pipelines carry assumptions forward\n\ngss_sm |&gt; \n  group_by(bigregion, religion) |&gt; \n  summarize(total = n()) |&gt; \n  mutate(freq = total / sum(total),\n           pct = round((freq*100), 1))\n\n# A tibble: 24 × 5\n# Groups:   bigregion [4]\n   bigregion religion   total    freq   pct\n   &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 Northeast Protestant   158 0.324    32.4\n 2 Northeast Catholic     162 0.332    33.2\n 3 Northeast Jewish        27 0.0553    5.5\n 4 Northeast None         112 0.230    23  \n 5 Northeast Other         28 0.0574    5.7\n 6 Northeast &lt;NA&gt;           1 0.00205   0.2\n 7 Midwest   Protestant   325 0.468    46.8\n 8 Midwest   Catholic     172 0.247    24.7\n 9 Midwest   Jewish         3 0.00432   0.4\n10 Midwest   None         157 0.226    22.6\n# ℹ 14 more rows\n\n\n\n\nGroups are carried forward till summarized or explicitly ungrouped\nSummary calculations are done on the innermost group, which then “disappears”."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#pipelines-carry-assumptions-forward-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#pipelines-carry-assumptions-forward-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Pipelines carry assumptions forward",
    "text": "Pipelines carry assumptions forward\n\ngss_sm |&gt; \n  group_by(bigregion, religion) |&gt; \n  summarize(total = n()) |&gt; \n  mutate(freq = total / sum(total),\n           pct = round((freq*100), 1)) \n\n# A tibble: 24 × 5\n# Groups:   bigregion [4]\n   bigregion religion   total    freq   pct\n   &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 Northeast Protestant   158 0.324    32.4\n 2 Northeast Catholic     162 0.332    33.2\n 3 Northeast Jewish        27 0.0553    5.5\n 4 Northeast None         112 0.230    23  \n 5 Northeast Other         28 0.0574    5.7\n 6 Northeast &lt;NA&gt;           1 0.00205   0.2\n 7 Midwest   Protestant   325 0.468    46.8\n 8 Midwest   Catholic     172 0.247    24.7\n 9 Midwest   Jewish         3 0.00432   0.4\n10 Midwest   None         157 0.226    22.6\n# ℹ 14 more rows\n\n\nmutate() is quite clever. See how we can immediately use freq, even though we are creating it in the same mutate() expression."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#convenience-functions",
    "href": "slides/05-work-with-dplyr-and-geoms.html#convenience-functions",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Convenience functions",
    "text": "Convenience functions\n\ngss_sm |&gt; \n  group_by(bigregion, religion) |&gt; \n  summarize(total = n()) |&gt; \n  mutate(freq = total / sum(total),\n           pct = round((freq*100), 1)) \n\n# A tibble: 24 × 5\n# Groups:   bigregion [4]\n   bigregion religion   total    freq   pct\n   &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 Northeast Protestant   158 0.324    32.4\n 2 Northeast Catholic     162 0.332    33.2\n 3 Northeast Jewish        27 0.0553    5.5\n 4 Northeast None         112 0.230    23  \n 5 Northeast Other         28 0.0574    5.7\n 6 Northeast &lt;NA&gt;           1 0.00205   0.2\n 7 Midwest   Protestant   325 0.468    46.8\n 8 Midwest   Catholic     172 0.247    24.7\n 9 Midwest   Jewish         3 0.00432   0.4\n10 Midwest   None         157 0.226    22.6\n# ℹ 14 more rows\n\n\nWe’re going to be doing this group_by() … n() step a lot. Some shorthand for it would be useful."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#three-options-for-counting-up-rows",
    "href": "slides/05-work-with-dplyr-and-geoms.html#three-options-for-counting-up-rows",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Three options for counting up rows",
    "text": "Three options for counting up rows\n\n\n\nUse n()\n\n\n\ngss_sm |&gt; \n  group_by(bigregion, religion) |&gt; \n  summarize(n = n()) \n\n# A tibble: 24 × 3\n# Groups:   bigregion [4]\n   bigregion religion       n\n   &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt;\n 1 Northeast Protestant   158\n 2 Northeast Catholic     162\n 3 Northeast Jewish        27\n 4 Northeast None         112\n 5 Northeast Other         28\n 6 Northeast &lt;NA&gt;           1\n 7 Midwest   Protestant   325\n 8 Midwest   Catholic     172\n 9 Midwest   Jewish         3\n10 Midwest   None         157\n# ℹ 14 more rows\n\n\n\n\nGroup it yourself; result is grouped.\n\n\n\nUse tally()\n\n\n\ngss_sm |&gt; \n  group_by(bigregion, religion) |&gt; \n  tally() \n\n# A tibble: 24 × 3\n# Groups:   bigregion [4]\n   bigregion religion       n\n   &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt;\n 1 Northeast Protestant   158\n 2 Northeast Catholic     162\n 3 Northeast Jewish        27\n 4 Northeast None         112\n 5 Northeast Other         28\n 6 Northeast &lt;NA&gt;           1\n 7 Midwest   Protestant   325\n 8 Midwest   Catholic     172\n 9 Midwest   Jewish         3\n10 Midwest   None         157\n# ℹ 14 more rows\n\n\n\n\nMore compact; result is grouped.\n\n\n\nUse count()\n\n\n\ngss_sm |&gt; \n  count(bigregion, religion) \n\n# A tibble: 24 × 3\n   bigregion religion       n\n   &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt;\n 1 Northeast Protestant   158\n 2 Northeast Catholic     162\n 3 Northeast Jewish        27\n 4 Northeast None         112\n 5 Northeast Other         28\n 6 Northeast &lt;NA&gt;           1\n 7 Midwest   Protestant   325\n 8 Midwest   Catholic     172\n 9 Midwest   Jewish         3\n10 Midwest   None         157\n# ℹ 14 more rows\n\n\n\n\nOne step; result is not grouped."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#pass-results-on-to-a-table",
    "href": "slides/05-work-with-dplyr-and-geoms.html#pass-results-on-to-a-table",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Pass results on to … a table",
    "text": "Pass results on to … a table\n\ngss_sm |&gt; \n  count(bigregion, religion) |&gt; \n  pivot_wider(names_from = bigregion, values_from = n) |&gt;  \n  knitr::kable()  \n\n\n\n\n\n\nreligion\nNortheast\nMidwest\nSouth\nWest\n\n\n\n\nProtestant\n158\n325\n650\n238\n\n\nCatholic\n162\n172\n160\n155\n\n\nJewish\n27\n3\n11\n10\n\n\nNone\n112\n157\n170\n180\n\n\nOther\n28\n33\n50\n48\n\n\nNA\n1\n5\n11\n1\n\n\n\n\n\n\nMore on pivot_wider() and kable() soon …"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#pass-results-on-to-a-graph",
    "href": "slides/05-work-with-dplyr-and-geoms.html#pass-results-on-to-a-graph",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Pass results on to … a graph",
    "text": "Pass results on to … a graph\n\ngss_sm |&gt; \n  group_by(bigregion, religion) |&gt; \n  tally() |&gt; \n  mutate(pct = round((n/sum(n))*100), 1) |&gt; \n  drop_na() |&gt; \n  ggplot(mapping = aes(x = pct, y = reorder(religion, -pct), fill = religion)) + \n  geom_col() + \n    labs(x = \"Percent\", y = NULL) +\n    guides(fill = \"none\") + \n    facet_wrap(~ bigregion, nrow = 1)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#check-by-summarizing",
    "href": "slides/05-work-with-dplyr-and-geoms.html#check-by-summarizing",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Check by summarizing",
    "text": "Check by summarizing\n\n\n\nrel_by_region &lt;- gss_sm |&gt; \n  count(bigregion, religion) |&gt; \n  mutate(pct = round((n/sum(n))*100, 1)) \n\nrel_by_region\n\n# A tibble: 24 × 4\n   bigregion religion       n   pct\n   &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt; &lt;dbl&gt;\n 1 Northeast Protestant   158   5.5\n 2 Northeast Catholic     162   5.7\n 3 Northeast Jewish        27   0.9\n 4 Northeast None         112   3.9\n 5 Northeast Other         28   1  \n 6 Northeast &lt;NA&gt;           1   0  \n 7 Midwest   Protestant   325  11.3\n 8 Midwest   Catholic     172   6  \n 9 Midwest   Jewish         3   0.1\n10 Midwest   None         157   5.5\n# ℹ 14 more rows\n\n\nHm, did I sum over right group?"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#check-by-summarizing-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#check-by-summarizing-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Check by summarizing",
    "text": "Check by summarizing\n\n\n\nrel_by_region &lt;- gss_sm |&gt; \n  count(bigregion, religion) |&gt; \n  mutate(pct = round((n/sum(n))*100, 1)) \n\nrel_by_region\n\n# A tibble: 24 × 4\n   bigregion religion       n   pct\n   &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt; &lt;dbl&gt;\n 1 Northeast Protestant   158   5.5\n 2 Northeast Catholic     162   5.7\n 3 Northeast Jewish        27   0.9\n 4 Northeast None         112   3.9\n 5 Northeast Other         28   1  \n 6 Northeast &lt;NA&gt;           1   0  \n 7 Midwest   Protestant   325  11.3\n 8 Midwest   Catholic     172   6  \n 9 Midwest   Jewish         3   0.1\n10 Midwest   None         157   5.5\n# ℹ 14 more rows\n\n\nHm, did I sum over right group?\n\n\n## Each region should sum to ~100\nrel_by_region |&gt; \n  group_by(bigregion) |&gt; \n  summarize(total = sum(pct)) \n\n# A tibble: 4 × 2\n  bigregion total\n  &lt;fct&gt;     &lt;dbl&gt;\n1 Northeast  17  \n2 Midwest    24.3\n3 South      36.7\n4 West       22  \n\n\nNo! What has gone wrong here?"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#check-by-summarizing-2",
    "href": "slides/05-work-with-dplyr-and-geoms.html#check-by-summarizing-2",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Check by summarizing",
    "text": "Check by summarizing\n\n\n\nrel_by_region &lt;- gss_sm |&gt; \n  count(bigregion, religion) |&gt; \n  mutate(pct = round((n/sum(n))*100, 1)) \n\n\n\ncount() returns ungrouped results, so there are no groups carry forward to the mutate() step.\n\n\n\nrel_by_region |&gt; \n  summarize(total = sum(pct))\n\n# A tibble: 1 × 1\n  total\n  &lt;dbl&gt;\n1   100\n\n\n\n\nWith count(), the pct values here are the marginals for the whole table."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#check-by-summarizing-3",
    "href": "slides/05-work-with-dplyr-and-geoms.html#check-by-summarizing-3",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Check by summarizing",
    "text": "Check by summarizing\n\n\n\nrel_by_region &lt;- gss_sm |&gt; \n  count(bigregion, religion) |&gt; \n  mutate(pct = round((n/sum(n))*100, 1)) \n\n\n\ncount() returns ungrouped results, so there are no groups carry forward to the mutate() step.\n\n\n\nrel_by_region |&gt; \n  summarize(total = sum(pct))\n\n# A tibble: 1 × 1\n  total\n  &lt;dbl&gt;\n1   100\n\n\n\n\nWith count(), the pct values here are the marginals for the whole table.\n\n\n\n\nrel_by_region &lt;- gss_sm |&gt; \n  group_by(bigregion, religion) |&gt; \n  tally() |&gt; \n  mutate(pct = round((n/sum(n))*100, 1)) \n\n\n# Check\nrel_by_region |&gt; \n  group_by(bigregion) |&gt; \n  summarize(total = sum(pct))\n\n# A tibble: 4 × 2\n  bigregion total\n  &lt;fct&gt;     &lt;dbl&gt;\n1 Northeast 100  \n2 Midwest    99.9\n3 South     100  \n4 West      100. \n\n\n\n\nWe get some rounding error because we used round() after summing originally."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#two-lessons",
    "href": "slides/05-work-with-dplyr-and-geoms.html#two-lessons",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Two lessons",
    "text": "Two lessons\nCheck your tables!\n\nPipelines feed their content forward, so you need to make sure your results are not incorrect.\nOften, complex tables and graphs can be disturbingly plausible even when wrong.\nSo, figure out what the result should be and test it!\nStarting with simple or toy cases can help with this process."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#two-lessons-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#two-lessons-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Two lessons",
    "text": "Two lessons\nInspect your pipes!\n\nUnderstand pipelines by running them forward or peeling them back a step at a time.\nThis is a very effective way to understand your own and other people’s code."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#lets-put-that-table-in-an-object",
    "href": "slides/05-work-with-dplyr-and-geoms.html#lets-put-that-table-in-an-object",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Let’s put that table in an object",
    "text": "Let’s put that table in an object\n\nrel_by_region &lt;- gss_sm |&gt; \n  group_by(bigregion, religion) |&gt; \n  tally() |&gt; \n  mutate(pct = round((n/sum(n))*100, 1)) |&gt; \n  drop_na()\n\n\nhead(rel_by_region)\n\n# A tibble: 6 × 4\n# Groups:   bigregion [2]\n  bigregion religion       n   pct\n  &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt; &lt;dbl&gt;\n1 Northeast Protestant   158  32.4\n2 Northeast Catholic     162  33.2\n3 Northeast Jewish        27   5.5\n4 Northeast None         112  23  \n5 Northeast Other         28   5.7\n6 Midwest   Protestant   325  46.8"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#we-might-write",
    "href": "slides/05-work-with-dplyr-and-geoms.html#we-might-write",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "We might write …",
    "text": "We might write …\n\np &lt;- ggplot(data = rel_by_region, \n                mapping = aes(x = bigregion, \n                              y = pct, \n                              fill = religion))\np_out &lt;- p + geom_col(position = \"dodge\") +\n    labs(x = \"Region\",\n         y = \"Percent\", \n         fill = \"Religion\")"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#we-might-write-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#we-might-write-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "We might write …",
    "text": "We might write …"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#is-this-an-effective-graph-not-really",
    "href": "slides/05-work-with-dplyr-and-geoms.html#is-this-an-effective-graph-not-really",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Is this an effective graph? Not really!",
    "text": "Is this an effective graph? Not really!"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#try-faceting-instead",
    "href": "slides/05-work-with-dplyr-and-geoms.html#try-faceting-instead",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Try faceting instead",
    "text": "Try faceting instead\n\np &lt;- ggplot(data = rel_by_region, \n                mapping = aes(x = pct, \n                              y = reorder(religion, -pct), \n                              fill = religion))\np_out_facet &lt;- p + geom_col() +\n  guides(fill = \"none\") + \n  facet_wrap(~ bigregion, nrow = 1) +\n  labs(x = \"Percent\",\n       y = NULL) \n\n\nPutting categories on the y-axis is a very useful trick.\nFaceting reduces the number of guides the viewer needs to consult."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#try-faceting-instead-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#try-faceting-instead-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Try faceting instead",
    "text": "Try faceting instead"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#try-faceting-instead-2",
    "href": "slides/05-work-with-dplyr-and-geoms.html#try-faceting-instead-2",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Try faceting instead",
    "text": "Try faceting instead\nTry putting categories on the y-axis. (And reorder them by x.)\nTry faceting variables instead of mapping them to color or shape.\nTry to minimize the need for guides and legends."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#facet-children-vs-age-by-race",
    "href": "slides/05-work-with-dplyr-and-geoms.html#facet-children-vs-age-by-race",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Facet Children vs Age, by Race",
    "text": "Facet Children vs Age, by Race\n\np &lt;-  ggplot(data = gss_sm,\n             mapping = aes(x = age, y = childs))\n\np + geom_point(alpha = 0.2) + \n  geom_smooth() +\n  facet_wrap(~ race)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#facet-by-more-than-one-variable",
    "href": "slides/05-work-with-dplyr-and-geoms.html#facet-by-more-than-one-variable",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Facet by more than one variable",
    "text": "Facet by more than one variable\n\np &lt;-  ggplot(data = gss_sm,\n             mapping = aes(x = age, y = childs))\n\np + geom_point(alpha = 0.2) + \n  geom_smooth() +\n  facet_wrap(~ sex + race)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#arrange-facet_wrap-quite-freely",
    "href": "slides/05-work-with-dplyr-and-geoms.html#arrange-facet_wrap-quite-freely",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Arrange facet_wrap() quite freely",
    "text": "Arrange facet_wrap() quite freely\n\np &lt;-  ggplot(data = gss_sm,\n             mapping = aes(x = age, y = childs))\n\np + geom_point(alpha = 0.2) + \n  geom_smooth() +\n  facet_wrap(~ sex + race, nrow = 1)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#facet_grid-is-more-like-a-true-crosstab",
    "href": "slides/05-work-with-dplyr-and-geoms.html#facet_grid-is-more-like-a-true-crosstab",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "facet_grid() is more like a true crosstab",
    "text": "facet_grid() is more like a true crosstab\n\np + geom_point(alpha = 0.2) + \n  geom_smooth() +\n  facet_grid(sex ~ race)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#extend-both-to-multi-way-views",
    "href": "slides/05-work-with-dplyr-and-geoms.html#extend-both-to-multi-way-views",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Extend both to multi-way views",
    "text": "Extend both to multi-way views\n\np_out &lt;- p + geom_point(alpha = 0.2) + \n  geom_smooth() +\n  facet_grid(bigregion ~ race + sex)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#core-grammar",
    "href": "slides/05-work-with-dplyr-and-geoms.html#core-grammar",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Core Grammar",
    "text": "Core Grammar\n\nCore grammar"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#grouped-data-faceting",
    "href": "slides/05-work-with-dplyr-and-geoms.html#grouped-data-faceting",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Grouped data; faceting",
    "text": "Grouped data; faceting\n\nAlong with a few peeks at scale transformations, guide adjustments, and theme adjustment\n\n\nAll basic steps"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#dplyr-and-pipelining",
    "href": "slides/05-work-with-dplyr-and-geoms.html#dplyr-and-pipelining",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "dplyr and Pipelining",
    "text": "dplyr and Pipelining\nThe elements of filtering and summarizing\n\ngss_sm |&gt; \n  group_by(bigregion, religion) |&gt; \n  tally() |&gt; \n  mutate(freq = n / sum(n),\n         pct = round((freq*100), 1)) \n\n# A tibble: 24 × 5\n# Groups:   bigregion [4]\n   bigregion religion       n    freq   pct\n   &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 Northeast Protestant   158 0.324    32.4\n 2 Northeast Catholic     162 0.332    33.2\n 3 Northeast Jewish        27 0.0553    5.5\n 4 Northeast None         112 0.230    23  \n 5 Northeast Other         28 0.0574    5.7\n 6 Northeast &lt;NA&gt;           1 0.00205   0.2\n 7 Midwest   Protestant   325 0.468    46.8\n 8 Midwest   Catholic     172 0.247    24.7\n 9 Midwest   Jewish         3 0.00432   0.4\n10 Midwest   None         157 0.226    22.6\n# ℹ 14 more rows"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#organdata-is-in-the-socviz-package",
    "href": "slides/05-work-with-dplyr-and-geoms.html#organdata-is-in-the-socviz-package",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "organdata is in the socviz package",
    "text": "organdata is in the socviz package\n\norgandata\n\n# A tibble: 238 × 21\n   country   year       donors   pop pop_dens   gdp gdp_lag health health_lag\n   &lt;chr&gt;     &lt;date&gt;      &lt;dbl&gt; &lt;int&gt;    &lt;dbl&gt; &lt;int&gt;   &lt;int&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n 1 Australia NA          NA    17065    0.220 16774   16591   1300       1224\n 2 Australia 1991-01-01  12.1  17284    0.223 17171   16774   1379       1300\n 3 Australia 1992-01-01  12.4  17495    0.226 17914   17171   1455       1379\n 4 Australia 1993-01-01  12.5  17667    0.228 18883   17914   1540       1455\n 5 Australia 1994-01-01  10.2  17855    0.231 19849   18883   1626       1540\n 6 Australia 1995-01-01  10.2  18072    0.233 21079   19849   1737       1626\n 7 Australia 1996-01-01  10.6  18311    0.237 21923   21079   1846       1737\n 8 Australia 1997-01-01  10.3  18518    0.239 22961   21923   1948       1846\n 9 Australia 1998-01-01  10.5  18711    0.242 24148   22961   2077       1948\n10 Australia 1999-01-01   8.67 18926    0.244 25445   24148   2231       2077\n# ℹ 228 more rows\n# ℹ 12 more variables: pubhealth &lt;dbl&gt;, roads &lt;dbl&gt;, cerebvas &lt;int&gt;,\n#   assault &lt;int&gt;, external &lt;int&gt;, txp_pop &lt;dbl&gt;, world &lt;chr&gt;, opt &lt;chr&gt;,\n#   consent_law &lt;chr&gt;, consent_practice &lt;chr&gt;, consistent &lt;chr&gt;, ccode &lt;chr&gt;"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#first-look",
    "href": "slides/05-work-with-dplyr-and-geoms.html#first-look",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "First look",
    "text": "First look\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = year, y = donors))\np + geom_point()"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#first-look-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#first-look-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "First look",
    "text": "First look\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = year, y = donors))\np + geom_line()"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#first-look-2",
    "href": "slides/05-work-with-dplyr-and-geoms.html#first-look-2",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "First look",
    "text": "First look\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = year, y = donors))\np + geom_line(aes(group = country))"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#first-look-3",
    "href": "slides/05-work-with-dplyr-and-geoms.html#first-look-3",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "First look",
    "text": "First look\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = year, y = donors))\np + geom_line() + \n  facet_wrap(~ country, nrow = 3)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#first-look-4",
    "href": "slides/05-work-with-dplyr-and-geoms.html#first-look-4",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "First look",
    "text": "First look\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = year, y = donors))\np + geom_line() + \n  facet_wrap(~ reorder(country, donors, na.rm = TRUE), nrow = 3)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#first-look-5",
    "href": "slides/05-work-with-dplyr-and-geoms.html#first-look-5",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "First look",
    "text": "First look\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = year, y = donors))\np + geom_line() + \n  facet_wrap(~ reorder(country, -donors, na.rm = TRUE), nrow = 3)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#summarize-a-bunch-of-variables",
    "href": "slides/05-work-with-dplyr-and-geoms.html#summarize-a-bunch-of-variables",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Summarize a bunch of variables",
    "text": "Summarize a bunch of variables\n\nby_country &lt;- organdata |&gt;  \n  group_by(consent_law, country)  |&gt; \n    summarize(donors_mean= mean(donors, na.rm = TRUE),\n              donors_sd = sd(donors, na.rm = TRUE),\n              gdp_mean = mean(gdp, na.rm = TRUE),\n              health_mean = mean(health, na.rm = TRUE),\n              roads_mean = mean(roads, na.rm = TRUE),\n              cerebvas_mean = mean(cerebvas, na.rm = TRUE))\n\nhead(by_country)\n\n# A tibble: 6 × 8\n# Groups:   consent_law [1]\n  consent_law country     donors_mean donors_sd gdp_mean health_mean roads_mean\n  &lt;chr&gt;       &lt;chr&gt;             &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt;\n1 Informed    Australia          10.6     1.14    22179.       1958.      105. \n2 Informed    Canada             14.0     0.751   23711.       2272.      109. \n3 Informed    Denmark            13.1     1.47    23722.       2054.      102. \n4 Informed    Germany            13.0     0.611   22163.       2349.      113. \n5 Informed    Ireland            19.8     2.48    20824.       1480.      118. \n6 Informed    Netherlands        13.7     1.55    23013.       1993.       76.1\n# ℹ 1 more variable: cerebvas_mean &lt;dbl&gt;\n\n\n\nThis works, but there’s so much repetition! It’s an open invitation to make mistakes copying and pasting."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#use-across-and-where-instead",
    "href": "slides/05-work-with-dplyr-and-geoms.html#use-across-and-where-instead",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Use across() and where() instead",
    "text": "Use across() and where() instead\n\n  by_country &lt;- organdata |&gt; \n    group_by(consent_law, country) |&gt;\n      summarize(across(where(is.numeric),\n                       list(mean = ~ mean(.x, na.rm = TRUE), \n                            sd = ~ sd(.x, na.rm = TRUE))))\nhead(by_country)              \n\n# A tibble: 6 × 28\n# Groups:   consent_law [1]\n  consent_law country     donors_mean donors_sd pop_mean pop_sd pop_dens_mean\n  &lt;chr&gt;       &lt;chr&gt;             &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;\n1 Informed    Australia          10.6     1.14    18318.  831.          0.237\n2 Informed    Canada             14.0     0.751   29608. 1193.          0.297\n3 Informed    Denmark            13.1     1.47     5257.   80.6        12.2  \n4 Informed    Germany            13.0     0.611   80255. 5158.         22.5  \n5 Informed    Ireland            19.8     2.48     3674.  132.          5.23 \n6 Informed    Netherlands        13.7     1.55    15548.  373.         37.4  \n# ℹ 21 more variables: pop_dens_sd &lt;dbl&gt;, gdp_mean &lt;dbl&gt;, gdp_sd &lt;dbl&gt;,\n#   gdp_lag_mean &lt;dbl&gt;, gdp_lag_sd &lt;dbl&gt;, health_mean &lt;dbl&gt;, health_sd &lt;dbl&gt;,\n#   health_lag_mean &lt;dbl&gt;, health_lag_sd &lt;dbl&gt;, pubhealth_mean &lt;dbl&gt;,\n#   pubhealth_sd &lt;dbl&gt;, roads_mean &lt;dbl&gt;, roads_sd &lt;dbl&gt;, cerebvas_mean &lt;dbl&gt;,\n#   cerebvas_sd &lt;dbl&gt;, assault_mean &lt;dbl&gt;, assault_sd &lt;dbl&gt;,\n#   external_mean &lt;dbl&gt;, external_sd &lt;dbl&gt;, txp_pop_mean &lt;dbl&gt;,\n#   txp_pop_sd &lt;dbl&gt;"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#use-across-and-where-instead-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#use-across-and-where-instead-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Use across() and where() instead",
    "text": "Use across() and where() instead\n\nby_country &lt;- organdata |&gt; \n  group_by(consent_law, country) |&gt;\n    summarize(across(where(is.numeric),\n                       list(mean = ~ mean(.x, na.rm = TRUE), \n                            sd = ~ sd(.x, na.rm = TRUE))), \n              .groups = \"drop\") \nhead(by_country)              \n\n# A tibble: 6 × 28\n  consent_law country     donors_mean donors_sd pop_mean pop_sd pop_dens_mean\n  &lt;chr&gt;       &lt;chr&gt;             &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;\n1 Informed    Australia          10.6     1.14    18318.  831.          0.237\n2 Informed    Canada             14.0     0.751   29608. 1193.          0.297\n3 Informed    Denmark            13.1     1.47     5257.   80.6        12.2  \n4 Informed    Germany            13.0     0.611   80255. 5158.         22.5  \n5 Informed    Ireland            19.8     2.48     3674.  132.          5.23 \n6 Informed    Netherlands        13.7     1.55    15548.  373.         37.4  \n# ℹ 21 more variables: pop_dens_sd &lt;dbl&gt;, gdp_mean &lt;dbl&gt;, gdp_sd &lt;dbl&gt;,\n#   gdp_lag_mean &lt;dbl&gt;, gdp_lag_sd &lt;dbl&gt;, health_mean &lt;dbl&gt;, health_sd &lt;dbl&gt;,\n#   health_lag_mean &lt;dbl&gt;, health_lag_sd &lt;dbl&gt;, pubhealth_mean &lt;dbl&gt;,\n#   pubhealth_sd &lt;dbl&gt;, roads_mean &lt;dbl&gt;, roads_sd &lt;dbl&gt;, cerebvas_mean &lt;dbl&gt;,\n#   cerebvas_sd &lt;dbl&gt;, assault_mean &lt;dbl&gt;, assault_sd &lt;dbl&gt;,\n#   external_mean &lt;dbl&gt;, external_sd &lt;dbl&gt;, txp_pop_mean &lt;dbl&gt;,\n#   txp_pop_sd &lt;dbl&gt;"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#plot-our-summary-data",
    "href": "slides/05-work-with-dplyr-and-geoms.html#plot-our-summary-data",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Plot our summary data",
    "text": "Plot our summary data\n\n\nby_country |&gt; \n  ggplot(mapping = \n           aes(x = donors_mean, \n               y = reorder(country, donors_mean),\n               color = consent_law)) + \n  geom_point(size=3) +\n  labs(x = \"Donor Procurement Rate\",\n       y = NULL, \n       color = \"Consent Law\")"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#what-about-faceting-it-instead",
    "href": "slides/05-work-with-dplyr-and-geoms.html#what-about-faceting-it-instead",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "What about faceting it instead?",
    "text": "What about faceting it instead?\nThe problem is that countries can only be in one Consent Law category.\n\n\nby_country |&gt; \n  ggplot(mapping = \n           aes(x = donors_mean, \n               y = reorder(country, donors_mean),\n               color = consent_law)) + \n  geom_point(size=3) +\n  guides(color = \"none\") +\n  facet_wrap(~ consent_law) + \n  labs(x = \"Donor Procurement Rate\",\n       y = NULL, \n       color = \"Consent Law\")"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#what-about-faceting-it-instead-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#what-about-faceting-it-instead-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "What about faceting it instead?",
    "text": "What about faceting it instead?\nRestricting to one column doesn’t fix it.\n\n\nby_country |&gt; \n  ggplot(mapping = \n           aes(x = donors_mean, \n               y = reorder(country, donors_mean),\n               color = consent_law)) + \n  geom_point(size=3) +\n  guides(color = \"none\") +\n  facet_wrap(~ consent_law, ncol = 1) + \n  labs(x = \"Donor Procurement Rate\",\n       y = NULL, \n       color = \"Consent Law\")"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#allow-the-y-scale-to-vary",
    "href": "slides/05-work-with-dplyr-and-geoms.html#allow-the-y-scale-to-vary",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Allow the y-scale to vary",
    "text": "Allow the y-scale to vary\nNormally the point of a facet is to preserve comparability between panels by not allowing the scales to vary. But for categorical measures it can be useful to allow this.\n\n\nby_country |&gt; \n  ggplot(mapping = \n           aes(x = donors_mean, \n               y = reorder(country, donors_mean),\n               color = consent_law)) + \n  geom_point(size=3) +\n  guides(color = \"none\") +\n  facet_wrap(~ consent_law, \n             ncol = 1,\n             scales = \"free_y\") +  \n  labs(x = \"Donor Procurement Rate\",\n       y = NULL, \n       color = \"Consent Law\")"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#again-these-methods-are-general",
    "href": "slides/05-work-with-dplyr-and-geoms.html#again-these-methods-are-general",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Again, these methods are general",
    "text": "Again, these methods are general\n\n\nby_country |&gt; \n  ggplot(mapping = \n           aes(x = donors_mean, \n               y = reorder(country, donors_mean),\n               color = consent_law)) + \n  geom_pointrange(mapping = \n                    aes(xmin = donors_mean - donors_sd, \n                        xmax = donors_mean + donors_sd)) + \n  guides(color = \"none\") +\n  facet_wrap(~ consent_law, \n             ncol = 1,\n             scales = \"free_y\") +  \n  labs(x = \"Donor Procurement Rate\",\n       y = NULL, \n       color = \"Consent Law\")"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#geom_text-for-basic-labels",
    "href": "slides/05-work-with-dplyr-and-geoms.html#geom_text-for-basic-labels",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "geom_text() for basic labels",
    "text": "geom_text() for basic labels\n\n\nby_country |&gt; \n  ggplot(mapping = aes(x = roads_mean, \n                       y = donors_mean)) + \n  geom_text(mapping = aes(label = country))"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#its-not-very-flexible",
    "href": "slides/05-work-with-dplyr-and-geoms.html#its-not-very-flexible",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "It’s not very flexible",
    "text": "It’s not very flexible\n\n\nby_country |&gt; \n  ggplot(mapping = aes(x = roads_mean, \n                       y = donors_mean)) + \n  geom_point() + \n  geom_text(mapping = aes(label = country),\n            hjust = 0)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#there-are-tricks-but-theyre-limited",
    "href": "slides/05-work-with-dplyr-and-geoms.html#there-are-tricks-but-theyre-limited",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "There are tricks, but they’re limited",
    "text": "There are tricks, but they’re limited\n\n\nby_country |&gt; \n  ggplot(mapping = aes(x = roads_mean, \n                       y = donors_mean)) + \n  geom_point() + \n  geom_text(mapping = aes(x = roads_mean + 2, \n                          label = country),\n            hjust = 0)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#well-use-ggrepel-instead",
    "href": "slides/05-work-with-dplyr-and-geoms.html#well-use-ggrepel-instead",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "We’ll use ggrepel instead",
    "text": "We’ll use ggrepel instead\nThe ggrepel package provides geom_text_repel() and geom_label_repel()"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#elections_historic-is-in-socviz",
    "href": "slides/05-work-with-dplyr-and-geoms.html#elections_historic-is-in-socviz",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "elections_historic is in socviz",
    "text": "elections_historic is in socviz\n\nelections_historic\n\n# A tibble: 49 × 19\n   election  year winner      win_party ec_pct popular_pct popular_margin  votes\n      &lt;int&gt; &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;      &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;  &lt;int&gt;\n 1       10  1824 John Quinc… D.-R.      0.322       0.309        -0.104  1.13e5\n 2       11  1828 Andrew Jac… Dem.       0.682       0.559         0.122  6.43e5\n 3       12  1832 Andrew Jac… Dem.       0.766       0.547         0.178  7.03e5\n 4       13  1836 Martin Van… Dem.       0.578       0.508         0.142  7.63e5\n 5       14  1840 William He… Whig       0.796       0.529         0.0605 1.28e6\n 6       15  1844 James Polk  Dem.       0.618       0.495         0.0145 1.34e6\n 7       16  1848 Zachary Ta… Whig       0.562       0.473         0.0479 1.36e6\n 8       17  1852 Franklin P… Dem.       0.858       0.508         0.0695 1.61e6\n 9       18  1856 James Buch… Dem.       0.588       0.453         0.122  1.84e6\n10       19  1860 Abraham Li… Rep.       0.594       0.396         0.101  1.86e6\n# ℹ 39 more rows\n# ℹ 11 more variables: margin &lt;int&gt;, runner_up &lt;chr&gt;, ru_part &lt;chr&gt;,\n#   turnout_pct &lt;dbl&gt;, winner_lname &lt;chr&gt;, winner_label &lt;chr&gt;, ru_lname &lt;chr&gt;,\n#   ru_label &lt;chr&gt;, two_term &lt;lgl&gt;, ec_votes &lt;dbl&gt;, ec_denom &lt;dbl&gt;"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#well-draw-a-plot-like-this",
    "href": "slides/05-work-with-dplyr-and-geoms.html#well-draw-a-plot-like-this",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "We’ll draw a plot like this",
    "text": "We’ll draw a plot like this\n\nPresidential elections"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#keep-things-neat",
    "href": "slides/05-work-with-dplyr-and-geoms.html#keep-things-neat",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Keep things neat",
    "text": "Keep things neat\n\n## The packages we'll use in addition to ggplot\nlibrary(ggrepel) \nlibrary(scales) \n\np_title &lt;- \"Presidential Elections: Popular & Electoral College Margins\"\np_subtitle &lt;- \"1824-2016\"\np_caption &lt;- \"Data for 2016 are provisional.\"\nx_label &lt;- \"Winner's share of Popular Vote\"\ny_label &lt;- \"Winner's share of Electoral College Votes\""
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#base-layer-lines-points",
    "href": "slides/05-work-with-dplyr-and-geoms.html#base-layer-lines-points",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Base Layer, Lines, Points",
    "text": "Base Layer, Lines, Points\n\n\np &lt;- ggplot(data = elections_historic, \n            mapping = aes(x = popular_pct, \n                          y = ec_pct,\n                          label = winner_label))\n\np + geom_hline(yintercept = 0.5, \n               linewidth = 1.4, \n               color = \"gray80\") +\n    geom_vline(xintercept = 0.5, \n               linewidth = 1.4, \n               color = \"gray80\") +\n    geom_point()"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#add-the-labels",
    "href": "slides/05-work-with-dplyr-and-geoms.html#add-the-labels",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Add the labels",
    "text": "Add the labels\nThis looks terrible here because geom_text_repel() uses the dimensions of the available graphics device to iteratively figure out the labels. Let’s allow it to draw on the whole slide.\n\n\np &lt;- ggplot(data = elections_historic, \n            mapping = aes(x = popular_pct, \n                          y = ec_pct,\n                          label = winner_label))\n\np + geom_hline(yintercept = 0.5, \n               linewidth = 1.4, color = \"gray80\") +\n  geom_vline(xintercept = 0.5, \n             linewidth = 1.4, color = \"gray80\") +\n  geom_point() + \n  geom_text_repel()"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#labeling-is-with-respect-to-the-plot-size",
    "href": "slides/05-work-with-dplyr-and-geoms.html#labeling-is-with-respect-to-the-plot-size",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Labeling is with respect to the plot size",
    "text": "Labeling is with respect to the plot size\n\np &lt;- ggplot(data = elections_historic, \n            mapping  = aes(x = popular_pct, \n                           y = ec_pct,\n                           label = winner_label))\n\np_out &lt;- p + \n  geom_hline(yintercept = 0.5, \n             linewidth = 1.4, \n             color = \"gray80\") +\n  geom_vline(xintercept = 0.5, \n             linewidth = 1.4, \n             color = \"gray80\") +\n  geom_point() + \n  geom_text_repel()"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#adjust-the-scales",
    "href": "slides/05-work-with-dplyr-and-geoms.html#adjust-the-scales",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Adjust the Scales",
    "text": "Adjust the Scales\n\np &lt;- ggplot(data = elections_historic, \n            mapping  = aes(x = popular_pct, \n                           y = ec_pct,\n                           label = winner_label))\np_out &lt;- p + geom_hline(yintercept = 0.5, \n                        linewidth = 1.4, \n                        color = \"gray80\") +\n    geom_vline(xintercept = 0.5, \n               linewidth = 1.4, \n               color = \"gray80\") +\n    geom_point() +\n    geom_text_repel() +\n    scale_x_continuous(labels = label_percent()) + \n    scale_y_continuous(labels = label_percent())"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#add-the-labels-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#add-the-labels-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Add the labels",
    "text": "Add the labels\n\np &lt;- ggplot(data = elections_historic, \n            mapping  = aes(x = popular_pct, \n                           y = ec_pct,\n                           label = winner_label))\np_out &lt;- p + geom_hline(yintercept = 0.5, \n                        linewidth = 1.4, \n                        color = \"gray80\") +\n  geom_vline(xintercept = 0.5, \n             linewidth = 1.4, \n             color = \"gray80\") +\n  geom_point() +\n  geom_text_repel(mapping = aes(family = \"Tenso Slide\")) +\n  scale_x_continuous(labels = label_percent()) +\n  scale_y_continuous(labels = label_percent()) +\n  labs(x = x_label, y = y_label,  \n       title = p_title, \n       subtitle = p_subtitle,\n       caption = p_caption)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#option-1-on-the-fly-in-ggplot",
    "href": "slides/05-work-with-dplyr-and-geoms.html#option-1-on-the-fly-in-ggplot",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Option 1: On the fly in ggplot",
    "text": "Option 1: On the fly in ggplot\n\n\nby_country |&gt; \n  ggplot(mapping = aes(x = gdp_mean,\n                       y = health_mean)) +\n  geom_point() + \n  geom_text_repel(data = subset(by_country, gdp_mean &gt; 25000), \n                  mapping = aes(label = country))"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#option-1-on-the-fly-inside-ggplot",
    "href": "slides/05-work-with-dplyr-and-geoms.html#option-1-on-the-fly-inside-ggplot",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Option 1: On the fly inside ggplot",
    "text": "Option 1: On the fly inside ggplot\nStuffing everything into the subset() call might get messy\n\n\nby_country |&gt; \n  ggplot(mapping = aes(x = gdp_mean,\n                       y = health_mean)) +\n  geom_point() + \n  geom_text_repel(data = subset(by_country, \n                                gdp_mean &gt; 25000 |\n                                  health_mean &lt; 1500 |\n                                  country %in% \"Belgium\"), \n                  mapping = aes(label = country))"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#option-2-use-dplyr-first",
    "href": "slides/05-work-with-dplyr-and-geoms.html#option-2-use-dplyr-first",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Option 2: Use dplyr first",
    "text": "Option 2: Use dplyr first\n\ndf_hl &lt;- by_country |&gt; \n  filter(gdp_mean &gt; 25000 | \n           health_mean &lt; 1500 | \n           country %in% \"Belgium\")\n\ndf_hl\n\n# A tibble: 6 × 28\n  consent_law country       donors_mean donors_sd pop_mean  pop_sd pop_dens_mean\n  &lt;chr&gt;       &lt;chr&gt;               &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;         &lt;dbl&gt;\n1 Informed    Ireland              19.8      2.48    3674.   132.           5.23\n2 Informed    United States        20.0      1.33  269330. 12545.           2.80\n3 Presumed    Belgium              21.9      1.94   10153.   109.          30.7 \n4 Presumed    Norway               15.4      1.11    4386.    97.3          1.35\n5 Presumed    Spain                28.1      4.96   39666.   951.           7.84\n6 Presumed    Switzerland          14.2      1.71    7037.   170.          17.0 \n# ℹ 21 more variables: pop_dens_sd &lt;dbl&gt;, gdp_mean &lt;dbl&gt;, gdp_sd &lt;dbl&gt;,\n#   gdp_lag_mean &lt;dbl&gt;, gdp_lag_sd &lt;dbl&gt;, health_mean &lt;dbl&gt;, health_sd &lt;dbl&gt;,\n#   health_lag_mean &lt;dbl&gt;, health_lag_sd &lt;dbl&gt;, pubhealth_mean &lt;dbl&gt;,\n#   pubhealth_sd &lt;dbl&gt;, roads_mean &lt;dbl&gt;, roads_sd &lt;dbl&gt;, cerebvas_mean &lt;dbl&gt;,\n#   cerebvas_sd &lt;dbl&gt;, assault_mean &lt;dbl&gt;, assault_sd &lt;dbl&gt;,\n#   external_mean &lt;dbl&gt;, external_sd &lt;dbl&gt;, txp_pop_mean &lt;dbl&gt;,\n#   txp_pop_sd &lt;dbl&gt;"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#option-2-use-dplyr-first-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#option-2-use-dplyr-first-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Option 2: Use dplyr first",
    "text": "Option 2: Use dplyr first\nThis makes things neater. A geom can be fully “autonomous”. Each one can have its own mapping call and its own data source. This can be very useful when building up plots overlaying several sources or subsets of data.\n\n\nby_country |&gt; \n  ggplot(mapping = aes(x = gdp_mean,\n                       y = health_mean)) +\n  geom_point() + \n  geom_text_repel(data = df_hl, \n                  mapping = aes(label = country))"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#annotate-can-imitate-geoms",
    "href": "slides/05-work-with-dplyr-and-geoms.html#annotate-can-imitate-geoms",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "annotate() can imitate geoms",
    "text": "annotate() can imitate geoms\n\n\norgandata |&gt; \n  ggplot(mapping = aes(x = roads, \n                       y = donors)) + \n  geom_point() + \n  annotate(geom = \"text\", \n           family = \"Tenso Slide\",\n           x = 157, \n           y = 33,\n           label = \"A surprisingly high \\n recovery rate.\",\n           hjust = 0)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#annotate-can-imitate-geoms-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#annotate-can-imitate-geoms-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "annotate() can imitate geoms",
    "text": "annotate() can imitate geoms\n\n\norgandata |&gt; \n  ggplot(mapping = aes(x = roads, \n                       y = donors)) + \n  geom_point() +\n  annotate(geom = \"rect\", \n           xmin = 125, xmax = 155,\n           ymin = 30, ymax = 35,\n           fill = \"red\", \n           alpha = 0.2) + \n  annotate(geom = \"text\", \n           x = 157, y = 33,\n           family = \"Tenso Slide\",\n           label = \"A surprisingly high \\n recovery rate.\", \n           hjust = 0)"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#every-mapped-variable-has-a-scale",
    "href": "slides/05-work-with-dplyr-and-geoms.html#every-mapped-variable-has-a-scale",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Every mapped variable has a scale",
    "text": "Every mapped variable has a scale\n\nAesthetic mappings link quantities or categories in your data to things you can see on the graph. Thus, they have a scale associated with that representation.\nScale functions manage this relationship. Remember: not just x and y but also color, fill, shape, size, and alpha are scales.\nIf it can represent your data, it has a scale, and a scale function to manage it.\nThis means you control things like color schemes for data mappings through scale functions\nBecause those colors are representing features of your data."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#naming-conventions-for-scale-functions",
    "href": "slides/05-work-with-dplyr-and-geoms.html#naming-conventions-for-scale-functions",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Naming conventions for scale functions",
    "text": "Naming conventions for scale functions\n\nIn general, scale functions are named like this:\n\n\nscale_&lt;MAPPING&gt;_&lt;KIND&gt;()"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#naming-conventions",
    "href": "slides/05-work-with-dplyr-and-geoms.html#naming-conventions",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Naming conventions",
    "text": "Naming conventions\n\nIn general, scale functions are named like this:\n\n\nscale_&lt;MAPPING&gt;_&lt;KIND&gt;()\n\n\nWe already know there are a lot of mappings\nx, y, color, size, shape, and so on."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#naming-conventions-1",
    "href": "slides/05-work-with-dplyr-and-geoms.html#naming-conventions-1",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Naming conventions",
    "text": "Naming conventions\n\nIn general, scale functions are named like this:\n\n\nscale_&lt;MAPPING&gt;_&lt;KIND&gt;()\n\n\nWe already know there are a lot of mappings\nx, y, color, size, shape, and so on.\nAnd there are many kinds of scale as well.\ndiscrete, continuous, log10, date, binned, and many others.\nSo there’s a whole zoo of scale functions.\nThe naming convention helps us keep track."
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#naming-conventions-2",
    "href": "slides/05-work-with-dplyr-and-geoms.html#naming-conventions-2",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Naming conventions",
    "text": "Naming conventions\n\nscale_&lt;MAPPING&gt;_&lt;KIND&gt;()\n\n\n\n\nscale_x_continuous()\nscale_y_continous()\nscale_x_discrete()\nscale_y_discrete()\nscale_x_log10()\nscale_x_sqrt()"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#naming-conventions-3",
    "href": "slides/05-work-with-dplyr-and-geoms.html#naming-conventions-3",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Naming conventions",
    "text": "Naming conventions\n\nscale_&lt;MAPPING&gt;_&lt;KIND&gt;()\n\n\n\n\nscale_x_continuous()\nscale_y_continous()\nscale_x_discrete()\nscale_y_discrete()\nscale_x_log10()\nscale_x_sqrt()\n\n\n\nscale_color_discrete()\nscale_color_gradient()\nscale_color_gradient2()\nscale_color_brewer()\nscale_fill_discrete()\nscale_fill_gradient()\nscale_fill_gradient2()\nscale_fill_brewer()"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#scale-functions-in-practice",
    "href": "slides/05-work-with-dplyr-and-geoms.html#scale-functions-in-practice",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "Scale functions in practice",
    "text": "Scale functions in practice\n\nScale functions take arguments appropriate to their mapping and kind\n\n\n\norgandata |&gt; \n  ggplot(mapping = aes(x = roads,\n                       y = donors,\n                       color = world)) + \n  geom_point() +\n  scale_y_continuous(breaks = c(5, 15, 25),\n                     labels = c(\"Five\", \n                                \"Fifteen\", \n                                \"Twenty Five\"))"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#more-usefully",
    "href": "slides/05-work-with-dplyr-and-geoms.html#more-usefully",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "More usefully …",
    "text": "More usefully …\n\n\norgandata |&gt; \n  ggplot(mapping = aes(x = roads,\n                       y = donors,\n                       color = world)) + \n  geom_point() +\n  scale_color_discrete(labels =\n                         c(\"Corporatist\", \n                           \"Liberal\",\n                           \"Social Democratic\", \n                           \"Unclassified\")) +\n  labs(x = \"Road Deaths\",\n       y = \"Donor Procurement\",\n       color = \"Welfare State\")"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#the-guides-function",
    "href": "slides/05-work-with-dplyr-and-geoms.html#the-guides-function",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "The guides() function",
    "text": "The guides() function\n\nControl overall properties of the guide labels.\nCommon use: turning it off.\nWe’ll see more advanced uses later.\n\n\n\norgandata |&gt; \n  ggplot(mapping = aes(x = roads,\n                       y = donors,\n                       color = consent_law)) + \n  geom_point() +\n  facet_wrap(~ consent_law, ncol = 1) +\n  guides(color = \"none\") + \n  labs(x = \"Road Deaths\",\n       y = \"Donor Procurement\")"
  },
  {
    "objectID": "slides/05-work-with-dplyr-and-geoms.html#the-theme-function",
    "href": "slides/05-work-with-dplyr-and-geoms.html#the-theme-function",
    "title": "Data Visualization - 5. Dplyr and Geoms",
    "section": "The theme() function",
    "text": "The theme() function\ntheme() styles parts of your plot that are not directly representing your data. Often the first thing people want to adjust; but logically it’s the last thing.\n\n\n## Using the \"classic\" ggplot theme here\norgandata |&gt; \n  ggplot(mapping = aes(x = roads,\n                       y = donors,\n                       color = consent_law)) + \n  geom_point() +\n  labs(title = \"By Consent Law\",\n    x = \"Road Deaths\",\n    y = \"Donor Procurement\", \n    color = \"Legal Regime:\") + \n  theme(legend.position = \"bottom\", \n        plot.title = element_text(color = \"darkred\",\n                                  face = \"bold\"))"
  },
  {
    "objectID": "slides/07-make-maps-2.html#load-our-packages",
    "href": "slides/07-make-maps-2.html#load-our-packages",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Load our packages",
    "text": "Load our packages\n\nlibrary(here)      # manage file paths\nlibrary(socviz)    # data and some useful functions\nlibrary(tidyverse) # your friend and mine\nlibrary(maps)      # Some basic maps\nlibrary(sf)        # Simple Features Geometries and geom_sf()\nlibrary(ggforce)   # Useful enhancements to ggplot"
  },
  {
    "objectID": "slides/07-make-maps-2.html#geom_polygon-is-limiting",
    "href": "slides/07-make-maps-2.html#geom_polygon-is-limiting",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "geom_polygon() is limiting",
    "text": "geom_polygon() is limiting\n\nIt’s very useful to have the intuition that, when drawing maps, we’re just working with tables of x and y coordinates, and shapes represent quantities in our data, in a way that’s essentially the same as any other geom. This makes it worth getting comfortable with what geom_polygon() and coord_map() are doing. But the business of having very large map tables and manually specifying projections is inefficient.\nIn addition, sometimes our data really is properly spatial, at which point we need a more rigorous and consistent way of specifying those elements. There’s a whole world of Geodesic standards and methods devoted to specifying these things for GIS applications. R is not a dedicated GIS, but we can take advantage of these tools."
  },
  {
    "objectID": "slides/07-make-maps-2.html#geom_polygon-is-limiting-1",
    "href": "slides/07-make-maps-2.html#geom_polygon-is-limiting-1",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "geom_polygon() is limiting",
    "text": "geom_polygon() is limiting\n\nIt’s very useful to have the intuition that, when drawing maps, we’re just working with tables of x and y coordinates, and shapes represent quantities in our data, in a way that’s essentially the same as any other geom. This makes it worth getting comfortable with what geom_polygon() and coord_map() are doing. But the business of having very large map tables and manually specifying projections is inefficient.\nIn addition, sometimes our data really is properly spatial, at which point we need a more rigorous and consistent way of specifying those elements. There’s a whole world of Geodesic standards and methods devoted to specifying these things for GIS applications. R is not a dedicated GIS, but we can take advantage of these tools.\nEnter simple features, the sf package, and geom_sf()"
  },
  {
    "objectID": "slides/07-make-maps-2.html#the-simple-features-package",
    "href": "slides/07-make-maps-2.html#the-simple-features-package",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "The Simple Features package",
    "text": "The Simple Features package\n\nWhen we load sf it creates a way to use several standard GIS concepts and tools, such as the GEOS library for computational geometry, the PROJ software that transforms spatial coordinates from one reference system to another, as in map projections, and the Simple Features standard for specifying the elements of spatial attributes.\n\n\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\n\nLet’s see the main upshot for us."
  },
  {
    "objectID": "slides/07-make-maps-2.html#the-nycdogs-package",
    "href": "slides/07-make-maps-2.html#the-nycdogs-package",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "The nycdogs package",
    "text": "The nycdogs package\n\n\n\n\nlibrary(nycdogs)\nnyc_license\n\n# A tibble: 493,072 × 9\n   animal_name animal_gender animal_birth_year breed_rc         borough zip_code\n   &lt;chr&gt;       &lt;chr&gt;                     &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;      &lt;int&gt;\n 1 Paige       F                          2014 Pit Bull (or Mi… Manhat…    10035\n 2 Yogi        M                          2010 Boxer            Bronx      10465\n 3 Ali         M                          2014 Basenji          Manhat…    10013\n 4 Queen       F                          2013 Akita Crossbreed Manhat…    10013\n 5 Lola        F                          2009 Maltese          Manhat…    10028\n 6 Ian         M                          2006 Unknown          Manhat…    10013\n 7 Buddy       M                          2008 Unknown          Manhat…    10025\n 8 Chewbacca   F                          2012 Labrador (or Cr… Manhat…    10013\n 9 Heidi-Bo    F                          2007 Dachshund Smoot… Brookl…    11215\n10 Massimo     M                          2009 Bull Dog, French Brookl…    11201\n# ℹ 493,062 more rows\n# ℹ 3 more variables: license_issued_date &lt;date&gt;, license_expired_date &lt;date&gt;,\n#   extract_year &lt;dbl&gt;"
  },
  {
    "objectID": "slides/07-make-maps-2.html#the-nycdogs-package-1",
    "href": "slides/07-make-maps-2.html#the-nycdogs-package-1",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "The nycdogs package",
    "text": "The nycdogs package\n\nThe metadata tells you this is not a regular tibble.\n\n\nnyc_zips\n\nSimple feature collection with 262 features and 11 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -74.25576 ymin: 40.49584 xmax: -73.6996 ymax: 40.91517\nGeodetic CRS:  WGS 84\n# A tibble: 262 × 12\n   objectid zip_code po_name     state borough st_fips cty_fips bld_gpostal_code\n      &lt;int&gt;    &lt;int&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;               &lt;int&gt;\n 1        1    11372 Jackson He… NY    Queens  36      081                     0\n 2        2    11004 Glen Oaks   NY    Queens  36      081                     0\n 3        3    11040 New Hyde P… NY    Queens  36      081                     0\n 4        4    11426 Bellerose   NY    Queens  36      081                     0\n 5        5    11365 Fresh Mead… NY    Queens  36      081                     0\n 6        6    11373 Elmhurst    NY    Queens  36      081                     0\n 7        7    11001 Floral Park NY    Queens  36      081                     0\n 8        8    11375 Forest Hil… NY    Queens  36      081                     0\n 9        9    11427 Queens Vil… NY    Queens  36      081                     0\n10       10    11374 Rego Park   NY    Queens  36      081                     0\n# ℹ 252 more rows\n# ℹ 4 more variables: shape_leng &lt;dbl&gt;, shape_area &lt;dbl&gt;, x_id &lt;chr&gt;,\n#   geometry &lt;POLYGON [°]&gt;"
  },
  {
    "objectID": "slides/07-make-maps-2.html#the-nycdogs-package-2",
    "href": "slides/07-make-maps-2.html#the-nycdogs-package-2",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "The nycdogs package",
    "text": "The nycdogs package\n\nnyc_zips |&gt; \n  select(objectid:borough)\n\nSimple feature collection with 262 features and 5 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -74.25576 ymin: 40.49584 xmax: -73.6996 ymax: 40.91517\nGeodetic CRS:  WGS 84\n# A tibble: 262 × 6\n   objectid zip_code po_name         state borough                      geometry\n      &lt;int&gt;    &lt;int&gt; &lt;chr&gt;           &lt;chr&gt; &lt;chr&gt;                   &lt;POLYGON [°]&gt;\n 1        1    11372 Jackson Heights NY    Queens  ((-73.86942 40.74916, -73.89…\n 2        2    11004 Glen Oaks       NY    Queens  ((-73.71068 40.75004, -73.70…\n 3        3    11040 New Hyde Park   NY    Queens  ((-73.70098 40.7389, -73.703…\n 4        4    11426 Bellerose       NY    Queens  ((-73.7227 40.75373, -73.722…\n 5        5    11365 Fresh Meadows   NY    Queens  ((-73.81089 40.72717, -73.81…\n 6        6    11373 Elmhurst        NY    Queens  ((-73.88722 40.72753, -73.88…\n 7        7    11001 Floral Park     NY    Queens  ((-73.70098 40.7389, -73.699…\n 8        8    11375 Forest Hills    NY    Queens  ((-73.85625 40.73672, -73.85…\n 9        9    11427 Queens Village  NY    Queens  ((-73.74169 40.73682, -73.73…\n10       10    11374 Rego Park       NY    Queens  ((-73.86451 40.73407, -73.85…\n# ℹ 252 more rows\n\n\n\nThe polygon column is a list of lat/lon points that, when joined, draw the outline of the zip code area. This is much more compact than a big table where every row is a single point."
  },
  {
    "objectID": "slides/07-make-maps-2.html#lets-make-a-summary-table",
    "href": "slides/07-make-maps-2.html#lets-make-a-summary-table",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Let’s make a summary table",
    "text": "Let’s make a summary table\n\n\n\nnyc_license\n\n\n\n\n# A tibble: 493,072 × 9\n   animal_name animal_gender animal_birth_year breed_rc         borough zip_code\n   &lt;chr&gt;       &lt;chr&gt;                     &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;      &lt;int&gt;\n 1 Paige       F                          2014 Pit Bull (or Mi… Manhat…    10035\n 2 Yogi        M                          2010 Boxer            Bronx      10465\n 3 Ali         M                          2014 Basenji          Manhat…    10013\n 4 Queen       F                          2013 Akita Crossbreed Manhat…    10013\n 5 Lola        F                          2009 Maltese          Manhat…    10028\n 6 Ian         M                          2006 Unknown          Manhat…    10013\n 7 Buddy       M                          2008 Unknown          Manhat…    10025\n 8 Chewbacca   F                          2012 Labrador (or Cr… Manhat…    10013\n 9 Heidi-Bo    F                          2007 Dachshund Smoot… Brookl…    11215\n10 Massimo     M                          2009 Bull Dog, French Brookl…    11201\n# ℹ 493,062 more rows\n# ℹ 3 more variables: license_issued_date &lt;date&gt;, license_expired_date &lt;date&gt;,\n#   extract_year &lt;dbl&gt;"
  },
  {
    "objectID": "slides/07-make-maps-2.html#lets-make-a-summary-table-1",
    "href": "slides/07-make-maps-2.html#lets-make-a-summary-table-1",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Let’s make a summary table",
    "text": "Let’s make a summary table\n\n\n\nnyc_license  |&gt;\n  filter(extract_year == 2018)\n\n\n\n\n# A tibble: 117,371 × 9\n   animal_name animal_gender animal_birth_year breed_rc         borough zip_code\n   &lt;chr&gt;       &lt;chr&gt;                     &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;      &lt;int&gt;\n 1 Ali         M                          2014 Basenji          Manhat…    10013\n 2 Ian         M                          2006 Unknown          Manhat…    10013\n 3 Chewbacca   F                          2012 Labrador (or Cr… Manhat…    10013\n 4 Lola        F                          2006 Miniature Pinsc… Manhat…    10022\n 5 Lucy        F                          2014 Dachshund Smoot… Brookl…    11215\n 6 June        F                          2010 Cavalier King C… Brookl…    11238\n 7 Apple       M                          2013 Havanese         Manhat…    10025\n 8 Muneca      F                          2013 Beagle           Brookl…    11232\n 9 Benson      M                          2010 Boxer            Brookl…    11209\n10 Bigs        M                          2004 Pit Bull (or Mi… Brookl…    11208\n# ℹ 117,361 more rows\n# ℹ 3 more variables: license_issued_date &lt;date&gt;, license_expired_date &lt;date&gt;,\n#   extract_year &lt;dbl&gt;"
  },
  {
    "objectID": "slides/07-make-maps-2.html#lets-make-a-summary-table-2",
    "href": "slides/07-make-maps-2.html#lets-make-a-summary-table-2",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Let’s make a summary table",
    "text": "Let’s make a summary table\n\n\n\nnyc_license  |&gt;\n  filter(extract_year == 2018) |&gt;\n  group_by(breed_rc, zip_code)\n\n\n\n\n# A tibble: 117,371 × 9\n# Groups:   breed_rc, zip_code [18,945]\n   animal_name animal_gender animal_birth_year breed_rc         borough zip_code\n   &lt;chr&gt;       &lt;chr&gt;                     &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;      &lt;int&gt;\n 1 Ali         M                          2014 Basenji          Manhat…    10013\n 2 Ian         M                          2006 Unknown          Manhat…    10013\n 3 Chewbacca   F                          2012 Labrador (or Cr… Manhat…    10013\n 4 Lola        F                          2006 Miniature Pinsc… Manhat…    10022\n 5 Lucy        F                          2014 Dachshund Smoot… Brookl…    11215\n 6 June        F                          2010 Cavalier King C… Brookl…    11238\n 7 Apple       M                          2013 Havanese         Manhat…    10025\n 8 Muneca      F                          2013 Beagle           Brookl…    11232\n 9 Benson      M                          2010 Boxer            Brookl…    11209\n10 Bigs        M                          2004 Pit Bull (or Mi… Brookl…    11208\n# ℹ 117,361 more rows\n# ℹ 3 more variables: license_issued_date &lt;date&gt;, license_expired_date &lt;date&gt;,\n#   extract_year &lt;dbl&gt;"
  },
  {
    "objectID": "slides/07-make-maps-2.html#lets-make-a-summary-table-3",
    "href": "slides/07-make-maps-2.html#lets-make-a-summary-table-3",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Let’s make a summary table",
    "text": "Let’s make a summary table\n\n\n\nnyc_license  |&gt;\n  filter(extract_year == 2018) |&gt;\n  group_by(breed_rc, zip_code) |&gt;\n  tally()\n\n\n\n\n# A tibble: 18,945 × 3\n# Groups:   breed_rc [311]\n   breed_rc      zip_code     n\n   &lt;chr&gt;            &lt;int&gt; &lt;int&gt;\n 1 Affenpinscher    10005     1\n 2 Affenpinscher    10011     1\n 3 Affenpinscher    10013     1\n 4 Affenpinscher    10014     1\n 5 Affenpinscher    10016     1\n 6 Affenpinscher    10017     1\n 7 Affenpinscher    10018     1\n 8 Affenpinscher    10019     1\n 9 Affenpinscher    10021     1\n10 Affenpinscher    10023     1\n# ℹ 18,935 more rows"
  },
  {
    "objectID": "slides/07-make-maps-2.html#lets-make-a-summary-table-4",
    "href": "slides/07-make-maps-2.html#lets-make-a-summary-table-4",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Let’s make a summary table",
    "text": "Let’s make a summary table\n\n\n\nnyc_license  |&gt;\n  filter(extract_year == 2018) |&gt;\n  group_by(breed_rc, zip_code) |&gt;\n  tally() |&gt;\n  mutate(freq = n / sum(n))\n\n\n\n\n# A tibble: 18,945 × 4\n# Groups:   breed_rc [311]\n   breed_rc      zip_code     n   freq\n   &lt;chr&gt;            &lt;int&gt; &lt;int&gt;  &lt;dbl&gt;\n 1 Affenpinscher    10005     1 0.0303\n 2 Affenpinscher    10011     1 0.0303\n 3 Affenpinscher    10013     1 0.0303\n 4 Affenpinscher    10014     1 0.0303\n 5 Affenpinscher    10016     1 0.0303\n 6 Affenpinscher    10017     1 0.0303\n 7 Affenpinscher    10018     1 0.0303\n 8 Affenpinscher    10019     1 0.0303\n 9 Affenpinscher    10021     1 0.0303\n10 Affenpinscher    10023     1 0.0303\n# ℹ 18,935 more rows"
  },
  {
    "objectID": "slides/07-make-maps-2.html#lets-make-a-summary-table-5",
    "href": "slides/07-make-maps-2.html#lets-make-a-summary-table-5",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Let’s make a summary table",
    "text": "Let’s make a summary table\n\n\n\nnyc_license  |&gt;\n  filter(extract_year == 2018) |&gt;\n  group_by(breed_rc, zip_code) |&gt;\n  tally() |&gt;\n  mutate(freq = n / sum(n)) |&gt;\n  filter(breed_rc == \"French Bulldog\")\n\n\n\n\n# A tibble: 161 × 4\n# Groups:   breed_rc [1]\n   breed_rc       zip_code     n    freq\n   &lt;chr&gt;             &lt;int&gt; &lt;int&gt;   &lt;dbl&gt;\n 1 French Bulldog    10001    27 0.0167 \n 2 French Bulldog    10002    20 0.0123 \n 3 French Bulldog    10003    36 0.0222 \n 4 French Bulldog    10004     9 0.00555\n 5 French Bulldog    10005    15 0.00925\n 6 French Bulldog    10006     8 0.00494\n 7 French Bulldog    10007    17 0.0105 \n 8 French Bulldog    10009    51 0.0315 \n 9 French Bulldog    10010    31 0.0191 \n10 French Bulldog    10011    88 0.0543 \n# ℹ 151 more rows"
  },
  {
    "objectID": "slides/07-make-maps-2.html#lets-make-a-summary-table-6",
    "href": "slides/07-make-maps-2.html#lets-make-a-summary-table-6",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Let’s make a summary table",
    "text": "Let’s make a summary table\n\n\n\nnyc_license  |&gt;\n  filter(extract_year == 2018) |&gt;\n  group_by(breed_rc, zip_code) |&gt;\n  tally() |&gt;\n  mutate(freq = n / sum(n)) |&gt;\n  filter(breed_rc == \"French Bulldog\") -&gt;\n  nyc_fb"
  },
  {
    "objectID": "slides/07-make-maps-2.html#lets-make-a-summary-table-7",
    "href": "slides/07-make-maps-2.html#lets-make-a-summary-table-7",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Let’s make a summary table",
    "text": "Let’s make a summary table\n\n\n\nnyc_license  |&gt;\n  filter(extract_year == 2018) |&gt;\n  group_by(breed_rc, zip_code) |&gt;\n  tally() |&gt;\n  mutate(freq = n / sum(n)) |&gt;\n  filter(breed_rc == \"French Bulldog\") -&gt;\n  nyc_fb"
  },
  {
    "objectID": "slides/07-make-maps-2.html#now-we-have-two-tables-again",
    "href": "slides/07-make-maps-2.html#now-we-have-two-tables-again",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Now we have two tables again",
    "text": "Now we have two tables again\n\n\n\n\nnyc_zips |&gt; select(objectid:st_fips)\n\nSimple feature collection with 262 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -74.25576 ymin: 40.49584 xmax: -73.6996 ymax: 40.91517\nGeodetic CRS:  WGS 84\n# A tibble: 262 × 7\n   objectid zip_code po_name     state borough st_fips                  geometry\n      &lt;int&gt;    &lt;int&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;               &lt;POLYGON [°]&gt;\n 1        1    11372 Jackson He… NY    Queens  36      ((-73.86942 40.74916, -7…\n 2        2    11004 Glen Oaks   NY    Queens  36      ((-73.71068 40.75004, -7…\n 3        3    11040 New Hyde P… NY    Queens  36      ((-73.70098 40.7389, -73…\n 4        4    11426 Bellerose   NY    Queens  36      ((-73.7227 40.75373, -73…\n 5        5    11365 Fresh Mead… NY    Queens  36      ((-73.81089 40.72717, -7…\n 6        6    11373 Elmhurst    NY    Queens  36      ((-73.88722 40.72753, -7…\n 7        7    11001 Floral Park NY    Queens  36      ((-73.70098 40.7389, -73…\n 8        8    11375 Forest Hil… NY    Queens  36      ((-73.85625 40.73672, -7…\n 9        9    11427 Queens Vil… NY    Queens  36      ((-73.74169 40.73682, -7…\n10       10    11374 Rego Park   NY    Queens  36      ((-73.86451 40.73407, -7…\n# ℹ 252 more rows\n\n\n\n\nnyc_fb |&gt; select(breed_rc:n)\n\n# A tibble: 161 × 3\n# Groups:   breed_rc [1]\n   breed_rc       zip_code     n\n   &lt;chr&gt;             &lt;int&gt; &lt;int&gt;\n 1 French Bulldog    10001    27\n 2 French Bulldog    10002    20\n 3 French Bulldog    10003    36\n 4 French Bulldog    10004     9\n 5 French Bulldog    10005    15\n 6 French Bulldog    10006     8\n 7 French Bulldog    10007    17\n 8 French Bulldog    10009    51\n 9 French Bulldog    10010    31\n10 French Bulldog    10011    88\n# ℹ 151 more rows\n\n\n\n\n\nJoin them:\n\n\nfb_map &lt;- left_join(nyc_zips, nyc_fb, by = \"zip_code\")"
  },
  {
    "objectID": "slides/07-make-maps-2.html#ready-to-map",
    "href": "slides/07-make-maps-2.html#ready-to-map",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Ready to map",
    "text": "Ready to map\n\nfb_map |&gt; select(zip_code, po_name, borough, breed_rc:freq, geometry)\n\nSimple feature collection with 262 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -74.25576 ymin: 40.49584 xmax: -73.6996 ymax: 40.91517\nGeodetic CRS:  WGS 84\n# A tibble: 262 × 7\n   zip_code po_name    borough breed_rc     n     freq                  geometry\n      &lt;int&gt; &lt;chr&gt;      &lt;chr&gt;   &lt;chr&gt;    &lt;int&gt;    &lt;dbl&gt;             &lt;POLYGON [°]&gt;\n 1    11372 Jackson H… Queens  French …    13  8.02e-3 ((-73.86942 40.74916, -7…\n 2    11004 Glen Oaks  Queens  French …     1  6.17e-4 ((-73.71068 40.75004, -7…\n 3    11040 New Hyde … Queens  &lt;NA&gt;        NA NA       ((-73.70098 40.7389, -73…\n 4    11426 Bellerose  Queens  French …     1  6.17e-4 ((-73.7227 40.75373, -73…\n 5    11365 Fresh Mea… Queens  French …     7  4.32e-3 ((-73.81089 40.72717, -7…\n 6    11373 Elmhurst   Queens  French …    14  8.64e-3 ((-73.88722 40.72753, -7…\n 7    11001 Floral Pa… Queens  &lt;NA&gt;        NA NA       ((-73.70098 40.7389, -73…\n 8    11375 Forest Hi… Queens  French …     8  4.94e-3 ((-73.85625 40.73672, -7…\n 9    11427 Queens Vi… Queens  French …     2  1.23e-3 ((-73.74169 40.73682, -7…\n10    11374 Rego Park  Queens  French …     6  3.70e-3 ((-73.86451 40.73407, -7…\n# ℹ 252 more rows"
  },
  {
    "objectID": "slides/07-make-maps-2.html#a-nyc-map-theme",
    "href": "slides/07-make-maps-2.html#a-nyc-map-theme",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "A NYC map theme",
    "text": "A NYC map theme\n\nJust moving the legend, really.\n\n\ntheme_nymap &lt;- function(base_size=9, base_family=\"\") {\n    require(grid)\n    theme_bw(base_size=base_size, base_family=base_family) %+replace%\n        theme(axis.line=element_blank(),\n              axis.text=element_blank(),\n              axis.ticks=element_blank(),\n              axis.title=element_blank(),\n              panel.background=element_blank(),\n              panel.border=element_blank(),\n              panel.grid=element_blank(),\n              panel.spacing=unit(0, \"lines\"),\n              plot.background=element_blank(),\n              legend.justification = c(0,0),\n              legend.position = c(0.05, 0.58), \n              legend.direction = \"horizontal\"\n        )\n}"
  },
  {
    "objectID": "slides/07-make-maps-2.html#first-cut-at-a-map",
    "href": "slides/07-make-maps-2.html#first-cut-at-a-map",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "First cut at a map",
    "text": "First cut at a map\n\n\nfb_map |&gt; \n  ggplot(mapping = aes(fill = freq)) +\n  geom_sf(color = \"gray30\", size = 0.1)"
  },
  {
    "objectID": "slides/07-make-maps-2.html#first-cut-at-a-map-1",
    "href": "slides/07-make-maps-2.html#first-cut-at-a-map-1",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "First cut at a map",
    "text": "First cut at a map\n\n\nfb_map |&gt; \n  ggplot(mapping = aes(fill = freq)) +\n  geom_sf(color = \"gray30\", size = 0.1) + \n  scale_fill_viridis_c(option = \"A\") +\n  labs(fill = \"Percent of All French Bulldogs\")"
  },
  {
    "objectID": "slides/07-make-maps-2.html#first-cut-at-a-map-2",
    "href": "slides/07-make-maps-2.html#first-cut-at-a-map-2",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "First cut at a map",
    "text": "First cut at a map\n\n\nfb_map |&gt; \n  ggplot(mapping = aes(fill = freq)) +\n  geom_sf(color = \"gray30\", size = 0.1) + \n  scale_fill_viridis_c(option = \"A\") +\n  labs(fill = \"Percent of All French Bulldogs\") +\n  annotate(geom = \"text\", \n             x = -74.145 + 0.029, \n             y = 40.82-0.012, \n           label = \"New York City's French Bulldogs\", \n           size = 6) + \n    annotate(geom = \"text\", \n             x = -74.1468 + 0.029, \n             y = 40.8075-0.012, \n           label = \"By Zip Code. Based on Licensing Data\", \n           size = 5)"
  },
  {
    "objectID": "slides/07-make-maps-2.html#first-cut-at-a-map-3",
    "href": "slides/07-make-maps-2.html#first-cut-at-a-map-3",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "First cut at a map",
    "text": "First cut at a map\n\n\nfb_map |&gt; \n  ggplot(mapping = aes(fill = freq)) +\n  geom_sf(color = \"gray30\", size = 0.1) + \n  scale_fill_viridis_c(option = \"A\") +\n  labs(fill = \"Percent of All French Bulldogs\") +\n  annotate(geom = \"text\", \n             x = -74.145 + 0.029, \n             y = 40.82-0.012, \n           label = \"New York City's French Bulldogs\", \n           size = 6) + \n  annotate(geom = \"text\", \n             x = -74.1468 + 0.029, \n             y = 40.8075-0.012, \n           label = \"By Zip Code. Based on Licensing Data\", \n           size = 5) + \n  kjhslides::kjh_theme_nymap() + \n  guides(fill = \n           guide_legend(title.position = \"top\", \n                label.position = \"bottom\",\n                keywidth = 1, \n                nrow = 1))"
  },
  {
    "objectID": "slides/07-make-maps-2.html#use-a-different-palette",
    "href": "slides/07-make-maps-2.html#use-a-different-palette",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Use a different palette",
    "text": "Use a different palette\n\n\nlibrary(colorspace)\n\nfb_map |&gt; \n  ggplot(mapping = aes(fill = freq)) + \n  geom_sf(color = \"gray30\", size = 0.1) +\n  scale_fill_continuous_sequential(\n    palette = \"Oranges\",\n    labels = scales::label_percent()) +\n  labs(fill = \"Percent of all French Bulldogs\")"
  },
  {
    "objectID": "slides/07-make-maps-2.html#use-a-different-palette-1",
    "href": "slides/07-make-maps-2.html#use-a-different-palette-1",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Use a different palette",
    "text": "Use a different palette\n\n\nfb_map |&gt; \n  ggplot(mapping = aes(fill = freq)) + \n  geom_sf(color = \"gray30\", size = 0.1) +\n  scale_fill_continuous_sequential(\n    palette = \"Oranges\",\n    labels = scales::label_percent()) +\n  labs(fill = \"Percent of all French Bulldogs\") +\n  annotate(geom = \"text\", \n           x = -74.145 + 0.029, \n           y = 40.82-0.012, \n           label = \"New York City's French Bulldogs\", \n           size = 6) + \n  annotate(geom = \"text\", \n           x = -74.1468 + 0.029, \n           y = 40.7955, \n           label = \"By Zip Code. Based on Licensing Data\", \n           size = 5) + \n  kjhslides::kjh_theme_nymap() + \n  guides(fill = \n           guide_legend(title.position = \"top\", \n                label.position = \"bottom\",\n                keywidth = 1, \n                nrow = 1))"
  },
  {
    "objectID": "slides/07-make-maps-2.html#keep-the-zero-count-zips",
    "href": "slides/07-make-maps-2.html#keep-the-zero-count-zips",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Keep the Zero-count Zips",
    "text": "Keep the Zero-count Zips\n\nnyc_license  |&gt; \n  filter(extract_year == 2018) |&gt; \n  group_by(breed_rc, zip_code) |&gt; \n  tally() |&gt; \n  ungroup() |&gt; \n  complete(zip_code, breed_rc, \n             fill = list(n = 0)) |&gt; \n  # Regroup to get the right denominator\n  group_by(breed_rc) |&gt; \n  mutate(freq = n / sum(n)) |&gt; \n  filter(breed_rc == \"French Bulldog\") -&gt;\n  nyc_fb2\n\nfb_map2 &lt;- left_join(nyc_zips, \n                     nyc_fb2, \n                     by = \"zip_code\")"
  },
  {
    "objectID": "slides/07-make-maps-2.html#keep-the-zero-count-zips-1",
    "href": "slides/07-make-maps-2.html#keep-the-zero-count-zips-1",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Keep the Zero-count Zips",
    "text": "Keep the Zero-count Zips\n\nfb_map2 |&gt; select(zip_code, po_name, borough, breed_rc:freq, geometry)\n\nSimple feature collection with 262 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -74.25576 ymin: 40.49584 xmax: -73.6996 ymax: 40.91517\nGeodetic CRS:  WGS 84\n# A tibble: 262 × 7\n   zip_code po_name     borough breed_rc     n    freq                  geometry\n      &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;   &lt;chr&gt;    &lt;int&gt;   &lt;dbl&gt;             &lt;POLYGON [°]&gt;\n 1    11372 Jackson He… Queens  French …    13 8.02e-3 ((-73.86942 40.74916, -7…\n 2    11004 Glen Oaks   Queens  French …     1 6.17e-4 ((-73.71068 40.75004, -7…\n 3    11040 New Hyde P… Queens  French …     0 0       ((-73.70098 40.7389, -73…\n 4    11426 Bellerose   Queens  French …     1 6.17e-4 ((-73.7227 40.75373, -73…\n 5    11365 Fresh Mead… Queens  French …     7 4.32e-3 ((-73.81089 40.72717, -7…\n 6    11373 Elmhurst    Queens  French …    14 8.64e-3 ((-73.88722 40.72753, -7…\n 7    11001 Floral Park Queens  French …     0 0       ((-73.70098 40.7389, -73…\n 8    11375 Forest Hil… Queens  French …     8 4.94e-3 ((-73.85625 40.73672, -7…\n 9    11427 Queens Vil… Queens  French …     2 1.23e-3 ((-73.74169 40.73682, -7…\n10    11374 Rego Park   Queens  French …     6 3.70e-3 ((-73.86451 40.73407, -7…\n# ℹ 252 more rows\n\n\n\nThis time, a number of previous NA rows are now zeroes instead."
  },
  {
    "objectID": "slides/07-make-maps-2.html#keep-the-zero-count-zips-2",
    "href": "slides/07-make-maps-2.html#keep-the-zero-count-zips-2",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Keep the Zero-count Zips",
    "text": "Keep the Zero-count Zips\n\n\nfb_map2 |&gt;\n  ggplot(mapping = aes(fill = freq)) + \n  geom_sf(color = \"gray30\", size = 0.1) +\n  scale_fill_continuous_sequential(\n    palette = \"Oranges\", \n    labels = scales::label_percent())"
  },
  {
    "objectID": "slides/07-make-maps-2.html#keep-the-zero-count-zips-3",
    "href": "slides/07-make-maps-2.html#keep-the-zero-count-zips-3",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Keep the Zero-count Zips",
    "text": "Keep the Zero-count Zips\n\n\nfb_map2 |&gt;\n  ggplot(mapping = aes(fill = freq)) + \n  geom_sf(color = \"gray30\", size = 0.1) +\n  scale_fill_continuous_sequential(\n    palette = \"Oranges\", \n    labels = scales::label_percent()) +\n  labs(fill = \"Percent of all French Bulldogs\") +\n  annotate(geom = \"text\", \n           x = -74.145 + 0.029, \n           y = 40.82-0.012, \n           label = \"New York City's French Bulldogs\", \n           size = 6) + \n  annotate(geom = \"text\", \n           x = -74.1468 + 0.029, \n           y = 40.7955, \n           label = \"By Zip Code. Based on Licensing Data\", \n           size = 5) + \n  kjhslides::kjh_theme_nymap() + \n  guides(fill = \n           guide_legend(title.position = \"top\", \n                        label.position = \"bottom\",\n                        keywidth = 1, \n                        nrow = 1))"
  },
  {
    "objectID": "slides/07-make-maps-2.html#care-with-spatial-distribution",
    "href": "slides/07-make-maps-2.html#care-with-spatial-distribution",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Care with Spatial Distribution",
    "text": "Care with Spatial Distribution\n\nA random point-process"
  },
  {
    "objectID": "slides/07-make-maps-2.html#care-with-spatial-distribution-1",
    "href": "slides/07-make-maps-2.html#care-with-spatial-distribution-1",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Care with Spatial Distribution",
    "text": "Care with Spatial Distribution\n\nA heatmap derived from the random process"
  },
  {
    "objectID": "slides/07-make-maps-2.html#care-with-spatial-distribution-2",
    "href": "slides/07-make-maps-2.html#care-with-spatial-distribution-2",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Care with Spatial Distribution",
    "text": "Care with Spatial Distribution\n\nA formal test of significant hotspots"
  },
  {
    "objectID": "slides/07-make-maps-2.html#dorling-cartograms",
    "href": "slides/07-make-maps-2.html#dorling-cartograms",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Dorling Cartograms",
    "text": "Dorling Cartograms\n\n# install.packages(\"cartogram\")\nlibrary(cartogram)\noptions(tigris_use_cache = TRUE)"
  },
  {
    "objectID": "slides/07-make-maps-2.html#dorling-cartograms-1",
    "href": "slides/07-make-maps-2.html#dorling-cartograms-1",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Dorling Cartograms",
    "text": "Dorling Cartograms\n\npop_names &lt;- tribble(\n    ~varname, ~clean,\n    \"B01003_001\", \"pop\",\n    \"B01001B_001\", \"black\",\n    \"B01001A_001\", \"white\",\n    \"B01001H_001\", \"nh_white\",\n    \"B01001I_001\", \"hispanic\",\n    \"B01001D_001\", \"asian\"\n  )\n  \npop_names\n\n# A tibble: 6 × 2\n  varname     clean   \n  &lt;chr&gt;       &lt;chr&gt;   \n1 B01003_001  pop     \n2 B01001B_001 black   \n3 B01001A_001 white   \n4 B01001H_001 nh_white\n5 B01001I_001 hispanic\n6 B01001D_001 asian"
  },
  {
    "objectID": "slides/07-make-maps-2.html#dorling-cartograms-2",
    "href": "slides/07-make-maps-2.html#dorling-cartograms-2",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Dorling Cartograms",
    "text": "Dorling Cartograms\n\nlibrary(tidycensus)\nfips_pop &lt;- get_acs(geography = \"county\", \n                    variables = pop_names$varname, \n                    cache_table = TRUE) |&gt;  \n  left_join(pop_names, join_by(variable == varname)) |&gt; \n  mutate(variable = clean) |&gt; \n  select(-clean, -moe) |&gt;\n  pivot_wider(names_from = variable, values_from = estimate) |&gt; \n  rename(fips = GEOID, name = NAME) |&gt; \n  mutate(prop_pop = pop/sum(pop), \n         prop_black = black/pop, \n         prop_hisp = hispanic/pop, \n         prop_white = white/pop, \n         prop_nhwhite = nh_white/pop, \n         prop_asian = asian/pop)\n\nfips_map &lt;- get_acs(geography = \"county\", \n                    variables = \"B01001_001\", \n                    geometry = TRUE,\n                    shift_geo = FALSE,\n                    cache_table = TRUE) |&gt; \n  select(GEOID, NAME, geometry) |&gt; \n  rename(fips = GEOID, name = NAME)"
  },
  {
    "objectID": "slides/07-make-maps-2.html#dorling-cartograms-3",
    "href": "slides/07-make-maps-2.html#dorling-cartograms-3",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Dorling Cartograms",
    "text": "Dorling Cartograms\n\npop_cat_labels &lt;- c(\"&lt;5\", as.character(seq(10, 95, 5)), \"100\")\n\ncounties_sf &lt;- fips_map |&gt;\n  left_join(fips_pop, by = c(\"fips\", \"name\")) |&gt; \n  mutate(black_disc = cut(prop_black*100,\n                         breaks = seq(0, 100, 5),\n                         labels = pop_cat_labels,\n                         ordered_result = TRUE), \n         hisp_disc = cut(prop_hisp*100,\n                         breaks = seq(0, 100, 5),\n                         labels = pop_cat_labels,\n                         ordered_result = TRUE), \n         nhwhite_disc = cut(prop_nhwhite*100,\n                         breaks = seq(0, 100, 5),\n                         labels = pop_cat_labels,\n                         ordered_result = TRUE),\n        asian_disc = cut(prop_asian*100,\n                         breaks = seq(0, 100, 5),\n                         labels = pop_cat_labels,\n                         ordered_result = TRUE)) |&gt;\n  sf::st_transform(crs = 2163)"
  },
  {
    "objectID": "slides/07-make-maps-2.html#dorling-cartograms-4",
    "href": "slides/07-make-maps-2.html#dorling-cartograms-4",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Dorling Cartograms",
    "text": "Dorling Cartograms\n\ncounties_sf\n\nSimple feature collection with 3222 features and 18 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -6433624 ymin: -2354597 xmax: 3667987 ymax: 3912355\nProjected CRS: NAD27 / US National Atlas Equal Area\nFirst 10 features:\n   fips                    name white black asian nh_white hispanic    pop\n1 01069 Houston County, Alabama 71260 29166   987    69420     3844 107040\n2 01023 Choctaw County, Alabama  7180  5062    15     7162      143  12669\n3 01005 Barbour County, Alabama 11309 11668   126    11084     1202  24877\n4 01107 Pickens County, Alabama 10880  7506    10    10141      987  18925\n5 01033 Colbert County, Alabama 44698  9185   214    44485     1837  57270\n      prop_pop prop_black  prop_hisp prop_white prop_nhwhite   prop_asian\n1 3.201244e-04  0.2724776 0.03591181  0.6657324    0.6485426 0.0092208520\n2 3.788917e-05  0.3995580 0.01128739  0.5667377    0.5653169 0.0011839924\n3 7.439962e-05  0.4690276 0.04831772  0.4545966    0.4455521 0.0050649194\n4 5.659898e-05  0.3966182 0.05215324  0.5749009    0.5358520 0.0005284016\n5 1.712773e-04  0.1603807 0.03207613  0.7804784    0.7767592 0.0037366859\n                        geometry black_disc hisp_disc nhwhite_disc asian_disc\n1 MULTIPOLYGON (((1363666 -14...         30        &lt;5           65         &lt;5\n2 MULTIPOLYGON (((1093349 -13...         40        &lt;5           60         &lt;5\n3 MULTIPOLYGON (((1353585 -13...         50        &lt;5           45         &lt;5\n4 MULTIPOLYGON (((1091358 -12...         40        10           55         &lt;5\n5 MULTIPOLYGON (((1088100 -10...         20        &lt;5           80         &lt;5\n [ reached 'max' / getOption(\"max.print\") -- omitted 5 rows ]"
  },
  {
    "objectID": "slides/07-make-maps-2.html#dorling-cartograms-5",
    "href": "slides/07-make-maps-2.html#dorling-cartograms-5",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Dorling Cartograms",
    "text": "Dorling Cartograms\n\n## Be patient\ncounty_dorling &lt;- cartogram_dorling(x = counties_sf,\n    weight = \"prop_pop\", \n    k = 0.2, itermax = 100)\n\nout_black &lt;- county_dorling |&gt;\n  filter(!str_detect(name, \"Alaska|Hawaii|Puerto|Guam\")) |&gt;\n  ggplot(aes(fill = black_disc)) +\n  geom_sf(color = \"grey30\", size = 0.1) +\n  coord_sf(crs = 2163, datum = NA) +\n  scale_fill_discrete_sequential(palette = \"YlOrBr\", \n                                 na.translate=FALSE) +\n  guides(fill = guide_legend(title.position = \"top\",\n                             label.position = \"bottom\",\n                             nrow = 1)) + \n  labs(\n     subtitle = \"Bubble size corresponds to County Population\",\n     caption = \"Graph: @kjhealy. Source: Census Bureau / American Community Survey\",\n       fill = \"Percent Black by County\") + \n  theme(legend.position = \"top\", \n        legend.spacing.x = unit(0, \"cm\"),\n        legend.title = element_text(size = rel(1.5), face = \"bold\"), \n        legend.text = element_text(size = rel(0.7)),\n        plot.title = element_text(size = rel(1.4), hjust = 0.15))\n\n# ggsave(\"figures/dorling-bl.pdf\", out_black, height = 10, width = 12)"
  },
  {
    "objectID": "slides/07-make-maps-2.html#dorling-cartograms-6",
    "href": "slides/07-make-maps-2.html#dorling-cartograms-6",
    "title": "Data Visualization - 7. Make Maps (2)",
    "section": "Dorling Cartograms",
    "text": "Dorling Cartograms"
  },
  {
    "objectID": "slides/07-make-maps-1.html#load-our-packages",
    "href": "slides/07-make-maps-1.html#load-our-packages",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Load our packages",
    "text": "Load our packages\n\nlibrary(here)      # manage file paths\nlibrary(socviz)    # data and some useful functions\nlibrary(tidyverse) # your friend and mine\nlibrary(maps)      # Some basic maps\nlibrary(sf)        # Simple Features Geometries and geom_sf()\nlibrary(ggforce)   # Useful enhancements to ggplot"
  },
  {
    "objectID": "slides/07-make-maps-1.html#aside-what-the-hells-that",
    "href": "slides/07-make-maps-1.html#aside-what-the-hells-that",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Aside: What the hell’s that?",
    "text": "Aside: What the hell’s that?"
  },
  {
    "objectID": "slides/07-make-maps-1.html#zoom-and-enhance",
    "href": "slides/07-make-maps-1.html#zoom-and-enhance",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Zoom and Enhance",
    "text": "Zoom and Enhance\n\nSuprisingly, not a coding error on my part."
  },
  {
    "objectID": "slides/07-make-maps-1.html#its-the-transcontinental-railroad",
    "href": "slides/07-make-maps-1.html#its-the-transcontinental-railroad",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "It’s the Transcontinental Railroad",
    "text": "It’s the Transcontinental Railroad\n\nMaking its way through the Great Basin, America’s largest endorheic watershed. The checkerboard is a deliberate assignation of property rights along the borders of the railway line."
  },
  {
    "objectID": "slides/07-make-maps-1.html#still-with-us-too",
    "href": "slides/07-make-maps-1.html#still-with-us-too",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Still with us, too",
    "text": "Still with us, too\n\nNot identical, as Interstate 80 was able to go through some parts the railroad had to go around. OK, now back to scheduled programming."
  },
  {
    "objectID": "slides/07-make-maps-1.html#packages",
    "href": "slides/07-make-maps-1.html#packages",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Packages",
    "text": "Packages\n\nlibrary(here)       # manage file paths\nlibrary(socviz)     # data and some useful functions\nlibrary(tidyverse)  # your friend and mine\nlibrary(maps)       # Some basic maps\nlibrary(ggforce)    # ggplot extensions"
  },
  {
    "objectID": "slides/07-make-maps-1.html#take-a-look-at-this-data",
    "href": "slides/07-make-maps-1.html#take-a-look-at-this-data",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Take a look at this data",
    "text": "Take a look at this data\n\n## This is from the map library\n# library(maps)\n\nus_states &lt;- map_data(\"state\")\n\ndim(us_states)\n\n[1] 15537     6\n\n## Making it a tibble prevents crashes \n## in the slide rendering later on\nus_states &lt;- as_tibble(us_states)\n\nus_states\n\n# A tibble: 15,537 × 6\n    long   lat group order region  subregion\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;    \n 1 -87.5  30.4     1     1 alabama &lt;NA&gt;     \n 2 -87.5  30.4     1     2 alabama &lt;NA&gt;     \n 3 -87.5  30.4     1     3 alabama &lt;NA&gt;     \n 4 -87.5  30.3     1     4 alabama &lt;NA&gt;     \n 5 -87.6  30.3     1     5 alabama &lt;NA&gt;     \n 6 -87.6  30.3     1     6 alabama &lt;NA&gt;     \n 7 -87.6  30.3     1     7 alabama &lt;NA&gt;     \n 8 -87.6  30.3     1     8 alabama &lt;NA&gt;     \n 9 -87.7  30.3     1     9 alabama &lt;NA&gt;     \n10 -87.8  30.3     1    10 alabama &lt;NA&gt;     \n# ℹ 15,527 more rows"
  },
  {
    "objectID": "slides/07-make-maps-1.html#what-is-this-at-root",
    "href": "slides/07-make-maps-1.html#what-is-this-at-root",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "What is this, at root?",
    "text": "What is this, at root?\n\nus_states\n\n# A tibble: 15,537 × 6\n    long   lat group order region  subregion\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;    \n 1 -87.5  30.4     1     1 alabama &lt;NA&gt;     \n 2 -87.5  30.4     1     2 alabama &lt;NA&gt;     \n 3 -87.5  30.4     1     3 alabama &lt;NA&gt;     \n 4 -87.5  30.3     1     4 alabama &lt;NA&gt;     \n 5 -87.6  30.3     1     5 alabama &lt;NA&gt;     \n 6 -87.6  30.3     1     6 alabama &lt;NA&gt;     \n 7 -87.6  30.3     1     7 alabama &lt;NA&gt;     \n 8 -87.6  30.3     1     8 alabama &lt;NA&gt;     \n 9 -87.7  30.3     1     9 alabama &lt;NA&gt;     \n10 -87.8  30.3     1    10 alabama &lt;NA&gt;     \n# ℹ 15,527 more rows\n\n\n\nIt’s a series of rows defining x and y coordinatates on a plane.\nIf we join those points up as lines while respecting their group (i.e. so ggplot knows when to “lift the pen”, as with the gapminder line plot), we will get an outline map of states in the U.S."
  },
  {
    "objectID": "slides/07-make-maps-1.html#like-this-with-geom_polygon",
    "href": "slides/07-make-maps-1.html#like-this-with-geom_polygon",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Like this, with geom_polygon()",
    "text": "Like this, with geom_polygon()\n\n\nus_states |&gt;\n  ggplot(mapping = aes(x = long, \n                       y = lat, \n                       group = group)) +\n  geom_polygon(fill = \"white\", \n               color = \"black\") +\n  labs(title = \"This looks horrible\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#we-can-show-a-fill-too-like-any-geom",
    "href": "slides/07-make-maps-1.html#we-can-show-a-fill-too-like-any-geom",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "We can show a fill, too, like any geom",
    "text": "We can show a fill, too, like any geom\n\n\nus_states |&gt;\n  ggplot(mapping = aes(x = long, \n                       y = lat,\n                       fill = region,\n                       group = group)) +\n  geom_polygon(color = \"black\") + \n  guides(fill = \"none\") + \n  labs(title = \"Still looks horrible\", \n       caption = \"Set fill = none \n         to stop ggplot from \n         producing a key\n         with 50 entries\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#we-need-to-do-two-things",
    "href": "slides/07-make-maps-1.html#we-need-to-do-two-things",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "We need to do two things",
    "text": "We need to do two things\n\n1: Fix the map projection\n2: Add some data to fill with."
  },
  {
    "objectID": "slides/07-make-maps-1.html#for-now-well-do-it-the-direct-way",
    "href": "slides/07-make-maps-1.html#for-now-well-do-it-the-direct-way",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "For now, we’ll do it the direct way",
    "text": "For now, we’ll do it the direct way\n\nTo make explicit what’s happening, and to emphasize how it’s all just points and lines made from tables we’ll first do it at the level of the ggplot grammar with a geom that just draws shapes, geom_polygon(). After that, we’ll introduce a new package, sf and a new geom, geom_sf() that will handle this for us, and more."
  },
  {
    "objectID": "slides/07-make-maps-1.html#fix-the-projection",
    "href": "slides/07-make-maps-1.html#fix-the-projection",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Fix the projection",
    "text": "Fix the projection\n\n\n\nus_states &lt;- as_tibble(map_data(\"state\"))"
  },
  {
    "objectID": "slides/07-make-maps-1.html#fix-the-projection-1",
    "href": "slides/07-make-maps-1.html#fix-the-projection-1",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Fix the projection",
    "text": "Fix the projection\n\n\n\nus_states &lt;- as_tibble(map_data(\"state\"))\n\nus_states\n\n\n\n\n# A tibble: 15,537 × 6\n    long   lat group order region  subregion\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;    \n 1 -87.5  30.4     1     1 alabama &lt;NA&gt;     \n 2 -87.5  30.4     1     2 alabama &lt;NA&gt;     \n 3 -87.5  30.4     1     3 alabama &lt;NA&gt;     \n 4 -87.5  30.3     1     4 alabama &lt;NA&gt;     \n 5 -87.6  30.3     1     5 alabama &lt;NA&gt;     \n 6 -87.6  30.3     1     6 alabama &lt;NA&gt;     \n 7 -87.6  30.3     1     7 alabama &lt;NA&gt;     \n 8 -87.6  30.3     1     8 alabama &lt;NA&gt;     \n 9 -87.7  30.3     1     9 alabama &lt;NA&gt;     \n10 -87.8  30.3     1    10 alabama &lt;NA&gt;     \n# ℹ 15,527 more rows"
  },
  {
    "objectID": "slides/07-make-maps-1.html#fix-the-projection-2",
    "href": "slides/07-make-maps-1.html#fix-the-projection-2",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Fix the projection",
    "text": "Fix the projection\n\n\n\nus_states &lt;- as_tibble(map_data(\"state\"))\n\nus_states |&gt;\n  ggplot(mapping = aes(x = long,\n                       y = lat,\n                       fill = region,\n                       group = group))"
  },
  {
    "objectID": "slides/07-make-maps-1.html#fix-the-projection-3",
    "href": "slides/07-make-maps-1.html#fix-the-projection-3",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Fix the projection",
    "text": "Fix the projection\n\n\n\nus_states &lt;- as_tibble(map_data(\"state\"))\n\nus_states |&gt;\n  ggplot(mapping = aes(x = long,\n                       y = lat,\n                       fill = region,\n                       group = group)) +\n  geom_polygon(color = \"black\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#fix-the-projection-4",
    "href": "slides/07-make-maps-1.html#fix-the-projection-4",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Fix the projection",
    "text": "Fix the projection\n\n\n\nus_states &lt;- as_tibble(map_data(\"state\"))\n\nus_states |&gt;\n  ggplot(mapping = aes(x = long,\n                       y = lat,\n                       fill = region,\n                       group = group)) +\n  geom_polygon(color = \"black\") +\n  guides(fill = \"none\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#fix-the-projection-5",
    "href": "slides/07-make-maps-1.html#fix-the-projection-5",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Fix the projection",
    "text": "Fix the projection\n\n\n\nus_states &lt;- as_tibble(map_data(\"state\"))\n\nus_states |&gt;\n  ggplot(mapping = aes(x = long,\n                       y = lat,\n                       fill = region,\n                       group = group)) +\n  geom_polygon(color = \"black\") +\n  guides(fill = \"none\") +\n  coord_map(projection = \"albers\",\n            lat0 = 39,\n            lat1 = 45)"
  },
  {
    "objectID": "slides/07-make-maps-1.html#u.s.-map-projections",
    "href": "slides/07-make-maps-1.html#u.s.-map-projections",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "U.S. Map Projections",
    "text": "U.S. Map Projections\n\nA selection of projections"
  },
  {
    "objectID": "slides/07-make-maps-1.html#u.s.-map-projections-1",
    "href": "slides/07-make-maps-1.html#u.s.-map-projections-1",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "U.S. Map Projections",
    "text": "U.S. Map Projections\n\nAlbers is the standard"
  },
  {
    "objectID": "slides/07-make-maps-1.html#next-some-data",
    "href": "slides/07-make-maps-1.html#next-some-data",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Next, some data",
    "text": "Next, some data\nWe can merge our state-level election data with the us_states table, but we need to do a little work.\n\n\n\nus_states\n\n# A tibble: 15,537 × 6\n    long   lat group order region  subregion\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;    \n 1 -87.5  30.4     1     1 alabama &lt;NA&gt;     \n 2 -87.5  30.4     1     2 alabama &lt;NA&gt;     \n 3 -87.5  30.4     1     3 alabama &lt;NA&gt;     \n 4 -87.5  30.3     1     4 alabama &lt;NA&gt;     \n 5 -87.6  30.3     1     5 alabama &lt;NA&gt;     \n 6 -87.6  30.3     1     6 alabama &lt;NA&gt;     \n 7 -87.6  30.3     1     7 alabama &lt;NA&gt;     \n 8 -87.6  30.3     1     8 alabama &lt;NA&gt;     \n 9 -87.7  30.3     1     9 alabama &lt;NA&gt;     \n10 -87.8  30.3     1    10 alabama &lt;NA&gt;     \n# ℹ 15,527 more rows\n\n\n\n\nelection\n\n# A tibble: 51 × 22\n   state     st     fips total_vote vote_margin winner party pct_margin r_points\n   &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1 Alabama   AL        1    2123372      588708 Trump  Repu…     0.277     27.7 \n 2 Alaska    AK        2     318608       46933 Trump  Repu…     0.147     14.7 \n 3 Arizona   AZ        4    2604657       91234 Trump  Repu…     0.035      3.5 \n 4 Arkansas  AR        5    1130635      304378 Trump  Repu…     0.269     26.9 \n 5 Californ… CA        6   14237893     4269978 Clint… Demo…     0.300    -30.0 \n 6 Colorado  CO        8    2780247      136386 Clint… Demo…     0.0491    -4.91\n 7 Connecti… CT        9    1644920      224357 Clint… Demo…     0.136    -13.6 \n 8 Delaware  DE       10     443814       50476 Clint… Demo…     0.114    -11.4 \n 9 District… DC       11     311268      270107 Clint… Demo…     0.868    -86.8 \n10 Florida   FL       12    9502747      112911 Trump  Repu…     0.0119     1.19\n# ℹ 41 more rows\n# ℹ 13 more variables: d_points &lt;dbl&gt;, pct_clinton &lt;dbl&gt;, pct_trump &lt;dbl&gt;,\n#   pct_johnson &lt;dbl&gt;, pct_other &lt;dbl&gt;, clinton_vote &lt;dbl&gt;, trump_vote &lt;dbl&gt;,\n#   johnson_vote &lt;dbl&gt;, other_vote &lt;dbl&gt;, ev_dem &lt;dbl&gt;, ev_rep &lt;dbl&gt;,\n#   ev_oth &lt;dbl&gt;, census &lt;chr&gt;\n\n\n\n\nTo merge, or join these tables, they need to have a column in common to act as a key."
  },
  {
    "objectID": "slides/07-make-maps-1.html#recode-to-make-a-key",
    "href": "slides/07-make-maps-1.html#recode-to-make-a-key",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Recode to make a key",
    "text": "Recode to make a key\n\nelection &lt;- election |&gt;\n  mutate(region = tolower(state)) |&gt; \n  relocate(region)\n\nelection\n\n# A tibble: 51 × 23\n   region       state st     fips total_vote vote_margin winner party pct_margin\n   &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;      &lt;dbl&gt;\n 1 alabama      Alab… AL        1    2123372      588708 Trump  Repu…     0.277 \n 2 alaska       Alas… AK        2     318608       46933 Trump  Repu…     0.147 \n 3 arizona      Ariz… AZ        4    2604657       91234 Trump  Repu…     0.035 \n 4 arkansas     Arka… AR        5    1130635      304378 Trump  Repu…     0.269 \n 5 california   Cali… CA        6   14237893     4269978 Clint… Demo…     0.300 \n 6 colorado     Colo… CO        8    2780247      136386 Clint… Demo…     0.0491\n 7 connecticut  Conn… CT        9    1644920      224357 Clint… Demo…     0.136 \n 8 delaware     Dela… DE       10     443814       50476 Clint… Demo…     0.114 \n 9 district of… Dist… DC       11     311268      270107 Clint… Demo…     0.868 \n10 florida      Flor… FL       12    9502747      112911 Trump  Repu…     0.0119\n# ℹ 41 more rows\n# ℹ 14 more variables: r_points &lt;dbl&gt;, d_points &lt;dbl&gt;, pct_clinton &lt;dbl&gt;,\n#   pct_trump &lt;dbl&gt;, pct_johnson &lt;dbl&gt;, pct_other &lt;dbl&gt;, clinton_vote &lt;dbl&gt;,\n#   trump_vote &lt;dbl&gt;, johnson_vote &lt;dbl&gt;, other_vote &lt;dbl&gt;, ev_dem &lt;dbl&gt;,\n#   ev_rep &lt;dbl&gt;, ev_oth &lt;dbl&gt;, census &lt;chr&gt;"
  },
  {
    "objectID": "slides/07-make-maps-1.html#now-we-can-join-them",
    "href": "slides/07-make-maps-1.html#now-we-can-join-them",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Now we can join them",
    "text": "Now we can join them\n\n\n\nus_states\n\n# A tibble: 15,537 × 6\n    long   lat group order region  subregion\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;    \n 1 -87.5  30.4     1     1 alabama &lt;NA&gt;     \n 2 -87.5  30.4     1     2 alabama &lt;NA&gt;     \n 3 -87.5  30.4     1     3 alabama &lt;NA&gt;     \n 4 -87.5  30.3     1     4 alabama &lt;NA&gt;     \n 5 -87.6  30.3     1     5 alabama &lt;NA&gt;     \n 6 -87.6  30.3     1     6 alabama &lt;NA&gt;     \n 7 -87.6  30.3     1     7 alabama &lt;NA&gt;     \n 8 -87.6  30.3     1     8 alabama &lt;NA&gt;     \n 9 -87.7  30.3     1     9 alabama &lt;NA&gt;     \n10 -87.8  30.3     1    10 alabama &lt;NA&gt;     \n# ℹ 15,527 more rows\n\n\n\n\nelection\n\n# A tibble: 51 × 23\n   region       state st     fips total_vote vote_margin winner party pct_margin\n   &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;      &lt;dbl&gt;\n 1 alabama      Alab… AL        1    2123372      588708 Trump  Repu…     0.277 \n 2 alaska       Alas… AK        2     318608       46933 Trump  Repu…     0.147 \n 3 arizona      Ariz… AZ        4    2604657       91234 Trump  Repu…     0.035 \n 4 arkansas     Arka… AR        5    1130635      304378 Trump  Repu…     0.269 \n 5 california   Cali… CA        6   14237893     4269978 Clint… Demo…     0.300 \n 6 colorado     Colo… CO        8    2780247      136386 Clint… Demo…     0.0491\n 7 connecticut  Conn… CT        9    1644920      224357 Clint… Demo…     0.136 \n 8 delaware     Dela… DE       10     443814       50476 Clint… Demo…     0.114 \n 9 district of… Dist… DC       11     311268      270107 Clint… Demo…     0.868 \n10 florida      Flor… FL       12    9502747      112911 Trump  Repu…     0.0119\n# ℹ 41 more rows\n# ℹ 14 more variables: r_points &lt;dbl&gt;, d_points &lt;dbl&gt;, pct_clinton &lt;dbl&gt;,\n#   pct_trump &lt;dbl&gt;, pct_johnson &lt;dbl&gt;, pct_other &lt;dbl&gt;, clinton_vote &lt;dbl&gt;,\n#   trump_vote &lt;dbl&gt;, johnson_vote &lt;dbl&gt;, other_vote &lt;dbl&gt;, ev_dem &lt;dbl&gt;,\n#   ev_rep &lt;dbl&gt;, ev_oth &lt;dbl&gt;, census &lt;chr&gt;"
  },
  {
    "objectID": "slides/07-make-maps-1.html#this-is-a-left-join",
    "href": "slides/07-make-maps-1.html#this-is-a-left-join",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "This is a left join",
    "text": "This is a left join\n\nus_states_elec &lt;- left_join(us_states, election, by = \"region\")\n\nus_states_elec\n\n# A tibble: 15,537 × 28\n    long   lat group order region  subregion state   st     fips total_vote\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1 -87.5  30.4     1     1 alabama &lt;NA&gt;      Alabama AL        1    2123372\n 2 -87.5  30.4     1     2 alabama &lt;NA&gt;      Alabama AL        1    2123372\n 3 -87.5  30.4     1     3 alabama &lt;NA&gt;      Alabama AL        1    2123372\n 4 -87.5  30.3     1     4 alabama &lt;NA&gt;      Alabama AL        1    2123372\n 5 -87.6  30.3     1     5 alabama &lt;NA&gt;      Alabama AL        1    2123372\n 6 -87.6  30.3     1     6 alabama &lt;NA&gt;      Alabama AL        1    2123372\n 7 -87.6  30.3     1     7 alabama &lt;NA&gt;      Alabama AL        1    2123372\n 8 -87.6  30.3     1     8 alabama &lt;NA&gt;      Alabama AL        1    2123372\n 9 -87.7  30.3     1     9 alabama &lt;NA&gt;      Alabama AL        1    2123372\n10 -87.8  30.3     1    10 alabama &lt;NA&gt;      Alabama AL        1    2123372\n# ℹ 15,527 more rows\n# ℹ 18 more variables: vote_margin &lt;dbl&gt;, winner &lt;chr&gt;, party &lt;chr&gt;,\n#   pct_margin &lt;dbl&gt;, r_points &lt;dbl&gt;, d_points &lt;dbl&gt;, pct_clinton &lt;dbl&gt;,\n#   pct_trump &lt;dbl&gt;, pct_johnson &lt;dbl&gt;, pct_other &lt;dbl&gt;, clinton_vote &lt;dbl&gt;,\n#   trump_vote &lt;dbl&gt;, johnson_vote &lt;dbl&gt;, other_vote &lt;dbl&gt;, ev_dem &lt;dbl&gt;,\n#   ev_rep &lt;dbl&gt;, ev_oth &lt;dbl&gt;, census &lt;chr&gt;\n\n\nNow our us_states_elec table has both the line-drawing information and (very redundantly) the election data merged in, with rows repeated as necessary."
  },
  {
    "objectID": "slides/07-make-maps-1.html#choropleths-1",
    "href": "slides/07-make-maps-1.html#choropleths-1",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Choropleths",
    "text": "Choropleths\n\n\nus_states_elec |&gt;\n  ggplot(mapping = aes(x = long, \n                       y = lat,\n                       fill = party,\n                       group = group)) + \n  geom_polygon(color = \"gray90\", \n               size = 0.1) +\n  coord_map(projection = \"albers\", \n            lat0 = 39, lat1 = 45) +\n  guides(fill = \"none\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#lets-turn-off-the-gridlines",
    "href": "slides/07-make-maps-1.html#lets-turn-off-the-gridlines",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Let’s turn off the gridlines",
    "text": "Let’s turn off the gridlines\nThis is a theme function.\n\ntheme_map &lt;- function(base_size=9, base_family=\"\") {\n    require(grid)\n    theme_bw(base_size=base_size, base_family=base_family) %+replace%\n        theme(axis.line=element_blank(),\n              axis.text=element_blank(),\n              axis.ticks=element_blank(),\n              axis.title=element_blank(),\n              panel.background=element_blank(),\n              panel.border=element_blank(),\n              panel.grid=element_blank(),\n              panel.spacing=unit(0, \"lines\"),\n              plot.background=element_blank(),\n              legend.justification = c(0,0),\n              legend.position = c(0,0)\n              )\n}"
  },
  {
    "objectID": "slides/07-make-maps-1.html#add-the-theme-function-at-the-end",
    "href": "slides/07-make-maps-1.html#add-the-theme-function-at-the-end",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Add the theme function at the end",
    "text": "Add the theme function at the end\n\n\nus_states_elec |&gt; \n  ggplot(mapping = aes(x = long, \n                       y = lat,\n                       fill = party,\n                       group = group)) + \n  geom_polygon(color = \"gray90\", \n               size = 0.1) +\n  coord_map(projection = \"albers\", \n            lat0 = 39, lat1 = 45) +\n  theme_map()"
  },
  {
    "objectID": "slides/07-make-maps-1.html#fix-the-party-colors",
    "href": "slides/07-make-maps-1.html#fix-the-party-colors",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Fix the Party Colors",
    "text": "Fix the Party Colors\n\n\n## Hex color codes for Democratic Blue and Republican Red\nparty_colors &lt;- c(\"#2E74C0\", \"#CB454A\")\n\n\nus_states_elec |&gt; \n  ggplot(mapping = aes(x = long, \n                       y = lat,\n                       fill = party,\n                       group = group)) + \n  geom_polygon(color = \"gray90\", \n               size = 0.1) +\n  scale_fill_manual(values = party_colors) + \n  coord_map(projection = \"albers\", \n            lat0 = 39, lat1 = 45) +\n  theme_map()"
  },
  {
    "objectID": "slides/07-make-maps-1.html#continuous-measures-are-gradients",
    "href": "slides/07-make-maps-1.html#continuous-measures-are-gradients",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Continuous measures are gradients",
    "text": "Continuous measures are gradients\n\n\nus_states_elec |&gt; \n  ggplot(mapping = aes(x = long, \n                       y = lat,\n                       fill = pct_trump,\n                       group = group)) + \n  geom_polygon(color = \"gray90\", \n               size = 0.1) +\n  coord_map(projection = \"albers\", \n            lat0 = 39, lat1 = 45) +\n  labs(title = \"Trump vote\", \n       fill = \"Percent\") +  \n  theme_map()"
  },
  {
    "objectID": "slides/07-make-maps-1.html#fix-the-gradient-with-a-scale-function",
    "href": "slides/07-make-maps-1.html#fix-the-gradient-with-a-scale-function",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Fix the gradient with a scale function",
    "text": "Fix the gradient with a scale function\n\n\nus_states_elec |&gt; \n  ggplot(mapping = aes(x = long, \n                       y = lat,\n                       fill = pct_trump,\n                       group = group)) + \n  geom_polygon(color = \"gray90\", \n               size = 0.1) +\n  scale_fill_gradient(low = \"white\",  \n                      high = \"#CB454A\") + \n        labs(title = \"Trump vote\") +\n  coord_map(projection = \"albers\", \n            lat0 = 39, lat1 = 45) +\n  labs(title = \"Trump vote\", \n       fill = \"Percent\") +  \n  theme_map()"
  },
  {
    "objectID": "slides/07-make-maps-1.html#some-gradients-are-diverging",
    "href": "slides/07-make-maps-1.html#some-gradients-are-diverging",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Some gradients are diverging",
    "text": "Some gradients are diverging\n\n\nus_states_elec |&gt; \n  ggplot(mapping = aes(x = long, \n                       y = lat,\n                       fill = d_points,\n                       group = group)) + \n  geom_polygon(color = \"gray90\", \n               size = 0.1) +\n  scale_fill_gradient2() + \n  coord_map(projection = \"albers\", \n            lat0 = 39, lat1 = 45) +\n  labs(title = \"Winning Margins\", \n       fill = \"Percent\") +  \n  theme_map()"
  },
  {
    "objectID": "slides/07-make-maps-1.html#purple-america-map",
    "href": "slides/07-make-maps-1.html#purple-america-map",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Purple America Map",
    "text": "Purple America Map\n\n\nus_states_elec |&gt; \n  ggplot(mapping = aes(x = long, \n                       y = lat,\n                       fill = d_points,\n                       group = group)) + \n  geom_polygon(color = \"gray90\", \n               size = 0.1) +\n  scale_fill_gradient2(low = \"red\",\n                mid = scales::muted(\"purple\"),\n                high = \"blue\",\n                breaks = c(-25, 0, 25, \n                        50, 75)) + \n  coord_map(projection = \"albers\", \n            lat0 = 39, lat1 = 45) +\n  labs(title = \"Winning Margins\", \n       fill = \"Percent\") +  \n  theme_map()"
  },
  {
    "objectID": "slides/07-make-maps-1.html#purple-america-map-without-dc",
    "href": "slides/07-make-maps-1.html#purple-america-map-without-dc",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Purple America Map, without DC",
    "text": "Purple America Map, without DC\n\n\nus_states_elec |&gt; \n  filter(region %nin% \"district of columbia\") |&gt; \n  ggplot(mapping = aes(x = long, \n                       y = lat,\n                       fill = d_points,\n                       group = group)) + \n  geom_polygon(color = \"gray90\", \n               size = 0.1) +\n  scale_fill_gradient2(low = \"red\",\n                mid = scales::muted(\"purple\"),\n                high = \"blue\") +\n  coord_map(projection = \"albers\", \n            lat0 = 39, lat1 = 45) +\n  labs(title = \"Winning Margins\", \n       fill = \"Percent\") +  \n  theme_map()"
  },
  {
    "objectID": "slides/07-make-maps-1.html#county-level-choropleths",
    "href": "slides/07-make-maps-1.html#county-level-choropleths",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "County-level choropleths",
    "text": "County-level choropleths\n\nConceptually identical to state ones. The tables are just bigger, because there are way more lines to draw.\n\n\ncounty_map &lt;- as_tibble(county_map)\ncounty_map\n\n# A tibble: 191,382 × 7\n       long       lat order hole  piece group            id   \n      &lt;dbl&gt;     &lt;dbl&gt; &lt;int&gt; &lt;lgl&gt; &lt;fct&gt; &lt;fct&gt;            &lt;chr&gt;\n 1 1225889. -1275020.     1 FALSE 1     0500000US01001.1 01001\n 2 1235324. -1274008.     2 FALSE 1     0500000US01001.1 01001\n 3 1244873. -1272331.     3 FALSE 1     0500000US01001.1 01001\n 4 1244129. -1267515.     4 FALSE 1     0500000US01001.1 01001\n 5 1272010. -1262889.     5 FALSE 1     0500000US01001.1 01001\n 6 1276797. -1295514.     6 FALSE 1     0500000US01001.1 01001\n 7 1273832. -1297124.     7 FALSE 1     0500000US01001.1 01001\n 8 1272727. -1296631.     8 FALSE 1     0500000US01001.1 01001\n 9 1272513. -1299771.     9 FALSE 1     0500000US01001.1 01001\n10 1269950. -1302038.    10 FALSE 1     0500000US01001.1 01001\n# ℹ 191,372 more rows\n\n\n\n191,000 or so rows\nid here is the county FIPS code."
  },
  {
    "objectID": "slides/07-make-maps-1.html#county-level-choropleths-1",
    "href": "slides/07-make-maps-1.html#county-level-choropleths-1",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "County-level choropleths",
    "text": "County-level choropleths\n\ncounty_data &lt;- as_tibble(county_data)\ncounty_data\n\n# A tibble: 3,195 × 32\n   id    name  state census_region pop_dens pop_dens4 pop_dens6 pct_black    pop\n   &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; &lt;fct&gt;         &lt;fct&gt;    &lt;fct&gt;     &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt;\n 1 0     &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;          [   50,… [ 45,  1… [ 82,  2… [10.0,15… 3.19e8\n 2 01000 1     AL    South         [   50,… [ 45,  1… [ 82,  2… [25.0,50… 4.85e6\n 3 01001 Auta… AL    South         [   50,… [ 45,  1… [ 82,  2… [15.0,25… 5.54e4\n 4 01003 Bald… AL    South         [  100,… [118,716… [ 82,  2… [ 5.0,10… 2.00e5\n 5 01005 Barb… AL    South         [   10,… [ 17,   … [ 25,   … [25.0,50… 2.69e4\n 6 01007 Bibb… AL    South         [   10,… [ 17,   … [ 25,   … [15.0,25… 2.25e4\n 7 01009 Blou… AL    South         [   50,… [ 45,  1… [ 82,  2… [ 0.0, 2… 5.77e4\n 8 01011 Bull… AL    South         [   10,… [ 17,   … [  9,   … [50.0,85… 1.08e4\n 9 01013 Butl… AL    South         [   10,… [ 17,   … [ 25,   … [25.0,50… 2.03e4\n10 01015 Calh… AL    South         [  100,… [118,716… [ 82,  2… [15.0,25… 1.16e5\n# ℹ 3,185 more rows\n# ℹ 23 more variables: female &lt;dbl&gt;, white &lt;dbl&gt;, black &lt;dbl&gt;,\n#   travel_time &lt;dbl&gt;, land_area &lt;dbl&gt;, hh_income &lt;int&gt;, su_gun4 &lt;fct&gt;,\n#   su_gun6 &lt;fct&gt;, fips &lt;dbl&gt;, votes_dem_2016 &lt;int&gt;, votes_gop_2016 &lt;int&gt;,\n#   total_votes_2016 &lt;int&gt;, per_dem_2016 &lt;dbl&gt;, per_gop_2016 &lt;dbl&gt;,\n#   diff_2016 &lt;int&gt;, per_dem_2012 &lt;dbl&gt;, per_gop_2012 &lt;dbl&gt;, diff_2012 &lt;int&gt;,\n#   winner &lt;chr&gt;, partywinner16 &lt;chr&gt;, winner12 &lt;chr&gt;, partywinner12 &lt;chr&gt;, …"
  },
  {
    "objectID": "slides/07-make-maps-1.html#county-level-choropleths-2",
    "href": "slides/07-make-maps-1.html#county-level-choropleths-2",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "County-level choropleths",
    "text": "County-level choropleths\n\n3,195 entities, including states (FIPS id ends in four zeros)\nAnd the US as a whole (FIPS id of 0)\nSample a few rows, with specific columns:\n\n\ncounty_data  |&gt; \n    select(id, name, state, pop_dens, pct_black) |&gt;\n    sample_n(10)\n\n# A tibble: 10 × 5\n   id    name                   state pop_dens      pct_black  \n   &lt;chr&gt; &lt;chr&gt;                  &lt;fct&gt; &lt;fct&gt;         &lt;fct&gt;      \n 1 48159 Franklin County        TX    [   10,   50) [ 2.0, 5.0)\n 2 21127 Lawrence County        KY    [   10,   50) [ 0.0, 2.0)\n 3 47087 Jackson County         TN    [   10,   50) [ 0.0, 2.0)\n 4 02070 Dillingham Census Area AK    [    0,   10) [ 0.0, 2.0)\n 5 47035 Cumberland County      TN    [   50,  100) [ 0.0, 2.0)\n 6 19177 Van Buren County       IA    [   10,   50) [ 0.0, 2.0)\n 7 29219 Warren County          MO    [   50,  100) [ 2.0, 5.0)\n 8 36049 Lewis County           NY    [   10,   50) [ 0.0, 2.0)\n 9 13159 Jasper County          GA    [   10,   50) [15.0,25.0)\n10 13053 Chattahoochee County   GA    [   10,   50) [15.0,25.0)"
  },
  {
    "objectID": "slides/07-make-maps-1.html#joined-table",
    "href": "slides/07-make-maps-1.html#joined-table",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Joined table",
    "text": "Joined table\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\ncounty_full\n\n# A tibble: 191,382 × 38\n       long       lat order hole  piece group    id    name  state census_region\n      &lt;dbl&gt;     &lt;dbl&gt; &lt;int&gt; &lt;lgl&gt; &lt;fct&gt; &lt;fct&gt;    &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; &lt;fct&gt;        \n 1 1225889. -1275020.     1 FALSE 1     0500000… 01001 Auta… AL    South        \n 2 1235324. -1274008.     2 FALSE 1     0500000… 01001 Auta… AL    South        \n 3 1244873. -1272331.     3 FALSE 1     0500000… 01001 Auta… AL    South        \n 4 1244129. -1267515.     4 FALSE 1     0500000… 01001 Auta… AL    South        \n 5 1272010. -1262889.     5 FALSE 1     0500000… 01001 Auta… AL    South        \n 6 1276797. -1295514.     6 FALSE 1     0500000… 01001 Auta… AL    South        \n 7 1273832. -1297124.     7 FALSE 1     0500000… 01001 Auta… AL    South        \n 8 1272727. -1296631.     8 FALSE 1     0500000… 01001 Auta… AL    South        \n 9 1272513. -1299771.     9 FALSE 1     0500000… 01001 Auta… AL    South        \n10 1269950. -1302038.    10 FALSE 1     0500000… 01001 Auta… AL    South        \n# ℹ 191,372 more rows\n# ℹ 28 more variables: pop_dens &lt;fct&gt;, pop_dens4 &lt;fct&gt;, pop_dens6 &lt;fct&gt;,\n#   pct_black &lt;fct&gt;, pop &lt;int&gt;, female &lt;dbl&gt;, white &lt;dbl&gt;, black &lt;dbl&gt;,\n#   travel_time &lt;dbl&gt;, land_area &lt;dbl&gt;, hh_income &lt;int&gt;, su_gun4 &lt;fct&gt;,\n#   su_gun6 &lt;fct&gt;, fips &lt;dbl&gt;, votes_dem_2016 &lt;int&gt;, votes_gop_2016 &lt;int&gt;,\n#   total_votes_2016 &lt;int&gt;, per_dem_2016 &lt;dbl&gt;, per_gop_2016 &lt;dbl&gt;,\n#   diff_2016 &lt;int&gt;, per_dem_2012 &lt;dbl&gt;, per_gop_2012 &lt;dbl&gt;, diff_2012 &lt;int&gt;, …"
  },
  {
    "objectID": "slides/07-make-maps-1.html#county-population-density",
    "href": "slides/07-make-maps-1.html#county-population-density",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "County Population Density",
    "text": "County Population Density\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))"
  },
  {
    "objectID": "slides/07-make-maps-1.html#county-population-density-1",
    "href": "slides/07-make-maps-1.html#county-population-density-1",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "County Population Density",
    "text": "County Population Density\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\n\ncounty_full\n\n\n\n\n# A tibble: 191,382 × 38\n       long       lat order hole  piece group    id    name  state census_region\n      &lt;dbl&gt;     &lt;dbl&gt; &lt;int&gt; &lt;lgl&gt; &lt;fct&gt; &lt;fct&gt;    &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; &lt;fct&gt;        \n 1 1225889. -1275020.     1 FALSE 1     0500000… 01001 Auta… AL    South        \n 2 1235324. -1274008.     2 FALSE 1     0500000… 01001 Auta… AL    South        \n 3 1244873. -1272331.     3 FALSE 1     0500000… 01001 Auta… AL    South        \n 4 1244129. -1267515.     4 FALSE 1     0500000… 01001 Auta… AL    South        \n 5 1272010. -1262889.     5 FALSE 1     0500000… 01001 Auta… AL    South        \n 6 1276797. -1295514.     6 FALSE 1     0500000… 01001 Auta… AL    South        \n 7 1273832. -1297124.     7 FALSE 1     0500000… 01001 Auta… AL    South        \n 8 1272727. -1296631.     8 FALSE 1     0500000… 01001 Auta… AL    South        \n 9 1272513. -1299771.     9 FALSE 1     0500000… 01001 Auta… AL    South        \n10 1269950. -1302038.    10 FALSE 1     0500000… 01001 Auta… AL    South        \n# ℹ 191,372 more rows\n# ℹ 28 more variables: pop_dens &lt;fct&gt;, pop_dens4 &lt;fct&gt;, pop_dens6 &lt;fct&gt;,\n#   pct_black &lt;fct&gt;, pop &lt;int&gt;, female &lt;dbl&gt;, white &lt;dbl&gt;, black &lt;dbl&gt;,\n#   travel_time &lt;dbl&gt;, land_area &lt;dbl&gt;, hh_income &lt;int&gt;, su_gun4 &lt;fct&gt;,\n#   su_gun6 &lt;fct&gt;, fips &lt;dbl&gt;, votes_dem_2016 &lt;int&gt;, votes_gop_2016 &lt;int&gt;,\n#   total_votes_2016 &lt;int&gt;, per_dem_2016 &lt;dbl&gt;, per_gop_2016 &lt;dbl&gt;,\n#   diff_2016 &lt;int&gt;, per_dem_2012 &lt;dbl&gt;, per_gop_2012 &lt;dbl&gt;, diff_2012 &lt;int&gt;, …"
  },
  {
    "objectID": "slides/07-make-maps-1.html#county-population-density-2",
    "href": "slides/07-make-maps-1.html#county-population-density-2",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "County Population Density",
    "text": "County Population Density\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                          fill = pop_dens,\n                          group = group))"
  },
  {
    "objectID": "slides/07-make-maps-1.html#county-population-density-3",
    "href": "slides/07-make-maps-1.html#county-population-density-3",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "County Population Density",
    "text": "County Population Density\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                          fill = pop_dens,\n                          group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1)"
  },
  {
    "objectID": "slides/07-make-maps-1.html#county-population-density-4",
    "href": "slides/07-make-maps-1.html#county-population-density-4",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "County Population Density",
    "text": "County Population Density\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                          fill = pop_dens,\n                          group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1) +\n  coord_fixed()"
  },
  {
    "objectID": "slides/07-make-maps-1.html#county-population-density-5",
    "href": "slides/07-make-maps-1.html#county-population-density-5",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "County Population Density",
    "text": "County Population Density\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                          fill = pop_dens,\n                          group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1) +\n  coord_fixed() +\n  scale_fill_brewer(palette=\"Blues\",\n                    labels = c(\"0-10\", \"10-50\", \"50-100\",\n                     \"100-500\", \"500-1,000\",\n                      \"1,000-5,000\", \"&gt;5,000\"))"
  },
  {
    "objectID": "slides/07-make-maps-1.html#county-population-density-6",
    "href": "slides/07-make-maps-1.html#county-population-density-6",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "County Population Density",
    "text": "County Population Density\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                          fill = pop_dens,\n                          group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1) +\n  coord_fixed() +\n  scale_fill_brewer(palette=\"Blues\",\n                    labels = c(\"0-10\", \"10-50\", \"50-100\",\n                     \"100-500\", \"500-1,000\",\n                      \"1,000-5,000\", \"&gt;5,000\")) +\n  labs(fill = \"Population per\\nsquare mile\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#county-population-density-7",
    "href": "slides/07-make-maps-1.html#county-population-density-7",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "County Population Density",
    "text": "County Population Density\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                          fill = pop_dens,\n                          group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1) +\n  coord_fixed() +\n  scale_fill_brewer(palette=\"Blues\",\n                    labels = c(\"0-10\", \"10-50\", \"50-100\",\n                     \"100-500\", \"500-1,000\",\n                      \"1,000-5,000\", \"&gt;5,000\")) +\n  labs(fill = \"Population per\\nsquare mile\") +\n  kjhslides::kjh_theme_map()"
  },
  {
    "objectID": "slides/07-make-maps-1.html#county-population-density-8",
    "href": "slides/07-make-maps-1.html#county-population-density-8",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "County Population Density",
    "text": "County Population Density\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                          fill = pop_dens,\n                          group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1) +\n  coord_fixed() +\n  scale_fill_brewer(palette=\"Blues\",\n                    labels = c(\"0-10\", \"10-50\", \"50-100\",\n                     \"100-500\", \"500-1,000\",\n                      \"1,000-5,000\", \"&gt;5,000\")) +\n  labs(fill = \"Population per\\nsquare mile\") +\n  kjhslides::kjh_theme_map() +\n  guides(fill = guide_legend(nrow = 1))"
  },
  {
    "objectID": "slides/07-make-maps-1.html#county-population-density-9",
    "href": "slides/07-make-maps-1.html#county-population-density-9",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "County Population Density",
    "text": "County Population Density\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                          fill = pop_dens,\n                          group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1) +\n  coord_fixed() +\n  scale_fill_brewer(palette=\"Blues\",\n                    labels = c(\"0-10\", \"10-50\", \"50-100\",\n                     \"100-500\", \"500-1,000\",\n                      \"1,000-5,000\", \"&gt;5,000\")) +\n  labs(fill = \"Population per\\nsquare mile\") +\n  kjhslides::kjh_theme_map() +\n  guides(fill = guide_legend(nrow = 1)) +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#same-again-for-percent-black",
    "href": "slides/07-make-maps-1.html#same-again-for-percent-black",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Same again for Percent Black",
    "text": "Same again for Percent Black\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))"
  },
  {
    "objectID": "slides/07-make-maps-1.html#same-again-for-percent-black-1",
    "href": "slides/07-make-maps-1.html#same-again-for-percent-black-1",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Same again for Percent Black",
    "text": "Same again for Percent Black\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\ncounty_full\n\n\n\n\n# A tibble: 191,382 × 38\n       long       lat order hole  piece group    id    name  state census_region\n      &lt;dbl&gt;     &lt;dbl&gt; &lt;int&gt; &lt;lgl&gt; &lt;fct&gt; &lt;fct&gt;    &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; &lt;fct&gt;        \n 1 1225889. -1275020.     1 FALSE 1     0500000… 01001 Auta… AL    South        \n 2 1235324. -1274008.     2 FALSE 1     0500000… 01001 Auta… AL    South        \n 3 1244873. -1272331.     3 FALSE 1     0500000… 01001 Auta… AL    South        \n 4 1244129. -1267515.     4 FALSE 1     0500000… 01001 Auta… AL    South        \n 5 1272010. -1262889.     5 FALSE 1     0500000… 01001 Auta… AL    South        \n 6 1276797. -1295514.     6 FALSE 1     0500000… 01001 Auta… AL    South        \n 7 1273832. -1297124.     7 FALSE 1     0500000… 01001 Auta… AL    South        \n 8 1272727. -1296631.     8 FALSE 1     0500000… 01001 Auta… AL    South        \n 9 1272513. -1299771.     9 FALSE 1     0500000… 01001 Auta… AL    South        \n10 1269950. -1302038.    10 FALSE 1     0500000… 01001 Auta… AL    South        \n# ℹ 191,372 more rows\n# ℹ 28 more variables: pop_dens &lt;fct&gt;, pop_dens4 &lt;fct&gt;, pop_dens6 &lt;fct&gt;,\n#   pct_black &lt;fct&gt;, pop &lt;int&gt;, female &lt;dbl&gt;, white &lt;dbl&gt;, black &lt;dbl&gt;,\n#   travel_time &lt;dbl&gt;, land_area &lt;dbl&gt;, hh_income &lt;int&gt;, su_gun4 &lt;fct&gt;,\n#   su_gun6 &lt;fct&gt;, fips &lt;dbl&gt;, votes_dem_2016 &lt;int&gt;, votes_gop_2016 &lt;int&gt;,\n#   total_votes_2016 &lt;int&gt;, per_dem_2016 &lt;dbl&gt;, per_gop_2016 &lt;dbl&gt;,\n#   diff_2016 &lt;int&gt;, per_dem_2012 &lt;dbl&gt;, per_gop_2012 &lt;dbl&gt;, diff_2012 &lt;int&gt;, …"
  },
  {
    "objectID": "slides/07-make-maps-1.html#same-again-for-percent-black-2",
    "href": "slides/07-make-maps-1.html#same-again-for-percent-black-2",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Same again for Percent Black",
    "text": "Same again for Percent Black\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       fill = pct_black,\n                       group = group))"
  },
  {
    "objectID": "slides/07-make-maps-1.html#same-again-for-percent-black-3",
    "href": "slides/07-make-maps-1.html#same-again-for-percent-black-3",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Same again for Percent Black",
    "text": "Same again for Percent Black\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       fill = pct_black,\n                       group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1)"
  },
  {
    "objectID": "slides/07-make-maps-1.html#same-again-for-percent-black-4",
    "href": "slides/07-make-maps-1.html#same-again-for-percent-black-4",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Same again for Percent Black",
    "text": "Same again for Percent Black\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       fill = pct_black,\n                       group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1) +\n  coord_fixed()"
  },
  {
    "objectID": "slides/07-make-maps-1.html#same-again-for-percent-black-5",
    "href": "slides/07-make-maps-1.html#same-again-for-percent-black-5",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Same again for Percent Black",
    "text": "Same again for Percent Black\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       fill = pct_black,\n                       group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1) +\n  coord_fixed() +\n  scale_fill_brewer(palette=\"Greens\",\n                    labels = c(\"0-2%\", \"2-5%\", \"5-10%\",\n                               \"10-15%\", \"15-25%\",\n                               \"25-50%\", \"&gt;50%\"))"
  },
  {
    "objectID": "slides/07-make-maps-1.html#same-again-for-percent-black-6",
    "href": "slides/07-make-maps-1.html#same-again-for-percent-black-6",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Same again for Percent Black",
    "text": "Same again for Percent Black\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       fill = pct_black,\n                       group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1) +\n  coord_fixed() +\n  scale_fill_brewer(palette=\"Greens\",\n                    labels = c(\"0-2%\", \"2-5%\", \"5-10%\",\n                               \"10-15%\", \"15-25%\",\n                               \"25-50%\", \"&gt;50%\")) +\n  labs(fill = \"US Population, percent Black\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#same-again-for-percent-black-7",
    "href": "slides/07-make-maps-1.html#same-again-for-percent-black-7",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Same again for Percent Black",
    "text": "Same again for Percent Black\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       fill = pct_black,\n                       group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1) +\n  coord_fixed() +\n  scale_fill_brewer(palette=\"Greens\",\n                    labels = c(\"0-2%\", \"2-5%\", \"5-10%\",\n                               \"10-15%\", \"15-25%\",\n                               \"25-50%\", \"&gt;50%\")) +\n  labs(fill = \"US Population, percent Black\") +\n  kjhslides::kjh_theme_map()"
  },
  {
    "objectID": "slides/07-make-maps-1.html#same-again-for-percent-black-8",
    "href": "slides/07-make-maps-1.html#same-again-for-percent-black-8",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Same again for Percent Black",
    "text": "Same again for Percent Black\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       fill = pct_black,\n                       group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1) +\n  coord_fixed() +\n  scale_fill_brewer(palette=\"Greens\",\n                    labels = c(\"0-2%\", \"2-5%\", \"5-10%\",\n                               \"10-15%\", \"15-25%\",\n                               \"25-50%\", \"&gt;50%\")) +\n  labs(fill = \"US Population, percent Black\") +\n  kjhslides::kjh_theme_map() +\n  guides(fill = guide_legend(nrow = 1))"
  },
  {
    "objectID": "slides/07-make-maps-1.html#same-again-for-percent-black-9",
    "href": "slides/07-make-maps-1.html#same-again-for-percent-black-9",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Same again for Percent Black",
    "text": "Same again for Percent Black\n\n\n\ncounty_full &lt;- as_tibble(left_join(county_map, county_data, by = \"id\"))\n\ncounty_full |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       fill = pct_black,\n                       group = group)) +\n  geom_polygon(color = \"gray70\",\n               size = 0.1) +\n  coord_fixed() +\n  scale_fill_brewer(palette=\"Greens\",\n                    labels = c(\"0-2%\", \"2-5%\", \"5-10%\",\n                               \"10-15%\", \"15-25%\",\n                               \"25-50%\", \"&gt;50%\")) +\n  labs(fill = \"US Population, percent Black\") +\n  kjhslides::kjh_theme_map() +\n  guides(fill = guide_legend(nrow = 1)) +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#big-counties-few-people-rare-events",
    "href": "slides/07-make-maps-1.html#big-counties-few-people-rare-events",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Big counties, few people, rare events",
    "text": "Big counties, few people, rare events"
  },
  {
    "objectID": "slides/07-make-maps-1.html#example-reverse-coding",
    "href": "slides/07-make-maps-1.html#example-reverse-coding",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Example: Reverse coding",
    "text": "Example: Reverse coding\n\nCodeReverse\n\n\n\norange_pal &lt;- RColorBrewer::brewer.pal(n = 6, \n                                       name = \"Oranges\")\norange_pal\n\n[1] \"#FEEDDE\" \"#FDD0A2\" \"#FDAE6B\" \"#FD8D3C\" \"#E6550D\" \"#A63603\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Just reverse it\norange_rev &lt;- rev(orange_pal)\norange_rev\n\n[1] \"#A63603\" \"#E6550D\" \"#FD8D3C\" \"#FDAE6B\" \"#FDD0A2\" \"#FEEDDE\""
  },
  {
    "objectID": "slides/07-make-maps-1.html#build-a-plot",
    "href": "slides/07-make-maps-1.html#build-a-plot",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Build a plot",
    "text": "Build a plot\n\np_g1 &lt;- county_full |&gt; \n  ggplot(mapping = aes(x = long, y = lat,\n                       fill = su_gun6, \n                       group = group)) + \n  geom_polygon(color = \"gray70\", \n               size = 0.1) + \n  coord_fixed() + \n  scale_fill_manual(values = orange_pal) + \n  labs(title = \"Gun-Related Suicides, 1999-2015\",\n       fill = \"Rate per 100,000 pop.\") + \n  theme_map() + \n  guides(fill = guide_legend(nrow = 1)) + \n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#and-another",
    "href": "slides/07-make-maps-1.html#and-another",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "And another",
    "text": "And another\n\np_g2 &lt;- county_full |&gt; \n  ggplot(mapping = aes(x = long, y = lat,\n                       fill = pop_dens6, \n                       group = group)) + \n  geom_polygon(color = \"gray70\", \n               size = 0.1) + \n  coord_fixed() + \n  scale_fill_manual(values = orange_rev) + \n  labs(title = \"Reverse-coded Population Density\",\n       fill = \"Persons per square mile\") + \n  theme_map() + \n  guides(fill = guide_legend(nrow = 1)) + \n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#comparison",
    "href": "slides/07-make-maps-1.html#comparison",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Comparison",
    "text": "Comparison"
  },
  {
    "objectID": "slides/07-make-maps-1.html#opiate-related-mortality-1999-2014",
    "href": "slides/07-make-maps-1.html#opiate-related-mortality-1999-2014",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Opiate-related Mortality, 1999-2014",
    "text": "Opiate-related Mortality, 1999-2014\n\nopiates\n\n# A tibble: 800 × 11\n    year state    fips deaths population crude adjusted adjusted_se region abbr \n   &lt;int&gt; &lt;chr&gt;   &lt;int&gt;  &lt;int&gt;      &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt; &lt;ord&gt;  &lt;chr&gt;\n 1  1999 Alabama     1     37    4430141   0.8      0.8         0.1 South  AL   \n 2  1999 Alaska      2     27     624779   4.3      4           0.8 West   AK   \n 3  1999 Arizona     4    229    5023823   4.6      4.7         0.3 West   AZ   \n 4  1999 Arkans…     5     28    2651860   1.1      1.1         0.2 South  AR   \n 5  1999 Califo…     6   1474   33499204   4.4      4.5         0.1 West   CA   \n 6  1999 Colora…     8    164    4226018   3.9      3.7         0.3 West   CO   \n 7  1999 Connec…     9    151    3386401   4.5      4.4         0.4 North… CT   \n 8  1999 Delawa…    10     32     774990   4.1      4.1         0.7 South  DE   \n 9  1999 Distri…    11     28     570213   4.9      4.9         0.9 South  DC   \n10  1999 Florida    12    402   15759421   2.6      2.6         0.1 South  FL   \n# ℹ 790 more rows\n# ℹ 1 more variable: division_name &lt;chr&gt;\n\nopiates$state &lt;- tolower(opiates$state)\nus_states$state &lt;- us_states$region\nopiates_map &lt;- left_join(us_states, opiates, by = \"state\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#the-two-leading-states-in-each-region-in-2014",
    "href": "slides/07-make-maps-1.html#the-two-leading-states-in-each-region-in-2014",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "The two leading states in each region in 2014",
    "text": "The two leading states in each region in 2014\n\n\n\n## Put this in an object called `st_top`\nopiates\n\n\n\n\n# A tibble: 800 × 11\n    year state    fips deaths population crude adjusted adjusted_se region abbr \n   &lt;int&gt; &lt;chr&gt;   &lt;int&gt;  &lt;int&gt;      &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt; &lt;ord&gt;  &lt;chr&gt;\n 1  1999 alabama     1     37    4430141   0.8      0.8         0.1 South  AL   \n 2  1999 alaska      2     27     624779   4.3      4           0.8 West   AK   \n 3  1999 arizona     4    229    5023823   4.6      4.7         0.3 West   AZ   \n 4  1999 arkans…     5     28    2651860   1.1      1.1         0.2 South  AR   \n 5  1999 califo…     6   1474   33499204   4.4      4.5         0.1 West   CA   \n 6  1999 colora…     8    164    4226018   3.9      3.7         0.3 West   CO   \n 7  1999 connec…     9    151    3386401   4.5      4.4         0.4 North… CT   \n 8  1999 delawa…    10     32     774990   4.1      4.1         0.7 South  DE   \n 9  1999 distri…    11     28     570213   4.9      4.9         0.9 South  DC   \n10  1999 florida    12    402   15759421   2.6      2.6         0.1 South  FL   \n# ℹ 790 more rows\n# ℹ 1 more variable: division_name &lt;chr&gt;"
  },
  {
    "objectID": "slides/07-make-maps-1.html#the-two-leading-states-in-each-region-in-2014-1",
    "href": "slides/07-make-maps-1.html#the-two-leading-states-in-each-region-in-2014-1",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "The two leading states in each region in 2014",
    "text": "The two leading states in each region in 2014\n\n\n\n## Put this in an object called `st_top`\nopiates |&gt;\n  filter(year == max(year),\n         abbr != \"DC\")\n\n\n\n\n# A tibble: 50 × 11\n    year state    fips deaths population crude adjusted adjusted_se region abbr \n   &lt;int&gt; &lt;chr&gt;   &lt;int&gt;  &lt;int&gt;      &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt; &lt;ord&gt;  &lt;chr&gt;\n 1  2014 alabama     1    270    4849377   5.6      5.6         0.3 South  AL   \n 2  2014 alaska      2     76     736732  10.3     10.6         1.2 West   AK   \n 3  2014 arizona     4    589    6731484   8.7      8.8         0.4 West   AZ   \n 4  2014 arkans…     5    173    2966369   5.8      6.3         0.5 South  AR   \n 5  2014 califo…     6   2024   38802500   5.2      5           0.1 West   CA   \n 6  2014 colora…     8    517    5355866   9.7      9.4         0.4 West   CO   \n 7  2014 connec…     9    525    3596677  14.6     15.2         0.7 North… CT   \n 8  2014 delawa…    10    124     935614  13.3     13.9         1.3 South  DE   \n 9  2014 florida    12   1399   19893297   7        7.2         0.2 South  FL   \n10  2014 georgia    13    710   10097343   7        7           0.3 South  GA   \n# ℹ 40 more rows\n# ℹ 1 more variable: division_name &lt;chr&gt;"
  },
  {
    "objectID": "slides/07-make-maps-1.html#the-two-leading-states-in-each-region-in-2014-2",
    "href": "slides/07-make-maps-1.html#the-two-leading-states-in-each-region-in-2014-2",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "The two leading states in each region in 2014",
    "text": "The two leading states in each region in 2014\n\n\n\n## Put this in an object called `st_top`\nopiates |&gt;\n  filter(year == max(year),\n         abbr != \"DC\") |&gt;\n  group_by(region)\n\n\n\n\n# A tibble: 50 × 11\n# Groups:   region [4]\n    year state    fips deaths population crude adjusted adjusted_se region abbr \n   &lt;int&gt; &lt;chr&gt;   &lt;int&gt;  &lt;int&gt;      &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt; &lt;ord&gt;  &lt;chr&gt;\n 1  2014 alabama     1    270    4849377   5.6      5.6         0.3 South  AL   \n 2  2014 alaska      2     76     736732  10.3     10.6         1.2 West   AK   \n 3  2014 arizona     4    589    6731484   8.7      8.8         0.4 West   AZ   \n 4  2014 arkans…     5    173    2966369   5.8      6.3         0.5 South  AR   \n 5  2014 califo…     6   2024   38802500   5.2      5           0.1 West   CA   \n 6  2014 colora…     8    517    5355866   9.7      9.4         0.4 West   CO   \n 7  2014 connec…     9    525    3596677  14.6     15.2         0.7 North… CT   \n 8  2014 delawa…    10    124     935614  13.3     13.9         1.3 South  DE   \n 9  2014 florida    12   1399   19893297   7        7.2         0.2 South  FL   \n10  2014 georgia    13    710   10097343   7        7           0.3 South  GA   \n# ℹ 40 more rows\n# ℹ 1 more variable: division_name &lt;chr&gt;"
  },
  {
    "objectID": "slides/07-make-maps-1.html#the-two-leading-states-in-each-region-in-2014-3",
    "href": "slides/07-make-maps-1.html#the-two-leading-states-in-each-region-in-2014-3",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "The two leading states in each region in 2014",
    "text": "The two leading states in each region in 2014\n\n\n\n## Put this in an object called `st_top`\nopiates |&gt;\n  filter(year == max(year),\n         abbr != \"DC\") |&gt;\n  group_by(region) |&gt;\n  slice_max(order_by = adjusted,\n            n = 2)\n\n\n\n\n# A tibble: 8 × 11\n# Groups:   region [4]\n   year state     fips deaths population crude adjusted adjusted_se region abbr \n  &lt;int&gt; &lt;chr&gt;    &lt;int&gt;  &lt;int&gt;      &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt; &lt;ord&gt;  &lt;chr&gt;\n1  2014 new ham…    33    297    1326813  22.4     23.4         1.4 North… NH   \n2  2014 rhode i…    44    205    1055173  19.4     19.8         1.4 North… RI   \n3  2014 ohio        39   2106   11594163  18.2     19.1         0.4 Midwe… OH   \n4  2014 missouri    29    696    6063589  11.5     12           0.5 Midwe… MO   \n5  2014 new mex…    35    402    2085572  19.3     20.2         1   West   NM   \n6  2014 utah        49    455    2942902  15.5     16.8         0.8 West   UT   \n7  2014 west vi…    54    554    1850326  29.9     31.6         1.4 South  WV   \n8  2014 kentucky    21    729    4413457  16.5     16.8         0.6 South  KY   \n# ℹ 1 more variable: division_name &lt;chr&gt;"
  },
  {
    "objectID": "slides/07-make-maps-1.html#the-two-leading-states-in-each-region-in-2014-4",
    "href": "slides/07-make-maps-1.html#the-two-leading-states-in-each-region-in-2014-4",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "The two leading states in each region in 2014",
    "text": "The two leading states in each region in 2014\n\n\n\n## Put this in an object called `st_top`\nopiates |&gt;\n  filter(year == max(year),\n         abbr != \"DC\") |&gt;\n  group_by(region) |&gt;\n  slice_max(order_by = adjusted,\n            n = 2)\n\n\n\n\n# A tibble: 8 × 11\n# Groups:   region [4]\n   year state     fips deaths population crude adjusted adjusted_se region abbr \n  &lt;int&gt; &lt;chr&gt;    &lt;int&gt;  &lt;int&gt;      &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt; &lt;ord&gt;  &lt;chr&gt;\n1  2014 new ham…    33    297    1326813  22.4     23.4         1.4 North… NH   \n2  2014 rhode i…    44    205    1055173  19.4     19.8         1.4 North… RI   \n3  2014 ohio        39   2106   11594163  18.2     19.1         0.4 Midwe… OH   \n4  2014 missouri    29    696    6063589  11.5     12           0.5 Midwe… MO   \n5  2014 new mex…    35    402    2085572  19.3     20.2         1   West   NM   \n6  2014 utah        49    455    2942902  15.5     16.8         0.8 West   UT   \n7  2014 west vi…    54    554    1850326  29.9     31.6         1.4 South  WV   \n8  2014 kentucky    21    729    4413457  16.5     16.8         0.6 South  KY   \n# ℹ 1 more variable: division_name &lt;chr&gt;"
  },
  {
    "objectID": "slides/07-make-maps-1.html#opiates-time-series-plot",
    "href": "slides/07-make-maps-1.html#opiates-time-series-plot",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Opiates Time Series plot",
    "text": "Opiates Time Series plot\n\n\n\nst_top &lt;- opiates |&gt;  filter(year == max(year), abbr != \"DC\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#opiates-time-series-plot-1",
    "href": "slides/07-make-maps-1.html#opiates-time-series-plot-1",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Opiates Time Series plot",
    "text": "Opiates Time Series plot\n\n\n\nst_top &lt;- opiates |&gt;  filter(year == max(year), abbr != \"DC\") |&gt;\n  group_by(region)"
  },
  {
    "objectID": "slides/07-make-maps-1.html#opiates-time-series-plot-2",
    "href": "slides/07-make-maps-1.html#opiates-time-series-plot-2",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Opiates Time Series plot",
    "text": "Opiates Time Series plot\n\n\n\nst_top &lt;- opiates |&gt;  filter(year == max(year), abbr != \"DC\") |&gt;\n  group_by(region) |&gt;\n  slice_max(order_by = adjusted, n = 2)"
  },
  {
    "objectID": "slides/07-make-maps-1.html#opiates-time-series-plot-3",
    "href": "slides/07-make-maps-1.html#opiates-time-series-plot-3",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Opiates Time Series plot",
    "text": "Opiates Time Series plot\n\n\n\nst_top &lt;- opiates |&gt;  filter(year == max(year), abbr != \"DC\") |&gt;\n  group_by(region) |&gt;\n  slice_max(order_by = adjusted, n = 2)\n\nopiates\n\n\n\n\n# A tibble: 800 × 11\n    year state    fips deaths population crude adjusted adjusted_se region abbr \n   &lt;int&gt; &lt;chr&gt;   &lt;int&gt;  &lt;int&gt;      &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt; &lt;ord&gt;  &lt;chr&gt;\n 1  1999 alabama     1     37    4430141   0.8      0.8         0.1 South  AL   \n 2  1999 alaska      2     27     624779   4.3      4           0.8 West   AK   \n 3  1999 arizona     4    229    5023823   4.6      4.7         0.3 West   AZ   \n 4  1999 arkans…     5     28    2651860   1.1      1.1         0.2 South  AR   \n 5  1999 califo…     6   1474   33499204   4.4      4.5         0.1 West   CA   \n 6  1999 colora…     8    164    4226018   3.9      3.7         0.3 West   CO   \n 7  1999 connec…     9    151    3386401   4.5      4.4         0.4 North… CT   \n 8  1999 delawa…    10     32     774990   4.1      4.1         0.7 South  DE   \n 9  1999 distri…    11     28     570213   4.9      4.9         0.9 South  DC   \n10  1999 florida    12    402   15759421   2.6      2.6         0.1 South  FL   \n# ℹ 790 more rows\n# ℹ 1 more variable: division_name &lt;chr&gt;"
  },
  {
    "objectID": "slides/07-make-maps-1.html#opiates-time-series-plot-4",
    "href": "slides/07-make-maps-1.html#opiates-time-series-plot-4",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Opiates Time Series plot",
    "text": "Opiates Time Series plot\n\n\n\nst_top &lt;- opiates |&gt;  filter(year == max(year), abbr != \"DC\") |&gt;\n  group_by(region) |&gt;\n  slice_max(order_by = adjusted, n = 2)\n\nopiates |&gt;\n  ggplot(aes(x = year,\n             y = adjusted))"
  },
  {
    "objectID": "slides/07-make-maps-1.html#opiates-time-series-plot-5",
    "href": "slides/07-make-maps-1.html#opiates-time-series-plot-5",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Opiates Time Series plot",
    "text": "Opiates Time Series plot\n\n\n\nst_top &lt;- opiates |&gt;  filter(year == max(year), abbr != \"DC\") |&gt;\n  group_by(region) |&gt;\n  slice_max(order_by = adjusted, n = 2)\n\nopiates |&gt;\n  ggplot(aes(x = year,\n             y = adjusted)) +\n  geom_line(aes(group = state),\n            color = \"gray50\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#opiates-time-series-plot-6",
    "href": "slides/07-make-maps-1.html#opiates-time-series-plot-6",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Opiates Time Series plot",
    "text": "Opiates Time Series plot\n\n\n\nst_top &lt;- opiates |&gt;  filter(year == max(year), abbr != \"DC\") |&gt;\n  group_by(region) |&gt;\n  slice_max(order_by = adjusted, n = 2)\n\nopiates |&gt;\n  ggplot(aes(x = year,\n             y = adjusted)) +\n  geom_line(aes(group = state),\n            color = \"gray50\") +\n  geom_smooth(aes(group = region),\n              se = FALSE)"
  },
  {
    "objectID": "slides/07-make-maps-1.html#opiates-time-series-plot-7",
    "href": "slides/07-make-maps-1.html#opiates-time-series-plot-7",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Opiates Time Series plot",
    "text": "Opiates Time Series plot\n\n\n\nst_top &lt;- opiates |&gt;  filter(year == max(year), abbr != \"DC\") |&gt;\n  group_by(region) |&gt;\n  slice_max(order_by = adjusted, n = 2)\n\nopiates |&gt;\n  ggplot(aes(x = year,\n             y = adjusted)) +\n  geom_line(aes(group = state),\n            color = \"gray50\") +\n  geom_smooth(aes(group = region),\n              se = FALSE) +\n  ggrepel::geom_text_repel(\n    data = st_top,\n    mapping = aes(x = year,\n                  y = adjusted,\n                  label = abbr),\n    size = 3,\n    segment.color = NA,\n    nudge_x = 0.5)"
  },
  {
    "objectID": "slides/07-make-maps-1.html#opiates-time-series-plot-8",
    "href": "slides/07-make-maps-1.html#opiates-time-series-plot-8",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Opiates Time Series plot",
    "text": "Opiates Time Series plot\n\n\n\nst_top &lt;- opiates |&gt;  filter(year == max(year), abbr != \"DC\") |&gt;\n  group_by(region) |&gt;\n  slice_max(order_by = adjusted, n = 2)\n\nopiates |&gt;\n  ggplot(aes(x = year,\n             y = adjusted)) +\n  geom_line(aes(group = state),\n            color = \"gray50\") +\n  geom_smooth(aes(group = region),\n              se = FALSE) +\n  ggrepel::geom_text_repel(\n    data = st_top,\n    mapping = aes(x = year,\n                  y = adjusted,\n                  label = abbr),\n    size = 3,\n    segment.color = NA,\n    nudge_x = 0.5) +\n  coord_cartesian(c(min(opiates$year),\n                    max(opiates$year) + 1))"
  },
  {
    "objectID": "slides/07-make-maps-1.html#opiates-time-series-plot-9",
    "href": "slides/07-make-maps-1.html#opiates-time-series-plot-9",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Opiates Time Series plot",
    "text": "Opiates Time Series plot\n\n\n\nst_top &lt;- opiates |&gt;  filter(year == max(year), abbr != \"DC\") |&gt;\n  group_by(region) |&gt;\n  slice_max(order_by = adjusted, n = 2)\n\nopiates |&gt;\n  ggplot(aes(x = year,\n             y = adjusted)) +\n  geom_line(aes(group = state),\n            color = \"gray50\") +\n  geom_smooth(aes(group = region),\n              se = FALSE) +\n  ggrepel::geom_text_repel(\n    data = st_top,\n    mapping = aes(x = year,\n                  y = adjusted,\n                  label = abbr),\n    size = 3,\n    segment.color = NA,\n    nudge_x = 0.5) +\n  coord_cartesian(c(min(opiates$year),\n                    max(opiates$year) + 1)) +\n  labs(x = NULL,\n       y = \"Rate per 100,000 population\",\n       title = \"State-Level Opiate Death\n          Rates by Region, 1999-2014\")"
  },
  {
    "objectID": "slides/07-make-maps-1.html#opiates-time-series-plot-10",
    "href": "slides/07-make-maps-1.html#opiates-time-series-plot-10",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Opiates Time Series plot",
    "text": "Opiates Time Series plot\n\n\n\nst_top &lt;- opiates |&gt;  filter(year == max(year), abbr != \"DC\") |&gt;\n  group_by(region) |&gt;\n  slice_max(order_by = adjusted, n = 2)\n\nopiates |&gt;\n  ggplot(aes(x = year,\n             y = adjusted)) +\n  geom_line(aes(group = state),\n            color = \"gray50\") +\n  geom_smooth(aes(group = region),\n              se = FALSE) +\n  ggrepel::geom_text_repel(\n    data = st_top,\n    mapping = aes(x = year,\n                  y = adjusted,\n                  label = abbr),\n    size = 3,\n    segment.color = NA,\n    nudge_x = 0.5) +\n  coord_cartesian(c(min(opiates$year),\n                    max(opiates$year) + 1)) +\n  labs(x = NULL,\n       y = \"Rate per 100,000 population\",\n       title = \"State-Level Opiate Death\n          Rates by Region, 1999-2014\") +\n  facet_wrap(~ reorder(region, adjusted,\n                       na.rm = TRUE),\n             nrow  = 1)"
  },
  {
    "objectID": "slides/07-make-maps-1.html#opiates-time-series-plot-11",
    "href": "slides/07-make-maps-1.html#opiates-time-series-plot-11",
    "title": "Data Visualization - 7. Make Maps (1)",
    "section": "Opiates Time Series plot",
    "text": "Opiates Time Series plot\n\n\n\nst_top &lt;- opiates |&gt;  filter(year == max(year), abbr != \"DC\") |&gt;\n  group_by(region) |&gt;\n  slice_max(order_by = adjusted, n = 2)\n\nopiates |&gt;\n  ggplot(aes(x = year,\n             y = adjusted)) +\n  geom_line(aes(group = state),\n            color = \"gray50\") +\n  geom_smooth(aes(group = region),\n              se = FALSE) +\n  ggrepel::geom_text_repel(\n    data = st_top,\n    mapping = aes(x = year,\n                  y = adjusted,\n                  label = abbr),\n    size = 3,\n    segment.color = NA,\n    nudge_x = 0.5) +\n  coord_cartesian(c(min(opiates$year),\n                    max(opiates$year) + 1)) +\n  labs(x = NULL,\n       y = \"Rate per 100,000 population\",\n       title = \"State-Level Opiate Death\n          Rates by Region, 1999-2014\") +\n  facet_wrap(~ reorder(region, adjusted,\n                       na.rm = TRUE),\n             nrow  = 1)"
  },
  {
    "objectID": "slides/02-about-r.html#abstraction-in-software",
    "href": "slides/02-about-r.html#abstraction-in-software",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Abstraction in software",
    "text": "Abstraction in software\n\n\nLess\n\nEasy things are awkward\nHard things are straightforward\nReally hard things are possible"
  },
  {
    "objectID": "slides/02-about-r.html#abstraction-in-software-1",
    "href": "slides/02-about-r.html#abstraction-in-software-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Abstraction in software",
    "text": "Abstraction in software\n\n\nLess\n\nEasy things are awkward\nHard things are straightforward\nReally hard things are possible\n\n\nMore\n\nEasy things are trivial\nHard things are awkward\nReally hard things are impossible"
  },
  {
    "objectID": "slides/02-about-r.html#compare",
    "href": "slides/02-about-r.html#compare",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Compare",
    "text": "Compare\n\nD3\nGrid\nggplot\nStata\nExcel"
  },
  {
    "objectID": "slides/02-about-r.html#two-ways-to-use-r-and-ggplot",
    "href": "slides/02-about-r.html#two-ways-to-use-r-and-ggplot",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Two ways to use R and ggplot",
    "text": "Two ways to use R and ggplot\n1. Do everything in R from start to finish\nRaw data |&gt; Read, Clean, Analyse |&gt; Tidy table |&gt;  Make figures"
  },
  {
    "objectID": "slides/02-about-r.html#two-ways-to-use-r-and-ggplot-1",
    "href": "slides/02-about-r.html#two-ways-to-use-r-and-ggplot-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Two ways to use R and ggplot",
    "text": "Two ways to use R and ggplot\n1. Do everything in R from start to finish\nRaw data |&gt; Read, Clean, Analyse |&gt; Tidy table |&gt;  Make figures\n2. Just hand ggplot a table of results\nStata/SAS/etc |&gt; Tidy table |&gt; Read in to R |&gt; Make figures"
  },
  {
    "objectID": "slides/02-about-r.html#an-ide-for-r",
    "href": "slides/02-about-r.html#an-ide-for-r",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "An IDE for R",
    "text": "An IDE for R"
  },
  {
    "objectID": "slides/02-about-r.html#an-ide-for-meals",
    "href": "slides/02-about-r.html#an-ide-for-meals",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "An IDE for Meals",
    "text": "An IDE for Meals"
  },
  {
    "objectID": "slides/02-about-r.html#your-code-is-whats-real-in-your-project",
    "href": "slides/02-about-r.html#your-code-is-whats-real-in-your-project",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Your code is what’s real in your project",
    "text": "Your code is what’s real in your project"
  },
  {
    "objectID": "slides/02-about-r.html#consider-not-showing-output-inline",
    "href": "slides/02-about-r.html#consider-not-showing-output-inline",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Consider not showing output inline",
    "text": "Consider not showing output inline"
  },
  {
    "objectID": "slides/02-about-r.html#where-we-want-to-end-up",
    "href": "slides/02-about-r.html#where-we-want-to-end-up",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Where we want to end up",
    "text": "Where we want to end up"
  },
  {
    "objectID": "slides/02-about-r.html#where-we-want-to-end-up-1",
    "href": "slides/02-about-r.html#where-we-want-to-end-up-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Where we want to end up",
    "text": "Where we want to end up\n\nPDF out"
  },
  {
    "objectID": "slides/02-about-r.html#where-we-want-to-end-up-2",
    "href": "slides/02-about-r.html#where-we-want-to-end-up-2",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Where we want to end up",
    "text": "Where we want to end up\n\nHTML out"
  },
  {
    "objectID": "slides/02-about-r.html#where-we-want-to-end-up-3",
    "href": "slides/02-about-r.html#where-we-want-to-end-up-3",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Where we want to end up",
    "text": "Where we want to end up\n\nWord out"
  },
  {
    "objectID": "slides/02-about-r.html#how-to-get-there",
    "href": "slides/02-about-r.html#how-to-get-there",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "How to get there?",
    "text": "How to get there?\n\n\n\n\n\nWe could write an R script with some notes inside, using it to create some figures and tables, paste them into our document.\nThis will work, but we can do better."
  },
  {
    "objectID": "slides/02-about-r.html#we-can-make-this",
    "href": "slides/02-about-r.html#we-can-make-this",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "We can make this …",
    "text": "We can make this …"
  },
  {
    "objectID": "slides/02-about-r.html#by-writing-this",
    "href": "slides/02-about-r.html#by-writing-this",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "… by writing this",
    "text": "… by writing this"
  },
  {
    "objectID": "slides/02-about-r.html#the-code-gets-replaced-by-its-output",
    "href": "slides/02-about-r.html#the-code-gets-replaced-by-its-output",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "The code gets replaced by its output",
    "text": "The code gets replaced by its output"
  },
  {
    "objectID": "slides/02-about-r.html#basic-markdown-summary",
    "href": "slides/02-about-r.html#basic-markdown-summary",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Basic markdown summary",
    "text": "Basic markdown summary\n\n\n\n\nDesired style\nUse the following Markdown annotation\n\n\n\n\nHeading 1\n# Heading 1\n\n\nHeading 2\n## Heading 2\n\n\nHeading 3\n### Heading 3 (Actual heading styles will vary.)\n\n\nParagraph\nJust start typing\n\n\nBold\n**Bold**\n\n\nItalic\n*Italic*\n\n\nImages\n[Alternate text for image](path/image.jpg)\n\n\nHyperlinks\n[Link text](https://www.visualizingsociety.com/)\n\n\nUnordered Lists\n\n\n\n- First\n- First\n\n\n- Second.\n- Second\n\n\n- Third\n- Third\n\n\nOrdered Lists\n\n\n\n1. First\n1. First\n\n\n2. Second.\n2. Second\n\n\n3. Third\n3. Third\n\n\nFootnote.¹\nFootnote[^notelabel]\n\n\n¹The note’s content.\n[^notelabel] The note's content."
  },
  {
    "objectID": "slides/02-about-r.html#the-right-frame-of-mind",
    "href": "slides/02-about-r.html#the-right-frame-of-mind",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "The right frame of mind",
    "text": "The right frame of mind\n\nThis is like learning how to drive a car, or how to cook in a kitchen … or learning to speak a language.\nAfter some orientation to what’s where, you will learn best by doing.\nSoftware is a pain, but you won’t crash the car or burn your house down."
  },
  {
    "objectID": "slides/02-about-r.html#loading-the-tidyverse-libraries",
    "href": "slides/02-about-r.html#loading-the-tidyverse-libraries",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Loading the tidyverse libraries",
    "text": "Loading the tidyverse libraries\nlibrary(tidyverse)\n── Attaching core tidyverse packages ────────────────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ──────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package to force all conflicts to become errors\n\nThe tidyverse has several components.\nWe’ll return to this message about Conflicts later."
  },
  {
    "objectID": "slides/02-about-r.html#tidyverse-components",
    "href": "slides/02-about-r.html#tidyverse-components",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Tidyverse components",
    "text": "Tidyverse components\n\n\n\nlibrary(tidyverse)\nLoading tidyverse: ggplot2\nLoading tidyverse: tibble\nLoading tidyverse: tidyr\nLoading tidyverse: readr\nLoading tidyverse: purrr\nLoading tidyverse: dplyr\n\n\n\nCall the package and …\n&lt;| Draw graphs\n&lt;| Nicer data tables\n&lt;| Tidy your data\n&lt;| Get data into R\n&lt;| Fancy Iteration\n&lt;| Action verbs for tables"
  },
  {
    "objectID": "slides/02-about-r.html#what-r-looks-like",
    "href": "slides/02-about-r.html#what-r-looks-like",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What R looks like",
    "text": "What R looks like\nCode you can type and run:\n\n## Inside code chunks, lines beginning with a # character are comments\n## Comments are ignored by R\n\nmy_numbers &lt;- c(1, 1, 2, 4, 1, 3, 1, 5) # Anything after a # character is ignored as well\n\nOutput:\n\nmy_numbers \n\n[1] 1 1 2 4 1 3 1 5\n\n\nThis is equivalent to running the code above, typing my_numbers at the console, and hitting enter."
  },
  {
    "objectID": "slides/02-about-r.html#what-r-looks-like-1",
    "href": "slides/02-about-r.html#what-r-looks-like-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What R looks like",
    "text": "What R looks like\nBy convention, code output in documents is prefixed by ##\nAlso by convention, outputting vectors, etc, gets a counter keeping track of the number of elements. For example,\n\nletters\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\""
  },
  {
    "objectID": "slides/02-about-r.html#its-a-calculator",
    "href": "slides/02-about-r.html#its-a-calculator",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "0. It’s a calculator",
    "text": "0. It’s a calculator\n\n\n\nArithmetic\n\n\n(31 * 12) / 2^4\n\n[1] 23.25\n\n\n\nsqrt(25)\n\n[1] 5\n\n\n\nlog(100)\n\n[1] 4.60517\n\nlog10(100)\n\n[1] 2"
  },
  {
    "objectID": "slides/02-about-r.html#its-a-calculator-1",
    "href": "slides/02-about-r.html#its-a-calculator-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "0. It’s a calculator",
    "text": "0. It’s a calculator\n\n\n\nArithmetic\n\n\n(31 * 12) / 2^4\n\n[1] 23.25\n\n\n\nsqrt(25)\n\n[1] 5\n\n\n\nlog(100)\n\n[1] 4.60517\n\nlog10(100)\n\n[1] 2\n\n\n\n\nLogic\n\n\n4 &lt; 10\n\n[1] TRUE\n\n4 &gt; 2 & 1 &gt; 0.5 # The \"&\" means \"and\"\n\n[1] TRUE\n\n4 &lt; 2 | 1 &gt; 0.5 # The \"|\" means \"or\"\n\n[1] TRUE\n\n4 &lt; 2 | 1 &lt; 0.5\n\n[1] FALSE"
  },
  {
    "objectID": "slides/02-about-r.html#boolean-and-logical-operators",
    "href": "slides/02-about-r.html#boolean-and-logical-operators",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Boolean and Logical operators",
    "text": "Boolean and Logical operators\nLogical equality and inequality (yielding a TRUE or FALSE result) is done with == and !=. Other logical operators include &lt;, &gt;, &lt;=, &gt;=, and ! for negation.\n\n## A logical test\n2 == 2 # Write `=` twice\n\n[1] TRUE\n\n\n\n## This will cause an error, because R will think you are trying to assign a value\n2 = 2\n\n## Error in 2 = 2 : invalid (do_set) left-hand side to assignment\n\n\n3 != 7 # Write `!` and then `=` to make `!=`\n\n[1] TRUE"
  },
  {
    "objectID": "slides/02-about-r.html#everything-in-r-has-a-name",
    "href": "slides/02-about-r.html#everything-in-r-has-a-name",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "1. Everything in R has a name",
    "text": "1. Everything in R has a name\n\nmy_numbers # We created this a few minutes ago\n\n[1] 1 1 2 4 1 3 1 5\n\nletters  # This one is built-in\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n\npi  # Also built-in\n\n[1] 3.141593"
  },
  {
    "objectID": "slides/02-about-r.html#some-names-are-forbidden",
    "href": "slides/02-about-r.html#some-names-are-forbidden",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Some names are forbidden",
    "text": "Some names are forbidden\nOr it’s a really bad idea to try to use them\n\nTRUE\nFALSE\nInf\nNaN \nNA \nNULL\n\nfor\nif\nwhile\nbreak\nfunction"
  },
  {
    "objectID": "slides/02-about-r.html#everything-is-an-object",
    "href": "slides/02-about-r.html#everything-is-an-object",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "2. Everything is an object",
    "text": "2. Everything is an object\nThere are a few built-in objects:\n\nletters\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n\n\n\npi\n\n[1] 3.141593\n\n\n\nLETTERS\n\n [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\"\n[20] \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\""
  },
  {
    "objectID": "slides/02-about-r.html#you-can-create-objects",
    "href": "slides/02-about-r.html#you-can-create-objects",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "3. You can create objects",
    "text": "3. You can create objects\nIn fact, this is mostly what we will be doing.\nObjects are created by assigning a thing to a name:\n\n## name... gets ... this stuff\nmy_numbers &lt;- c(1, 2, 3, 1, 3, 5, 25, 10)\n\n## name ... gets ... the output of the function `c()`\nyour_numbers &lt;- c(5, 31, 71, 1, 3, 21, 6, 52)\n\nThe c() function combines or concatenates things\n\nThe core thing we do in R is create objects by assigning a thing to a name. That thing is usually the output of some function. There are a lot of built-in functions.\nWe can create an object with the c() function and the assignment operator, &lt;-. The c() function concatenates things together."
  },
  {
    "objectID": "slides/02-about-r.html#the-assignment-operator",
    "href": "slides/02-about-r.html#the-assignment-operator",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "The assignment operator",
    "text": "The assignment operator\n\nThe assignment operator performs the action of creating objects\nUse a keyboard shortcut to write it:\nPress option and - on a Mac\nPress alt and - on Windows"
  },
  {
    "objectID": "slides/02-about-r.html#do-things-to-objects-with-functions",
    "href": "slides/02-about-r.html#do-things-to-objects-with-functions",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "4. Do things to objects with functions",
    "text": "4. Do things to objects with functions\n\n## this object... gets ... the output of this function\nmy_numbers &lt;- c(1, 2, 3, 1, 3, 5, 25, 10)\n\nyour_numbers &lt;- c(5, 31, 71, 1, 3, 21, 6, 52)\n\n\nmy_numbers\n\n[1]  1  2  3  1  3  5 25 10"
  },
  {
    "objectID": "slides/02-about-r.html#do-things-to-objects-with-functions-1",
    "href": "slides/02-about-r.html#do-things-to-objects-with-functions-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "4. Do things to objects with functions",
    "text": "4. Do things to objects with functions\n\nFunctions can be identified by the parentheses after their names.\n\n\nmy_numbers \n\n[1]  1  2  3  1  3  5 25 10\n\n\n\n## If you run this you'll get an error\nmean()"
  },
  {
    "objectID": "slides/02-about-r.html#what-functions-usually-do",
    "href": "slides/02-about-r.html#what-functions-usually-do",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What functions usually do",
    "text": "What functions usually do\n\nThey take inputs to arguments\nThey perform actions\nThey produce, or return, outputs\n\nmean(x = my_numbers)"
  },
  {
    "objectID": "slides/02-about-r.html#what-functions-usually-do-1",
    "href": "slides/02-about-r.html#what-functions-usually-do-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What functions usually do",
    "text": "What functions usually do\n\nThey take inputs to arguments\nThey perform actions\nThey produce, or return, outputs\n\nmean(x = my_numbers)\n[1] 6.25"
  },
  {
    "objectID": "slides/02-about-r.html#what-functions-usually-do-2",
    "href": "slides/02-about-r.html#what-functions-usually-do-2",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What functions usually do",
    "text": "What functions usually do\n\n## Get the mean of what? Of x.\n## You need to tell the function what x is\nmean(x = my_numbers)\n\n[1] 6.25\n\nmean(x = your_numbers)\n\n[1] 23.75"
  },
  {
    "objectID": "slides/02-about-r.html#what-functions-usually-do-3",
    "href": "slides/02-about-r.html#what-functions-usually-do-3",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What functions usually do",
    "text": "What functions usually do\nIf you don’t name the arguments, R assumes you are providing them in the order the function expects.\n\nmean(your_numbers)\n\n[1] 23.75"
  },
  {
    "objectID": "slides/02-about-r.html#what-functions-usually-do-4",
    "href": "slides/02-about-r.html#what-functions-usually-do-4",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What functions usually do",
    "text": "What functions usually do\nWhat arguments? Which order? Read the function’s help page\n\nhelp(mean)\n\n\n## quicker\n?mean\n\n\nHow to read an R help page?"
  },
  {
    "objectID": "slides/02-about-r.html#what-functions-usually-do-5",
    "href": "slides/02-about-r.html#what-functions-usually-do-5",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What functions usually do",
    "text": "What functions usually do\n\nArguments often tell the function what to do in specific circumstances\n\n\nmissing_numbers &lt;- c(1:10, NA, 20, 32, 50, 104, 32, 147, 99, NA, 45)\n\nmean(missing_numbers)\n\n[1] NA\n\nmean(missing_numbers, na.rm = TRUE)\n\n[1] 32.44444\n\n\nOr select from one of several options\n\n## Look at ?mean to see what `trim` does\nmean(missing_numbers, na.rm = TRUE, trim = 0.1)\n\n[1] 27.25"
  },
  {
    "objectID": "slides/02-about-r.html#what-functions-usually-do-6",
    "href": "slides/02-about-r.html#what-functions-usually-do-6",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What functions usually do",
    "text": "What functions usually do\nThere are all kinds of functions. They return different things.\n\nsummary(my_numbers)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1.00    1.75    3.00    6.25    6.25   25.00"
  },
  {
    "objectID": "slides/02-about-r.html#what-functions-usually-do-7",
    "href": "slides/02-about-r.html#what-functions-usually-do-7",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What functions usually do",
    "text": "What functions usually do\nYou can assign the output of a function to a name, which turns it into an object. (Otherwise it’ll send its output to the console.)\n\nmy_summary &lt;- summary(my_numbers)\n\nmy_summary\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1.00    1.75    3.00    6.25    6.25   25.00"
  },
  {
    "objectID": "slides/02-about-r.html#what-functions-usually-do-8",
    "href": "slides/02-about-r.html#what-functions-usually-do-8",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What functions usually do",
    "text": "What functions usually do\nObjects hang around in your work environment until they are overwritten by you, or are deleted.\n\n## rm() function removes objects\nrm(my_summary)\n\nmy_summary\n\n## Error: object 'my_summary' not found"
  },
  {
    "objectID": "slides/02-about-r.html#functions-can-be-nested",
    "href": "slides/02-about-r.html#functions-can-be-nested",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Functions can be nested",
    "text": "Functions can be nested\n\nc(1:20)\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20\n\n\n\nmean(c(1:20))\n\n[1] 10.5\n\n\n\nsummary(mean(c(1:20)))\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   10.5    10.5    10.5    10.5    10.5    10.5 \n\n\n\nnames(summary(mean(c(1:20))))\n\n[1] \"Min.\"    \"1st Qu.\" \"Median\"  \"Mean\"    \"3rd Qu.\" \"Max.\"   \n\n\n\nlength(names(summary(mean(c(1:20)))))\n\n[1] 6\n\n\nNested functions are evaluated from the inside out."
  },
  {
    "objectID": "slides/02-about-r.html#use-the-pipe-operator",
    "href": "slides/02-about-r.html#use-the-pipe-operator",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Use the pipe operator: |>",
    "text": "Use the pipe operator: |&gt;\nInstead of deeply nesting functions in parentheses, we can use the pipe operator:\n\nc(1:20) |&gt; mean() |&gt; summary() |&gt; names() |&gt;  length()\n\n[1] 6\n\n\nRead this operator as “and then”"
  },
  {
    "objectID": "slides/02-about-r.html#use-the-pipe-operator-1",
    "href": "slides/02-about-r.html#use-the-pipe-operator-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Use the pipe operator: |>",
    "text": "Use the pipe operator: |&gt;\nBetter, vertical space is free in R:\n\nc(1:20) |&gt; \n  mean() |&gt; \n  summary() |&gt; \n  names() |&gt; \n  length()\n\n[1] 6"
  },
  {
    "objectID": "slides/02-about-r.html#pipelines-make-code-more-readable",
    "href": "slides/02-about-r.html#pipelines-make-code-more-readable",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Pipelines make code more readable",
    "text": "Pipelines make code more readable\n\nNot great, Bob:\n\n\n  serve(stir(pour_in_pan(whisk(crack_eggs(get_from_fridge(eggs), into = \"bowl\"), len = 40), temp = \"med-high\")))\n\n\nNotice how the first thing you read is the last operation performed."
  },
  {
    "objectID": "slides/02-about-r.html#pipelines-make-code-more-readable-1",
    "href": "slides/02-about-r.html#pipelines-make-code-more-readable-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Pipelines make code more readable",
    "text": "Pipelines make code more readable\n\nWe can use vertical space and indents, but it’s really not much better:\n\nserve(\n  stir(\n    pour_in_pan(\n      whisk(\n        crack_eggs(\n          get_from_fridge(eggs), \n        into = \"bowl\"), \n      len = 40), \n    temp = \"med-high\")\n  )\n)"
  },
  {
    "objectID": "slides/02-about-r.html#pipelines-make-code-more-readable-2",
    "href": "slides/02-about-r.html#pipelines-make-code-more-readable-2",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Pipelines make code more readable",
    "text": "Pipelines make code more readable\n\nMuch nicer:\n\neggs |&gt; \n  get_from_fridge() |&gt; \n  crack_eggs(into = \"bowl\") |&gt; \n  whisk(len = 40) |&gt; \n  pour_in_pan(temp = \"med-high\") |&gt; \n  stir() |&gt; \n  serve()\n\nWe’ll still use nested parentheses quite a bit, often in the context of a function working inside a pipeline. But it’s good not to have too many levels of nesting."
  },
  {
    "objectID": "slides/02-about-r.html#functions-are-bundled-into-packages",
    "href": "slides/02-about-r.html#functions-are-bundled-into-packages",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Functions are bundled into packages",
    "text": "Functions are bundled into packages\nPackages are loaded into your working environment using the library() function:\n\n## A package containing a dataset rather than functions\nlibrary(gapminder)\n\ngapminder\n\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   &lt;fct&gt;       &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows"
  },
  {
    "objectID": "slides/02-about-r.html#functions-are-bundled-into-packages-1",
    "href": "slides/02-about-r.html#functions-are-bundled-into-packages-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Functions are bundled into packages",
    "text": "Functions are bundled into packages\nYou need only install a package once (and occasionally update it):\n\n## Do at least once for each package. Once done, not needed each time.\ninstall.packages(\"palmerpenguins\", repos = \"http://cran.rstudio.com\")\n\n## Needed sometimes, especially after an R major version upgrade.\nupdate.packages(repos = \"http://cran.rstudio.com\")"
  },
  {
    "objectID": "slides/02-about-r.html#functions-are-bundled-into-packages-2",
    "href": "slides/02-about-r.html#functions-are-bundled-into-packages-2",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Functions are bundled into packages",
    "text": "Functions are bundled into packages\nBut you must load the package in each R session before you can access its contents:\n\n## To load a package, usually at the start of your RMarkdown document or script file\nlibrary(palmerpenguins)\npenguins\n\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "slides/02-about-r.html#grabbing-a-single-function-with",
    "href": "slides/02-about-r.html#grabbing-a-single-function-with",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Grabbing a single function with ::",
    "text": "Grabbing a single function with ::\n\n# A little glimpse of what we'll do soon\npenguins |&gt; \n  count(species, sex, year) |&gt; \n  pivot_wider(names_from = year, values_from = n) |&gt; \n  tinytable::tt()\n\n\n\n    \n\n    \n    \n      \n        \n        \n              \n                species\n                sex\n                2007\n                2008\n                2009\n              \n        \n        \n        \n                \n                  Adelie   \n                  female\n                  22\n                  25\n                  26\n                \n                \n                  Adelie   \n                  male  \n                  22\n                  25\n                  26\n                \n                \n                  Adelie   \n                  NA    \n                   6\n                  NA\n                  NA\n                \n                \n                  Chinstrap\n                  female\n                  13\n                   9\n                  12\n                \n                \n                  Chinstrap\n                  male  \n                  13\n                   9\n                  12\n                \n                \n                  Gentoo   \n                  female\n                  16\n                  22\n                  20\n                \n                \n                  Gentoo   \n                  male  \n                  17\n                  23\n                  21\n                \n                \n                  Gentoo   \n                  NA    \n                   1\n                   1\n                   3"
  },
  {
    "objectID": "slides/02-about-r.html#remember-those-conflicts",
    "href": "slides/02-about-r.html#remember-those-conflicts",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Remember those conflicts?",
    "text": "Remember those conflicts?\nlibrary(tidyverse)\n── Attaching core tidyverse packages ────────────────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ──────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package to force all conflicts to become errors\n\nSome functions in different packages have the same names.\nRelated concepts of namespaces and environments."
  },
  {
    "objectID": "slides/02-about-r.html#the-scope-of-names",
    "href": "slides/02-about-r.html#the-scope-of-names",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "The scope of names",
    "text": "The scope of names\n\nx &lt;- c(1:10)\ny &lt;- c(90:100)\n\nx\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\ny\n\n [1]  90  91  92  93  94  95  96  97  98  99 100\n\n\nmean()\n\n## Error in mean.default() : argument \"x\" is missing, with no default"
  },
  {
    "objectID": "slides/02-about-r.html#the-scope-of-names-1",
    "href": "slides/02-about-r.html#the-scope-of-names-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "The scope of names",
    "text": "The scope of names\n\nmean(x) # argument names are internal to functions\n\n[1] 5.5\n\nmean(x = x)\n\n[1] 5.5\n\nmean(x = y)\n\n[1] 95\n\nx\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\ny\n\n [1]  90  91  92  93  94  95  96  97  98  99 100"
  },
  {
    "objectID": "slides/02-about-r.html#vector-types-object-classes",
    "href": "slides/02-about-r.html#vector-types-object-classes",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "5. Vector types; Object classes",
    "text": "5. Vector types; Object classes\nI’m going to speak somewhat loosely here for now, and gloss over some distinctions between object classes and data structures, as well as kinds of objects and their attributes."
  },
  {
    "objectID": "slides/02-about-r.html#vector-types-object-classes-1",
    "href": "slides/02-about-r.html#vector-types-object-classes-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "5. Vector types; Object classes",
    "text": "5. Vector types; Object classes\nObjects are made of one or more vectors. A vector can, in effect, have a single type: integer, double, logical, character, factor, date, etc. That is, vectors are “atomic”. Complex objects are mostly lists of vectors of different sorts, or nested lists of other simpler objects that are themselves ultimately made up of vectors of"
  },
  {
    "objectID": "slides/02-about-r.html#vector-types-object-classes-2",
    "href": "slides/02-about-r.html#vector-types-object-classes-2",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "5. Vector types; Object classes",
    "text": "5. Vector types; Object classes\nThe object inspector in RStudio is your friend.\nYou can ask an object what it is at the console, too:\n\nclass(my_numbers)\n\n[1] \"numeric\"\n\ntypeof(my_numbers)\n\n[1] \"double\""
  },
  {
    "objectID": "slides/02-about-r.html#types-of-vector",
    "href": "slides/02-about-r.html#types-of-vector",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Types of vector",
    "text": "Types of vector\n\n\n\n\n\n\n\n\nHadley Wickham, Advanced R"
  },
  {
    "objectID": "slides/02-about-r.html#types-of-vector-1",
    "href": "slides/02-about-r.html#types-of-vector-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Types of vector",
    "text": "Types of vector\n\n\n\n\n\n\nmy_int &lt;- c(1, 3, 5, 6, 10)\nis.integer(my_int)\n\n[1] FALSE\n\nis.double(my_int)\n\n[1] TRUE\n\nmy_int &lt;- as.integer(my_int)\nis.integer(my_int)\n\n[1] TRUE\n\nmy_chr &lt;- c(\"Mary\", \"had\", \"a\", \"little\", \"lamb\")\nis.character(my_chr)\n\n[1] TRUE\n\nmy_lgl &lt;- c(TRUE, FALSE, TRUE)\nis.logical(my_lgl)\n\n[1] TRUE\n\n\n\n\nHadley Wickham, Advanced R"
  },
  {
    "objectID": "slides/02-about-r.html#types-of-vector-2",
    "href": "slides/02-about-r.html#types-of-vector-2",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Types of vector",
    "text": "Types of vector\n\n\n\n\n\n\n## Factors are for storing undordered or ordered categorical variables\nx &lt;- factor(c(\"Yes\", \"No\", \"No\", \"Maybe\", \"Yes\", \"Yes\", \"Yes\", \"No\"))\nx\n\n[1] Yes   No    No    Maybe Yes   Yes   Yes   No   \nLevels: Maybe No Yes\n\nsummary(x) # Alphabetical order by default\n\nMaybe    No   Yes \n    1     3     4 \n\ntypeof(x)       # Underneath, a factor is a type of integer ...\n\n[1] \"integer\"\n\nattributes(x)   # ... with labels for its numbers, or \"levels\" \n\n$levels\n[1] \"Maybe\" \"No\"    \"Yes\"  \n\n$class\n[1] \"factor\"\n\nlevels(x)\n\n[1] \"Maybe\" \"No\"    \"Yes\"  \n\nis.ordered(x)\n\n[1] FALSE\n\n\n\n\n\nHW:\nCategorical data, where values come from a fixed set of levels recorded in factor vectors.\nDates (with day resolution), which are recorded in Date vectors.\nDate-times (with second or sub-second resolution), which are stored in POSIXct vectors.\nDurations, which are stored in difftime vectors."
  },
  {
    "objectID": "slides/02-about-r.html#vectors-cant-be-heterogenous",
    "href": "slides/02-about-r.html#vectors-cant-be-heterogenous",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Vectors can’t be heterogenous",
    "text": "Vectors can’t be heterogenous\n\nObjects can be manually or automatically coerced from one class to another. Take care.\n\n\nclass(my_numbers)\n\n[1] \"numeric\"\n\nmy_new_vector &lt;- c(my_numbers, \"Apple\")\n\nmy_new_vector # vectors are homogeneous/atomic\n\n[1] \"1\"     \"2\"     \"3\"     \"1\"     \"3\"     \"5\"     \"25\"    \"10\"    \"Apple\"\n\nclass(my_new_vector)\n\n[1] \"character\""
  },
  {
    "objectID": "slides/02-about-r.html#vectors-cant-be-heterogenous-1",
    "href": "slides/02-about-r.html#vectors-cant-be-heterogenous-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Vectors can’t be heterogenous",
    "text": "Vectors can’t be heterogenous\n\nObjects can be manually or automatically coerced from one class to another. Take care.\n\n\nmy_dbl &lt;- c(2.1, 4.77, 30.111, 3.14519)\nis.double(my_dbl)\n\n[1] TRUE\n\nmy_dbl &lt;- as.integer(my_dbl)\n\nmy_dbl\n\n[1]  2  4 30  3"
  },
  {
    "objectID": "slides/02-about-r.html#a-table-of-data-is-a-kind-of-list",
    "href": "slides/02-about-r.html#a-table-of-data-is-a-kind-of-list",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "A table of data is a kind of list",
    "text": "A table of data is a kind of list\n\ngapminder # tibbles and data frames can contain vectors of different types\n\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   &lt;fct&gt;       &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows\n\nclass(gapminder)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\ntypeof(gapminder) # hmm\n\n[1] \"list\""
  },
  {
    "objectID": "slides/02-about-r.html#a-table-of-data-is-a-kind-of-list-1",
    "href": "slides/02-about-r.html#a-table-of-data-is-a-kind-of-list-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "A table of data is a kind of list",
    "text": "A table of data is a kind of list\n\nLists are collections of vectors of possibly different types and lengths, or collections of more complex objects that are themselves ultimately made out of vectors. Underneath, most complex R objects are some kind of list with different components that can be accessed by some function that knows the names of the things inside the list.\nA data frame is a list of vectors of the same length, where the vectors can be of different types (e.g. numeric, character, logical, etc).\nA data frame is a natural representation of what most real tables of data look like. Having it be a basic sort of entity in the programming language IS ONE OF R’s BEST IDEAS AND EASILY UNDERRATED!\nA tibble is an enhanced data frame\n\n\nTibbles have an enhanced print method, never coerce strings to factors, and provide stricter subsetting methods. (HW)\nAgain the object inspector is helpful here"
  },
  {
    "objectID": "slides/02-about-r.html#some-classes-are-versions-of-others",
    "href": "slides/02-about-r.html#some-classes-are-versions-of-others",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Some classes are versions of others",
    "text": "Some classes are versions of others\n\n\n\nBase R’s trusty data.frame\n\n\n\nlibrary(socviz)\ntitanic\n\n      fate    sex    n percent\n1 perished   male 1364    62.0\n2 perished female  126     5.7\n3 survived   male  367    16.7\n4 survived female  344    15.6\n\nclass(titanic)\n\n[1] \"data.frame\"\n\n\n\n## The `$` idiom picks out a named column here; \n## more generally, the named element of a list\ntitanic$percent  \n\n[1] 62.0  5.7 16.7 15.6"
  },
  {
    "objectID": "slides/02-about-r.html#some-classes-are-versions-of-others-1",
    "href": "slides/02-about-r.html#some-classes-are-versions-of-others-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Some classes are versions of others",
    "text": "Some classes are versions of others\n\n\n\nBase R’s trusty data.frame\n\n\n\nlibrary(socviz)\ntitanic\n\n      fate    sex    n percent\n1 perished   male 1364    62.0\n2 perished female  126     5.7\n3 survived   male  367    16.7\n4 survived female  344    15.6\n\nclass(titanic)\n\n[1] \"data.frame\"\n\n\n\n## The `$` idiom picks out a named column here; \n## more generally, the named element of a list\ntitanic$percent  \n\n[1] 62.0  5.7 16.7 15.6\n\n\n\n\n\nThe Tidyverse’s enhanced tibble\n\n\n\n## tibbles are build on data frames \ntitanic_tb &lt;- as_tibble(titanic) \ntitanic_tb\n\n# A tibble: 4 × 4\n  fate     sex        n percent\n  &lt;fct&gt;    &lt;fct&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1 perished male    1364    62  \n2 perished female   126     5.7\n3 survived male     367    16.7\n4 survived female   344    15.6\n\nclass(titanic_tb)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\n\n\nA data frame and a tibble are both fundamentally a list of vectors of the same length, where the vectors can be of different types (e.g. numeric, character, logical, etc)"
  },
  {
    "objectID": "slides/02-about-r.html#all-of-this-will-be-clearer-in-use",
    "href": "slides/02-about-r.html#all-of-this-will-be-clearer-in-use",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "All of this will be clearer in use",
    "text": "All of this will be clearer in use\n\ngss_sm\n\n# A tibble: 2,867 × 32\n    year    id ballot       age childs sibs   degree race  sex   region income16\n   &lt;dbl&gt; &lt;dbl&gt; &lt;labelled&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;labe&gt; &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt;   \n 1  2016     1 1             47      3 2      Bache… White Male  New E… $170000…\n 2  2016     2 2             61      0 3      High … White Male  New E… $50000 …\n 3  2016     3 3             72      2 3      Bache… White Male  New E… $75000 …\n 4  2016     4 1             43      4 3      High … White Fema… New E… $170000…\n 5  2016     5 3             55      2 2      Gradu… White Fema… New E… $170000…\n 6  2016     6 2             53      2 2      Junio… White Fema… New E… $60000 …\n 7  2016     7 1             50      2 2      High … White Male  New E… $170000…\n 8  2016     8 3             23      3 6      High … Other Fema… Middl… $30000 …\n 9  2016     9 1             45      3 5      High … Black Male  Middl… $60000 …\n10  2016    10 3             71      4 1      Junio… White Male  Middl… $60000 …\n# ℹ 2,857 more rows\n# ℹ 21 more variables: relig &lt;fct&gt;, marital &lt;fct&gt;, padeg &lt;fct&gt;, madeg &lt;fct&gt;,\n#   partyid &lt;fct&gt;, polviews &lt;fct&gt;, happy &lt;fct&gt;, partners &lt;fct&gt;, grass &lt;fct&gt;,\n#   zodiac &lt;fct&gt;, pres12 &lt;labelled&gt;, wtssall &lt;dbl&gt;, income_rc &lt;fct&gt;,\n#   agegrp &lt;fct&gt;, ageq &lt;fct&gt;, siblings &lt;fct&gt;, kids &lt;fct&gt;, religion &lt;fct&gt;,\n#   bigregion &lt;fct&gt;, partners_rc &lt;fct&gt;, obama &lt;dbl&gt;\n\n\n\nTidyverse tools are generally type safe, meaning their functions return the same type of thing every time, or fail if they cannot do this. So it’s good to know about the various data types."
  },
  {
    "objectID": "slides/02-about-r.html#arithmetic-on-vectors",
    "href": "slides/02-about-r.html#arithmetic-on-vectors",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "6. Arithmetic on vectors",
    "text": "6. Arithmetic on vectors\n\nIn R, all numbers are vectors of different sorts. Even single numbers (“scalars”) are conceptually vectors of length 1.\nArithmetic on vectors (and arrays generally) follows a series of recycling rules that favor ease of expression of vectorized, “elementwise” operations.\nSee if you can predict what the following operations do:"
  },
  {
    "objectID": "slides/02-about-r.html#arithmetic-on-vectors-1",
    "href": "slides/02-about-r.html#arithmetic-on-vectors-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "6. Arithmetic on vectors",
    "text": "6. Arithmetic on vectors\n\nmy_numbers\n\n[1]  1  2  3  1  3  5 25 10\n\nresult1 &lt;- my_numbers + 1"
  },
  {
    "objectID": "slides/02-about-r.html#arithmetic-on-vectors-2",
    "href": "slides/02-about-r.html#arithmetic-on-vectors-2",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "6. Arithmetic on vectors",
    "text": "6. Arithmetic on vectors\n\nmy_numbers\n\n[1]  1  2  3  1  3  5 25 10\n\nresult1 &lt;- my_numbers + 1\n\n\nresult1\n\n[1]  2  3  4  2  4  6 26 11"
  },
  {
    "objectID": "slides/02-about-r.html#arithmetic-on-vectors-3",
    "href": "slides/02-about-r.html#arithmetic-on-vectors-3",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "6. Arithmetic on vectors",
    "text": "6. Arithmetic on vectors\n\nresult2 &lt;- my_numbers + my_numbers"
  },
  {
    "objectID": "slides/02-about-r.html#arithmetic-on-vectors-4",
    "href": "slides/02-about-r.html#arithmetic-on-vectors-4",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "6. Arithmetic on vectors",
    "text": "6. Arithmetic on vectors\n\nresult2 &lt;- my_numbers + my_numbers\n\n\nresult2\n\n[1]  2  4  6  2  6 10 50 20"
  },
  {
    "objectID": "slides/02-about-r.html#arithmetic-on-vectors-5",
    "href": "slides/02-about-r.html#arithmetic-on-vectors-5",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "6. Arithmetic on vectors",
    "text": "6. Arithmetic on vectors\n\ntwo_nums &lt;- c(5, 10)\n\nresult3 &lt;- my_numbers + two_nums"
  },
  {
    "objectID": "slides/02-about-r.html#arithmetic-on-vectors-6",
    "href": "slides/02-about-r.html#arithmetic-on-vectors-6",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "6. Arithmetic on vectors",
    "text": "6. Arithmetic on vectors\n\ntwo_nums &lt;- c(5, 10)\n\nresult3 &lt;- my_numbers + two_nums\n\n\nresult3\n\n[1]  6 12  8 11  8 15 30 20"
  },
  {
    "objectID": "slides/02-about-r.html#arithmetic-on-vectors-7",
    "href": "slides/02-about-r.html#arithmetic-on-vectors-7",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "6. Arithmetic on vectors",
    "text": "6. Arithmetic on vectors\n\nthree_nums &lt;- c(1, 5, 10)\n\nresult4 &lt;- my_numbers + three_nums\n\nWarning in my_numbers + three_nums: longer object length is not a multiple of\nshorter object length"
  },
  {
    "objectID": "slides/02-about-r.html#arithmetic-on-vectors-8",
    "href": "slides/02-about-r.html#arithmetic-on-vectors-8",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "6. Arithmetic on vectors",
    "text": "6. Arithmetic on vectors\n\nthree_nums &lt;- c(1, 5, 10)\n\nresult4 &lt;- my_numbers + three_nums\n\nWarning in my_numbers + three_nums: longer object length is not a multiple of\nshorter object length\n\n\n\nresult4\n\n[1]  2  7 13  2  8 15 26 15\n\n\nNote that you get a warning here. It’ll still do it, though! Don’t ignore warnings until you understand what they mean."
  },
  {
    "objectID": "slides/02-about-r.html#r-will-be-frustrating",
    "href": "slides/02-about-r.html#r-will-be-frustrating",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "7. R will be frustrating",
    "text": "7. R will be frustrating\n\nThe IDE tries its best to help you. Learn to attend to what it is trying to say."
  },
  {
    "objectID": "slides/02-about-r.html#time-to-make-a-plot",
    "href": "slides/02-about-r.html#time-to-make-a-plot",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Time to make a plot",
    "text": "Time to make a plot\nLike before:\n\ngapminder\n\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   &lt;fct&gt;       &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows"
  },
  {
    "objectID": "slides/02-about-r.html#what-we-did",
    "href": "slides/02-about-r.html#what-we-did",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What we did",
    "text": "What we did\n\nlibrary(gapminder)\n\n\nLoad the packages we need: tidyverse and gapminder"
  },
  {
    "objectID": "slides/02-about-r.html#what-we-did-1",
    "href": "slides/02-about-r.html#what-we-did-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What we did",
    "text": "What we did\n\np &lt;- ggplot(data = gapminder, \n            mapping = aes(x = gdpPercap, \n                          y = lifeExp)) \n\n]\n\nNew object named p gets the output of the ggplot() function, given these arguments\nNotice how one of the arguments, mapping, is itself taking the output of a function named aes()"
  },
  {
    "objectID": "slides/02-about-r.html#what-we-did-2",
    "href": "slides/02-about-r.html#what-we-did-2",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "What we did",
    "text": "What we did\n\np + geom_point()\n\n\nShow me the output of the p object and the geom_point() function.\nThe + here acts just like the |&gt; pipe, but for ggplot functions only. (This is an accident of history.)"
  },
  {
    "objectID": "slides/02-about-r.html#and-what-is-r-doing",
    "href": "slides/02-about-r.html#and-what-is-r-doing",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "And what is R doing?",
    "text": "And what is R doing?\nR objects are just lists of stuff to use or things to do"
  },
  {
    "objectID": "slides/02-about-r.html#objects-are-like-bento-boxes",
    "href": "slides/02-about-r.html#objects-are-like-bento-boxes",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Objects are like Bento Boxes",
    "text": "Objects are like Bento Boxes"
  },
  {
    "objectID": "slides/02-about-r.html#logic-watch-out",
    "href": "slides/02-about-r.html#logic-watch-out",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Logic: Watch out!",
    "text": "Logic: Watch out!\nHere’s a gotcha. You might think you could write 3 &lt; 5 & 7 and have it be interpreted as “Three is less than five and also less than seven [True or False?]”:\n\n3 &lt; 5 & 7\n\n[1] TRUE\n\n\nIt seems to work!"
  },
  {
    "objectID": "slides/02-about-r.html#logic-watch-out-1",
    "href": "slides/02-about-r.html#logic-watch-out-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Logic: Watch out!",
    "text": "Logic: Watch out!\nBut now try 3 &lt; 5 & 1, where your intention is “Three is less than five and also less than one [True or False?]”\n\n3 &lt; 5 & 1\n\n[1] TRUE\n\n\n\nWhat’s happening is that 3 &lt; 5 is evaluated first, and resolves to TRUE, leaving us with the expression TRUE & 1.\nR interprets this as TRUE & as.logical(1).\nIn Boolean algebra, 1 resolves to TRUE. Any other number is FALSE. So,"
  },
  {
    "objectID": "slides/02-about-r.html#logic-watch-out-2",
    "href": "slides/02-about-r.html#logic-watch-out-2",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Logic: Watch out!",
    "text": "Logic: Watch out!\n\nTRUE & as.logical(1)\n\n[1] TRUE\n\n\n\n3 &lt; 5 & 3 &lt; 1\n\n[1] FALSE\n\n\n\nYou have to make your comparisons explicit."
  },
  {
    "objectID": "slides/02-about-r.html#logic-and-floating-point-arithmetic",
    "href": "slides/02-about-r.html#logic-and-floating-point-arithmetic",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Logic and floating point arithmetic",
    "text": "Logic and floating point arithmetic\nLet’s evaluate 0.6 + 0.2 == 0.8"
  },
  {
    "objectID": "slides/02-about-r.html#logic-and-floating-point-arithmetic-1",
    "href": "slides/02-about-r.html#logic-and-floating-point-arithmetic-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Logic and floating point arithmetic",
    "text": "Logic and floating point arithmetic\nLet’s evaluate 0.6 + 0.2 == 0.8\n\n0.6 + 0.2 == 0.8\n\n[1] TRUE"
  },
  {
    "objectID": "slides/02-about-r.html#logic-and-floating-point-arithmetic-2",
    "href": "slides/02-about-r.html#logic-and-floating-point-arithmetic-2",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Logic and floating point arithmetic",
    "text": "Logic and floating point arithmetic\nLet’s evaluate 0.6 + 0.2 == 0.8\n\n0.6 + 0.2 == 0.8\n\n[1] TRUE\n\n\nNow let’s try 0.6 + 0.3 == 0.9"
  },
  {
    "objectID": "slides/02-about-r.html#logic-and-floating-point-arithmetic-3",
    "href": "slides/02-about-r.html#logic-and-floating-point-arithmetic-3",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Logic and floating point arithmetic",
    "text": "Logic and floating point arithmetic\nLet’s evaluate 0.6 + 0.2 == 0.8\n\n0.6 + 0.2 == 0.8\n\n[1] TRUE\n\n\nNow let’s try 0.6 + 0.3 == 0.9\n\n0.6 + 0.3 == 0.9\n\n[1] FALSE\n\n\nEr. That’s not right."
  },
  {
    "objectID": "slides/02-about-r.html#welcome-to-floating-point-math",
    "href": "slides/02-about-r.html#welcome-to-floating-point-math",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Welcome to floating point math!",
    "text": "Welcome to floating point math!\n\n\nIn Base 10, you can’t precisely express fractions like \\(\\frac{1}{3}\\) and \\(\\frac{1}{9}\\). They come out as repeating decimals: 0.3333… or 0.1111… You can cleanly represent fractions that use a prime factor of the base, which in the case of Base 10 are 2 and 5."
  },
  {
    "objectID": "slides/02-about-r.html#welcome-to-floating-point-math-1",
    "href": "slides/02-about-r.html#welcome-to-floating-point-math-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Welcome to floating point math!",
    "text": "Welcome to floating point math!\n\n\nIn Base 10, you can’t precisely express fractions like \\(\\frac{1}{3}\\) and \\(\\frac{1}{9}\\). They come out as repeating decimals: 0.3333… or 0.1111… You can cleanly represent fractions that use a prime factor of the base, which in the case of Base 10 are 2 and 5.\nComputers represent numbers as binary (i.e. Base 2) floating-points. In Base 2, the only prime factor is 2. So \\(\\frac{1}{5}\\) or \\(\\frac{1}{10}\\) in binary would be repeating."
  },
  {
    "objectID": "slides/02-about-r.html#logic-and-floating-point-arithmetic-4",
    "href": "slides/02-about-r.html#logic-and-floating-point-arithmetic-4",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Logic and floating point arithmetic",
    "text": "Logic and floating point arithmetic\nWhen you do binary math on repeating numbers and convert back to decimals you get tiny leftovers, and this can mess up logical comparisons of equality. The all.equal() function exists for this purpose.\n\nprint(.1 + .2)\n\n[1] 0.3\n\nprint(.1 + .2, digits=18)\n\n[1] 0.300000000000000044\n\nall.equal(.1 + .2, 0.3)\n\n[1] TRUE\n\n\nSee e.g. https://0.30000000000000004.com"
  },
  {
    "objectID": "slides/02-about-r.html#assignment-with",
    "href": "slides/02-about-r.html#assignment-with",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Assignment with =",
    "text": "Assignment with =\n\nYou can use = as well as &lt;- for assignment.\n\n\nmy_numbers = c(1, 2, 3, 1, 3, 5, 25)\n\nmy_numbers\n\n[1]  1  2  3  1  3  5 25\n\n\n\nOn the other hand, = has a different meaning when used in functions.\nI’m going to use &lt;- for assignment throughout.\nBe consistent either way."
  },
  {
    "objectID": "slides/02-about-r.html#assignment-with-1",
    "href": "slides/02-about-r.html#assignment-with-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Assignment with =",
    "text": "Assignment with ="
  },
  {
    "objectID": "slides/02-about-r.html#the-other-pipe",
    "href": "slides/02-about-r.html#the-other-pipe",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "The other pipe: %>%",
    "text": "The other pipe: %&gt;%\n\nThe Base R pipe operator, |&gt; is a relatively recent addition to R.\nPiping operations were originally introduced in a package called called magrittr, where it took the form %&gt;%"
  },
  {
    "objectID": "slides/02-about-r.html#the-other-pipe-1",
    "href": "slides/02-about-r.html#the-other-pipe-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "The other pipe: %>%",
    "text": "The other pipe: %&gt;%\n\nThe Base R pipe operator, |&gt; is a relatively recent addition to R.\nPiping operations were originally introduced in a package called called magrittr, where it took the form %&gt;%\nIt’s been so successful, a version of it has been incorporated into Base R. It mostly but does not quite work the same way as %&gt;% in every case."
  },
  {
    "objectID": "slides/02-about-r.html#the-other-pipe-2",
    "href": "slides/02-about-r.html#the-other-pipe-2",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "The other pipe: %>%",
    "text": "The other pipe: %&gt;%\n\nThe Base R pipe operator, |&gt; is a relatively recent addition to R.\nPiping operations were originally introduced in a package called called magrittr, where it took the form %&gt;%\nIt’s been so successful, a version of it has been incorporated into Base R. It mostly but does not quite work the same way as %&gt;% in every case. We’ll use the Base R pipe in this course, but you’ll see the Magrittr pipe a lot out in the world.\n\n\n\nWith the Base R pipe, you can only pass an object to the first argument in a function. This is fine for most tidyverse pipelines, where the first argument is usually (implicitly) the data. But it does mean that most Base R functions will continue not to be easily piped, as most of them do not follow the convention of passing the current data as the first argument"
  },
  {
    "objectID": "slides/02-about-r.html#object-classes",
    "href": "slides/02-about-r.html#object-classes",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Object classes",
    "text": "Object classes\nObjects can have more than one (nested) class:\n\nsummary(my_numbers)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   1.500   3.000   5.714   4.000  25.000 \n\nmy_smry &lt;- summary(my_numbers) # remember, outputs can be assigned to a name, creating an object\n\nclass(summary(my_numbers)) # functions can be nested, and are evaluated from the inside out\n\n[1] \"summaryDefault\" \"table\"         \n\nclass(my_smry) # equivalent to the previous line\n\n[1] \"summaryDefault\" \"table\""
  },
  {
    "objectID": "slides/02-about-r.html#object-classes-1",
    "href": "slides/02-about-r.html#object-classes-1",
    "title": "Data Visualization - 2. Finding your way in R",
    "section": "Object classes",
    "text": "Object classes\n\ntypeof(my_smry)\n\n[1] \"double\"\n\nattributes(my_smry)\n\n$names\n[1] \"Min.\"    \"1st Qu.\" \"Median\"  \"Mean\"    \"3rd Qu.\" \"Max.\"   \n\n$class\n[1] \"summaryDefault\" \"table\"         \n\n## In this case, the functions extract the corresponding attribute\nclass(my_smry)\n\n[1] \"summaryDefault\" \"table\"         \n\nnames(my_smry)\n\n[1] \"Min.\"    \"1st Qu.\" \"Median\"  \"Mean\"    \"3rd Qu.\" \"Max.\""
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Slides",
    "section": "",
    "text": "01 Looking at Data (1)\n01 Looking at Data (2)\n02 About R\n03 Make a Graph\n04 Show the Right Numbers\n05 Work with dplyr and Geoms\n06 Work with Models\n07 Make Maps (1)\n07 Make Maps (2)\n08 Polishing and Presenting Plots\n09 Case Studies"
  },
  {
    "objectID": "slides/03-make-a-graph.html#load-our-libraries",
    "href": "slides/03-make-a-graph.html#load-our-libraries",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Load our libraries",
    "text": "Load our libraries\n\nlibrary(here)      # manage file paths\nlibrary(socviz)    # data and some useful functions\nlibrary(tidyverse) # your friend and mine\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(gapminder) # some data"
  },
  {
    "objectID": "slides/03-make-a-graph.html#nearly-done-with-the-scaffolding",
    "href": "slides/03-make-a-graph.html#nearly-done-with-the-scaffolding",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Nearly done with the scaffolding",
    "text": "Nearly done with the scaffolding\n\n✅ Thought about elements of visualization\n✅ Gotten oriented to R and RStudio\n✅ Knitted a document\n✅ Written a bit of ggplot code"
  },
  {
    "objectID": "slides/03-make-a-graph.html#nearly-done-with-the-scaffolding-1",
    "href": "slides/03-make-a-graph.html#nearly-done-with-the-scaffolding-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Nearly done with the scaffolding",
    "text": "Nearly done with the scaffolding\n\n✅ Thought about elements of visualization\n✅ Gotten oriented to R and RStudio\n✅ Knitted a document\n✅ Written a bit of ggplot code\n⬜ Get my data in to R\n⬜ Make a plot with it"
  },
  {
    "objectID": "slides/03-make-a-graph.html#feed-ggplot-tidy-data",
    "href": "slides/03-make-a-graph.html#feed-ggplot-tidy-data",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Feed ggplot tidy data",
    "text": "Feed ggplot tidy data"
  },
  {
    "objectID": "slides/03-make-a-graph.html#what-is-tidy-data",
    "href": "slides/03-make-a-graph.html#what-is-tidy-data",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "What is tidy data?",
    "text": "What is tidy data?\n\nTidy data"
  },
  {
    "objectID": "slides/03-make-a-graph.html#what-is-tidy-data-1",
    "href": "slides/03-make-a-graph.html#what-is-tidy-data-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "What is tidy data?",
    "text": "What is tidy data?\n\nTidy data is in long format"
  },
  {
    "objectID": "slides/03-make-a-graph.html#every-column-is-a-single-variable",
    "href": "slides/03-make-a-graph.html#every-column-is-a-single-variable",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Every column is a single variable",
    "text": "Every column is a single variable\n\nGrolemund & Wickham"
  },
  {
    "objectID": "slides/03-make-a-graph.html#every-row-is-a-single-observation",
    "href": "slides/03-make-a-graph.html#every-row-is-a-single-observation",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Every row is a single observation",
    "text": "Every row is a single observation\n\nGrolemund & Wickham"
  },
  {
    "objectID": "slides/03-make-a-graph.html#every-cell-is-a-single-value",
    "href": "slides/03-make-a-graph.html#every-cell-is-a-single-value",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Every cell is a single value",
    "text": "Every cell is a single value\n\nGrolemund & Wickham"
  },
  {
    "objectID": "slides/03-make-a-graph.html#get-your-data-into-long-format",
    "href": "slides/03-make-a-graph.html#get-your-data-into-long-format",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Get your data into long format",
    "text": "Get your data into long format\nVery, very often, the solution to some data-wrangling or data visualization problem in a Tidyverse-focused workflow is:"
  },
  {
    "objectID": "slides/03-make-a-graph.html#get-your-data-into-long-format-1",
    "href": "slides/03-make-a-graph.html#get-your-data-into-long-format-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Get your data into long format",
    "text": "Get your data into long format\nVery, very often, the solution to some data-wrangling or data visualization problem in a Tidyverse-focused workflow is:\n\nFirst, get the data into long format\n\n\nThen do the thing you want."
  },
  {
    "objectID": "slides/03-make-a-graph.html#untidy-data-exists-for-good-reasons",
    "href": "slides/03-make-a-graph.html#untidy-data-exists-for-good-reasons",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Untidy data exists for good reasons",
    "text": "Untidy data exists for good reasons\nStoring and printing data in long format entails a lot of repetition:\n\nlibrary(palmerpenguins)\npenguins |&gt; \n  group_by(species, island, year) |&gt; \n  summarize(bill = round(mean(bill_length_mm, na.rm = TRUE),2)) |&gt; \n  knitr::kable()\n\n\n\n\nspecies\nisland\nyear\nbill\n\n\n\n\nAdelie\nBiscoe\n2007\n38.32\n\n\nAdelie\nBiscoe\n2008\n38.70\n\n\nAdelie\nBiscoe\n2009\n39.69\n\n\nAdelie\nDream\n2007\n39.10\n\n\nAdelie\nDream\n2008\n38.19\n\n\nAdelie\nDream\n2009\n38.15\n\n\nAdelie\nTorgersen\n2007\n38.80\n\n\nAdelie\nTorgersen\n2008\n38.77\n\n\nAdelie\nTorgersen\n2009\n39.31\n\n\nChinstrap\nDream\n2007\n48.72\n\n\nChinstrap\nDream\n2008\n48.70\n\n\nChinstrap\nDream\n2009\n49.05\n\n\nGentoo\nBiscoe\n2007\n47.01\n\n\nGentoo\nBiscoe\n2008\n46.94\n\n\nGentoo\nBiscoe\n2009\n48.50"
  },
  {
    "objectID": "slides/03-make-a-graph.html#untidy-data-exists-for-good-reasons-1",
    "href": "slides/03-make-a-graph.html#untidy-data-exists-for-good-reasons-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Untidy data exists for good reasons",
    "text": "Untidy data exists for good reasons\nA wide format is easier and more efficient to read in print:\n\npenguins |&gt; \n  group_by(species, island, year) |&gt; \n  summarize(bill = round(mean(bill_length_mm, na.rm = TRUE), 2)) |&gt; \n  pivot_wider(names_from = year, values_from = bill) |&gt; \n  knitr::kable()\n\n\n\n\nspecies\nisland\n2007\n2008\n2009\n\n\n\n\nAdelie\nBiscoe\n38.32\n38.70\n39.69\n\n\nAdelie\nDream\n39.10\n38.19\n38.15\n\n\nAdelie\nTorgersen\n38.80\n38.77\n39.31\n\n\nChinstrap\nDream\n48.72\n48.70\n49.05\n\n\nGentoo\nBiscoe\n47.01\n46.94\n48.50"
  },
  {
    "objectID": "slides/03-make-a-graph.html#but-also-for-less-good-reasons",
    "href": "slides/03-make-a-graph.html#but-also-for-less-good-reasons",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "But also for less good reasons",
    "text": "But also for less good reasons\n\nSpot the untidiness"
  },
  {
    "objectID": "slides/03-make-a-graph.html#but-also-for-less-good-reasons-1",
    "href": "slides/03-make-a-graph.html#but-also-for-less-good-reasons-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "But also for less good reasons",
    "text": "But also for less good reasons\n\n\n\n\n\nSpot the untidiness\n\n\n\n\n😠 More than one header row\n😡 Mixed data types in some columns\n💀 Color and typography used to encode variables and their values"
  },
  {
    "objectID": "slides/03-make-a-graph.html#fix-it-before-you-import-it",
    "href": "slides/03-make-a-graph.html#fix-it-before-you-import-it",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Fix it before you import it",
    "text": "Fix it before you import it\nPrevention is better than cure!\nAn excellent article by Karl Broman and Kara Woo:\n\nBroman KW, Woo KH (2018) “Data Organization in Spreadsheets”.” The American Statistician 78:2–10\n\n\nData organization in spreadsheets"
  },
  {
    "objectID": "slides/03-make-a-graph.html#the-most-common-tidyr-operation",
    "href": "slides/03-make-a-graph.html#the-most-common-tidyr-operation",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "The most common tidyr operation",
    "text": "The most common tidyr operation\nPivoting from wide to long:\n\nedu\n\n# A tibble: 366 × 11\n   age   sex    year total elem4 elem8   hs3   hs4 coll3 coll4 median\n   &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 25-34 Male   2016 21845   116   468  1427  6386  6015  7432     NA\n 2 25-34 Male   2015 21427   166   488  1584  6198  5920  7071     NA\n 3 25-34 Male   2014 21217   151   512  1611  6323  5910  6710     NA\n 4 25-34 Male   2013 20816   161   582  1747  6058  5749  6519     NA\n 5 25-34 Male   2012 20464   161   579  1707  6127  5619  6270     NA\n 6 25-34 Male   2011 20985   190   657  1791  6444  5750  6151     NA\n 7 25-34 Male   2010 20689   186   641  1866  6458  5587  5951     NA\n 8 25-34 Male   2009 20440   184   695  1806  6495  5508  5752     NA\n 9 25-34 Male   2008 20210   172   714  1874  6356  5277  5816     NA\n10 25-34 Male   2007 20024   246   757  1930  6361  5137  5593     NA\n# ℹ 356 more rows\n\n\nHere, a “Level of Schooling Attained” variable is spread across the columns, from elem4 to coll4. We need a key column called “education” with the various levels of schooling, and a corresponding value column containing the counts."
  },
  {
    "objectID": "slides/03-make-a-graph.html#wide-to-long-with-pivot_longer",
    "href": "slides/03-make-a-graph.html#wide-to-long-with-pivot_longer",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Wide to long with pivot_longer()",
    "text": "Wide to long with pivot_longer()\nWe’re going to put the columns elem4:coll4 into a new column, creating a new categorical measure named education. The numbers currently under each column will become a new value column corresponding to that level of education.\n\nedu |&gt; \n  pivot_longer(elem4:coll4, names_to = \"education\")\n\n# A tibble: 2,196 × 7\n   age   sex    year total median education value\n   &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt;  &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;\n 1 25-34 Male   2016 21845     NA elem4       116\n 2 25-34 Male   2016 21845     NA elem8       468\n 3 25-34 Male   2016 21845     NA hs3        1427\n 4 25-34 Male   2016 21845     NA hs4        6386\n 5 25-34 Male   2016 21845     NA coll3      6015\n 6 25-34 Male   2016 21845     NA coll4      7432\n 7 25-34 Male   2015 21427     NA elem4       166\n 8 25-34 Male   2015 21427     NA elem8       488\n 9 25-34 Male   2015 21427     NA hs3        1584\n10 25-34 Male   2015 21427     NA hs4        6198\n# ℹ 2,186 more rows"
  },
  {
    "objectID": "slides/03-make-a-graph.html#wide-to-long-with-pivot_longer-1",
    "href": "slides/03-make-a-graph.html#wide-to-long-with-pivot_longer-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Wide to long with pivot_longer()",
    "text": "Wide to long with pivot_longer()\nWe can name the value column to whatever we like. Here it’s a number of people.\n\nedu |&gt; \n  pivot_longer(elem4:coll4, \n               names_to = \"education\", \n               values_to = \"n\")\n\n# A tibble: 2,196 × 7\n   age   sex    year total median education     n\n   &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt;  &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;\n 1 25-34 Male   2016 21845     NA elem4       116\n 2 25-34 Male   2016 21845     NA elem8       468\n 3 25-34 Male   2016 21845     NA hs3        1427\n 4 25-34 Male   2016 21845     NA hs4        6386\n 5 25-34 Male   2016 21845     NA coll3      6015\n 6 25-34 Male   2016 21845     NA coll4      7432\n 7 25-34 Male   2015 21427     NA elem4       166\n 8 25-34 Male   2015 21427     NA elem8       488\n 9 25-34 Male   2015 21427     NA hs3        1584\n10 25-34 Male   2015 21427     NA hs4        6198\n# ℹ 2,186 more rows"
  },
  {
    "objectID": "slides/03-make-a-graph.html#reading-in-csv-files",
    "href": "slides/03-make-a-graph.html#reading-in-csv-files",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Reading in CSV files",
    "text": "Reading in CSV files\n\nBase R has read.csv()\nCorresponding tidyverse “underscored” version: read_csv().\nIt is pickier and more talkative than the Base R version. Use it instead."
  },
  {
    "objectID": "slides/03-make-a-graph.html#wheres-my-data-using-here",
    "href": "slides/03-make-a-graph.html#wheres-my-data-using-here",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Where’s my data? Using here()",
    "text": "Where’s my data? Using here()\n\nIf we’re loading a file, it’s coming from somewhere.\nIf it’s a file on our hard drive somewhere, we will need to interact with the file system. We should try to do this in a way that avoids absolute file paths.\n\n# This is not portable!\ndf &lt;- read_csv(\"/Users/kjhealy/Documents/data/misc/project/data/mydata.csv\")\n\nWe should also do it in a way that is platform independent.\nThis makes it easier to share your work, move it around, etc. Projects should be self-contained."
  },
  {
    "objectID": "slides/03-make-a-graph.html#wheres-my-data-using-here-1",
    "href": "slides/03-make-a-graph.html#wheres-my-data-using-here-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Where’s my data? Using here()",
    "text": "Where’s my data? Using here()\nThe here package, and here() function builds paths relative to the top level of your R project.\n\nhere() # this path will be different for you\n\n[1] \"/Users/kjhealy/Documents/courses/data_visualization\""
  },
  {
    "objectID": "slides/03-make-a-graph.html#wheres-the-data-using-here",
    "href": "slides/03-make-a-graph.html#wheres-the-data-using-here",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Where’s the data? Using here()",
    "text": "Where’s the data? Using here()\nThis seminar’s files all live in an RStudio project. It looks like this:\n\n\n\n/Users/kjhealy/Documents/courses/data_visualization\n├── 00_dummy_files\n├── LICENSE\n├── Makefile\n├── README.md\n├── README.qmd\n├── _extensions\n├── _freeze\n├── _quarto.yml\n├── _site\n├── _targets\n├── _targets.R\n├── _variables.yml\n├── code\n├── course_notes.qmd\n├── data\n├── data_visualization.Rproj\n├── deploy.sh\n├── docs\n├── figures\n├── html\n├── index.html\n├── index.qmd\n├── pdf_slides\n├── site_libs\n└── slides\n\n\n\nI want to load files from the data folder, but I also want you to be able to load them. I’m writing this from somewhere deep in the slides folder, but you won’t be there. Also, I’m on a Mac, but you may not be."
  },
  {
    "objectID": "slides/03-make-a-graph.html#wheres-the-data-using-here-1",
    "href": "slides/03-make-a-graph.html#wheres-the-data-using-here-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Where’s the data? Using here()",
    "text": "Where’s the data? Using here()\nSo:\n\n## Load the file relative to the path from the top of the project, without separators, etc\norgans &lt;- read_csv(file = here(\"data\", \"organdonation.csv\"))"
  },
  {
    "objectID": "slides/03-make-a-graph.html#wheres-the-data-using-here-2",
    "href": "slides/03-make-a-graph.html#wheres-the-data-using-here-2",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Where’s the data? Using here()",
    "text": "Where’s the data? Using here()\n\norgans\n\n# A tibble: 238 × 21\n   country  year donors   pop pop.dens   gdp gdp.lag health health.lag pubhealth\n   &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;\n 1 Austra…    NA  NA    17065    0.220 16774   16591   1300       1224       4.8\n 2 Austra…  1991  12.1  17284    0.223 17171   16774   1379       1300       5.4\n 3 Austra…  1992  12.4  17495    0.226 17914   17171   1455       1379       5.4\n 4 Austra…  1993  12.5  17667    0.228 18883   17914   1540       1455       5.4\n 5 Austra…  1994  10.2  17855    0.231 19849   18883   1626       1540       5.4\n 6 Austra…  1995  10.2  18072    0.233 21079   19849   1737       1626       5.5\n 7 Austra…  1996  10.6  18311    0.237 21923   21079   1846       1737       5.6\n 8 Austra…  1997  10.3  18518    0.239 22961   21923   1948       1846       5.7\n 9 Austra…  1998  10.5  18711    0.242 24148   22961   2077       1948       5.9\n10 Austra…  1999   8.67 18926    0.244 25445   24148   2231       2077       6.1\n# ℹ 228 more rows\n# ℹ 11 more variables: roads &lt;dbl&gt;, cerebvas &lt;dbl&gt;, assault &lt;dbl&gt;,\n#   external &lt;dbl&gt;, txp.pop &lt;dbl&gt;, world &lt;chr&gt;, opt &lt;chr&gt;, consent.law &lt;chr&gt;,\n#   consent.practice &lt;chr&gt;, consistent &lt;chr&gt;, ccode &lt;chr&gt;\n\n\nAnd there it is."
  },
  {
    "objectID": "slides/03-make-a-graph.html#read_csv-has-variants",
    "href": "slides/03-make-a-graph.html#read_csv-has-variants",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "read_csv() has variants",
    "text": "read_csv() has variants\n\nread_csv() Field separator is a comma: ,\n\n\norgans &lt;- read_csv(file = here(\"data\", \"organdonation.csv\"))\n\n\nread_csv2() Field separator is a semicolon: ;\n\n# Example only\nmy_data &lt;- read_csv2(file = here(\"data\", \"my_euro_file.csv))\nBoth are special cases of read_delim()"
  },
  {
    "objectID": "slides/03-make-a-graph.html#other-species-are-also-catered-to",
    "href": "slides/03-make-a-graph.html#other-species-are-also-catered-to",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Other species are also catered to",
    "text": "Other species are also catered to\n\nread_tsv() Tab separated.\nread_fwf() Fixed-width files.\nread_log() Log files (i.e. computer log files).\nread_lines() Just read in lines, without trying to parse them."
  },
  {
    "objectID": "slides/03-make-a-graph.html#also-often-useful",
    "href": "slides/03-make-a-graph.html#also-often-useful",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Also often useful …",
    "text": "Also often useful …\n\nread_table()\n\nFor data that’s separated by one (or more) columns of space."
  },
  {
    "objectID": "slides/03-make-a-graph.html#and-for-foreign-file-formats",
    "href": "slides/03-make-a-graph.html#and-for-foreign-file-formats",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "And for foreign file formats …",
    "text": "And for foreign file formats …\nThe haven package provides\n\nread_dta() Stata\nread_spss() SPSS\nread_sas() SAS\nread_xpt() SAS Transport\n\nMake these functions available with library(haven)"
  },
  {
    "objectID": "slides/03-make-a-graph.html#you-can-read-files-remotely-too",
    "href": "slides/03-make-a-graph.html#you-can-read-files-remotely-too",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "You can read files remotely, too",
    "text": "You can read files remotely, too\n\nYou can give these functions local files, or they can also be pointed at URLs.\nCompressed files (.zip, .tar.gz) will be automatically uncompressed.\n(Be careful what you download from remote locations!)\n\n\norgan_remote &lt;- read_csv(\"http://kjhealy.co/organdonation.csv\")\norgan_remote\n\n# A tibble: 238 × 21\n   country  year donors   pop pop.dens   gdp gdp.lag health health.lag pubhealth\n   &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;\n 1 Austra…    NA  NA    17065    0.220 16774   16591   1300       1224       4.8\n 2 Austra…  1991  12.1  17284    0.223 17171   16774   1379       1300       5.4\n 3 Austra…  1992  12.4  17495    0.226 17914   17171   1455       1379       5.4\n 4 Austra…  1993  12.5  17667    0.228 18883   17914   1540       1455       5.4\n 5 Austra…  1994  10.2  17855    0.231 19849   18883   1626       1540       5.4\n 6 Austra…  1995  10.2  18072    0.233 21079   19849   1737       1626       5.5\n 7 Austra…  1996  10.6  18311    0.237 21923   21079   1846       1737       5.6\n 8 Austra…  1997  10.3  18518    0.239 22961   21923   1948       1846       5.7\n 9 Austra…  1998  10.5  18711    0.242 24148   22961   2077       1948       5.9\n10 Austra…  1999   8.67 18926    0.244 25445   24148   2231       2077       6.1\n# ℹ 228 more rows\n# ℹ 11 more variables: roads &lt;dbl&gt;, cerebvas &lt;dbl&gt;, assault &lt;dbl&gt;,\n#   external &lt;dbl&gt;, txp.pop &lt;dbl&gt;, world &lt;chr&gt;, opt &lt;chr&gt;, consent.law &lt;chr&gt;,\n#   consent.practice &lt;chr&gt;, consistent &lt;chr&gt;, ccode &lt;chr&gt;"
  },
  {
    "objectID": "slides/03-make-a-graph.html#what-we-need-our-code-to-make",
    "href": "slides/03-make-a-graph.html#what-we-need-our-code-to-make",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "What we need our code to make",
    "text": "What we need our code to make\n\n\n\n\n\nData represented by visual elements;\nlike position, length, color, and size;\nEach measured on some scale;\nEach scale with a labeled guide;\nWith the plot itself also titled and labeled."
  },
  {
    "objectID": "slides/03-make-a-graph.html#heres-the-whole-thing-start-to-finish",
    "href": "slides/03-make-a-graph.html#heres-the-whole-thing-start-to-finish",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Here’s the whole thing, start to finish",
    "text": "Here’s the whole thing, start to finish\n\nFlow of action"
  },
  {
    "objectID": "slides/03-make-a-graph.html#well-go-through-it-step-by-step",
    "href": "slides/03-make-a-graph.html#well-go-through-it-step-by-step",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "We’ll go through it step by step",
    "text": "We’ll go through it step by step\n\nFlow of action"
  },
  {
    "objectID": "slides/03-make-a-graph.html#ggplots-flow-of-action-1",
    "href": "slides/03-make-a-graph.html#ggplots-flow-of-action-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "ggplot’s flow of action",
    "text": "ggplot’s flow of action\n\nWhat we start with"
  },
  {
    "objectID": "slides/03-make-a-graph.html#ggplots-flow-of-action-2",
    "href": "slides/03-make-a-graph.html#ggplots-flow-of-action-2",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "ggplot’s flow of action",
    "text": "ggplot’s flow of action\n\nWhere we’re going"
  },
  {
    "objectID": "slides/03-make-a-graph.html#ggplots-flow-of-action-3",
    "href": "slides/03-make-a-graph.html#ggplots-flow-of-action-3",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "ggplot’s flow of action",
    "text": "ggplot’s flow of action\n\nCore steps"
  },
  {
    "objectID": "slides/03-make-a-graph.html#ggplots-flow-of-action-4",
    "href": "slides/03-make-a-graph.html#ggplots-flow-of-action-4",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "ggplot’s flow of action",
    "text": "ggplot’s flow of action\n\nOptional steps"
  },
  {
    "objectID": "slides/03-make-a-graph.html#ggplots-flow-of-action-required",
    "href": "slides/03-make-a-graph.html#ggplots-flow-of-action-required",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "ggplot’s flow of action: required",
    "text": "ggplot’s flow of action: required\n\nTidy data"
  },
  {
    "objectID": "slides/03-make-a-graph.html#ggplots-flow-of-action-required-1",
    "href": "slides/03-make-a-graph.html#ggplots-flow-of-action-required-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "ggplot’s flow of action: required",
    "text": "ggplot’s flow of action: required\n\nAesthetic mappings"
  },
  {
    "objectID": "slides/03-make-a-graph.html#ggplots-flow-of-action-required-2",
    "href": "slides/03-make-a-graph.html#ggplots-flow-of-action-required-2",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "ggplot’s flow of action: required",
    "text": "ggplot’s flow of action: required\n\nGeom"
  },
  {
    "objectID": "slides/03-make-a-graph.html#start-with-the-data",
    "href": "slides/03-make-a-graph.html#start-with-the-data",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Start with the data",
    "text": "Start with the data\n\ngapminder\n\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   &lt;fct&gt;       &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows\n\n\n\ndim(gapminder)\n\n[1] 1704    6"
  },
  {
    "objectID": "slides/03-make-a-graph.html#create-a-plot-object",
    "href": "slides/03-make-a-graph.html#create-a-plot-object",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Create a plot object",
    "text": "Create a plot object\nData is the gapminder tibble.\n\np &lt;- ggplot(data = gapminder)"
  },
  {
    "objectID": "slides/03-make-a-graph.html#map-variables-to-aesthetics",
    "href": "slides/03-make-a-graph.html#map-variables-to-aesthetics",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Map variables to aesthetics",
    "text": "Map variables to aesthetics\nTell ggplot the variables you want represented by visual elements on the plot\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))"
  },
  {
    "objectID": "slides/03-make-a-graph.html#map-variables-to-aesthetics-1",
    "href": "slides/03-make-a-graph.html#map-variables-to-aesthetics-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Map variables to aesthetics",
    "text": "Map variables to aesthetics\nThe mapping = aes(...) call links variables to things you will see on the plot.\nx and y represent the quantities determining position on the x and y axes.\nOther aesthetic mappings can include, e.g., color, shape, size, and fill."
  },
  {
    "objectID": "slides/03-make-a-graph.html#p-has-data-and-mappings-but-no-geom",
    "href": "slides/03-make-a-graph.html#p-has-data-and-mappings-but-no-geom",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "p has data and mappings but no geom",
    "text": "p has data and mappings but no geom\n\np\n\n\nThis empty plot has no geoms."
  },
  {
    "objectID": "slides/03-make-a-graph.html#add-a-geom",
    "href": "slides/03-make-a-graph.html#add-a-geom",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Add a geom",
    "text": "Add a geom\n\np + geom_point() \n\n\nA scatterplot of Life Expectancy vs GDP"
  },
  {
    "objectID": "slides/03-make-a-graph.html#try-a-different-geom",
    "href": "slides/03-make-a-graph.html#try-a-different-geom",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Try a different geom",
    "text": "Try a different geom\n\np + geom_smooth() \n\n\nA scatterplot of Life Expectancy vs GDP"
  },
  {
    "objectID": "slides/03-make-a-graph.html#build-your-plots-layer-by-layer",
    "href": "slides/03-make-a-graph.html#build-your-plots-layer-by-layer",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Build your plots layer by layer",
    "text": "Build your plots layer by layer\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y=lifeExp))\np + geom_smooth()\n\n\nLife Expectancy vs GDP, using a smoother."
  },
  {
    "objectID": "slides/03-make-a-graph.html#this-process-is-additive",
    "href": "slides/03-make-a-graph.html#this-process-is-additive",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "This process is additive",
    "text": "This process is additive\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y=lifeExp))"
  },
  {
    "objectID": "slides/03-make-a-graph.html#this-process-is-additive-1",
    "href": "slides/03-make-a-graph.html#this-process-is-additive-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "This process is additive",
    "text": "This process is additive\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y=lifeExp))\np + geom_smooth()"
  },
  {
    "objectID": "slides/03-make-a-graph.html#this-process-is-additive-2",
    "href": "slides/03-make-a-graph.html#this-process-is-additive-2",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "This process is additive",
    "text": "This process is additive\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y=lifeExp))\np + geom_smooth() +\n  geom_point()"
  },
  {
    "objectID": "slides/03-make-a-graph.html#every-geom-is-a-function",
    "href": "slides/03-make-a-graph.html#every-geom-is-a-function",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Every geom is a function",
    "text": "Every geom is a function\nFunctions take arguments\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\np + geom_point() + \n  geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "slides/03-make-a-graph.html#keep-layering",
    "href": "slides/03-make-a-graph.html#keep-layering",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Keep Layering",
    "text": "Keep Layering\n\n\n\n p &lt;- ggplot(data = gapminder,\n             mapping = aes(x = gdpPercap,\n                           y=lifeExp))"
  },
  {
    "objectID": "slides/03-make-a-graph.html#keep-layering-1",
    "href": "slides/03-make-a-graph.html#keep-layering-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Keep Layering",
    "text": "Keep Layering\n\n\n\n p &lt;- ggplot(data = gapminder,\n             mapping = aes(x = gdpPercap,\n                           y=lifeExp))\np + geom_point()"
  },
  {
    "objectID": "slides/03-make-a-graph.html#keep-layering-2",
    "href": "slides/03-make-a-graph.html#keep-layering-2",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Keep Layering",
    "text": "Keep Layering\n\n\n\n p &lt;- ggplot(data = gapminder,\n             mapping = aes(x = gdpPercap,\n                           y=lifeExp))\np + geom_point() +\n    geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "slides/03-make-a-graph.html#keep-layering-3",
    "href": "slides/03-make-a-graph.html#keep-layering-3",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Keep Layering",
    "text": "Keep Layering\n\n\n\n p &lt;- ggplot(data = gapminder,\n             mapping = aes(x = gdpPercap,\n                           y=lifeExp))\np + geom_point() +\n    geom_smooth(method = \"lm\") +\n    scale_x_log10()"
  },
  {
    "objectID": "slides/03-make-a-graph.html#fix-the-labels",
    "href": "slides/03-make-a-graph.html#fix-the-labels",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Fix the labels",
    "text": "Fix the labels\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y=lifeExp))"
  },
  {
    "objectID": "slides/03-make-a-graph.html#fix-the-labels-1",
    "href": "slides/03-make-a-graph.html#fix-the-labels-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Fix the labels",
    "text": "Fix the labels\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y=lifeExp))\np + geom_point()"
  },
  {
    "objectID": "slides/03-make-a-graph.html#fix-the-labels-2",
    "href": "slides/03-make-a-graph.html#fix-the-labels-2",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Fix the labels",
    "text": "Fix the labels\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y=lifeExp))\np + geom_point() +\n    geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "slides/03-make-a-graph.html#fix-the-labels-3",
    "href": "slides/03-make-a-graph.html#fix-the-labels-3",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Fix the labels",
    "text": "Fix the labels\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y=lifeExp))\np + geom_point() +\n    geom_smooth(method = \"lm\") +\n    scale_x_log10(labels = scales::label_dollar())"
  },
  {
    "objectID": "slides/03-make-a-graph.html#add-labels-title-and-caption",
    "href": "slides/03-make-a-graph.html#add-labels-title-and-caption",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Add labels, title, and caption",
    "text": "Add labels, title, and caption\n\n\np &lt;- ggplot(data = gapminder, \n            mapping = aes(x = gdpPercap, \n                          y = lifeExp))\np + geom_point() + \n  geom_smooth(method = \"lm\") +\n    scale_x_log10(labels = scales::label_dollar()) +\n    labs(x = \"GDP Per Capita\", \n         y = \"Life Expectancy in Years\",\n         title = \"Economic Growth and Life Expectancy\",\n         subtitle = \"Data points are country-years\",\n         caption = \"Source: Gapminder.\")"
  },
  {
    "objectID": "slides/03-make-a-graph.html#can-i-change-the-color-of-the-points",
    "href": "slides/03-make-a-graph.html#can-i-change-the-color-of-the-points",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "“Can I change the color of the points?”",
    "text": "“Can I change the color of the points?”\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp,\n                          color = \"purple\"))\n\n## Put in an object for convenience\np_out &lt;- p + geom_point() +\n    geom_smooth(method = \"loess\") +\n    scale_x_log10()"
  },
  {
    "objectID": "slides/03-make-a-graph.html#what-has-gone-wrong-here",
    "href": "slides/03-make-a-graph.html#what-has-gone-wrong-here",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "What has gone wrong here?",
    "text": "What has gone wrong here?\n\np_out"
  },
  {
    "objectID": "slides/03-make-a-graph.html#try-again",
    "href": "slides/03-make-a-graph.html#try-again",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Try again",
    "text": "Try again\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\n\n## Put in an object for convenience\np_out &lt;- p + geom_point(color = \"purple\") +\n    geom_smooth(method = \"loess\") +\n    scale_x_log10()"
  },
  {
    "objectID": "slides/03-make-a-graph.html#try-again-1",
    "href": "slides/03-make-a-graph.html#try-again-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Try again",
    "text": "Try again\n\np_out"
  },
  {
    "objectID": "slides/03-make-a-graph.html#geoms-can-take-many-arguments",
    "href": "slides/03-make-a-graph.html#geoms-can-take-many-arguments",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Geoms can take many arguments",
    "text": "Geoms can take many arguments\n\nHere we set color, size, and alpha. Meanwhile x and y are mapped.\nWe also give non-default values to some other arguments\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp)) \np_out &lt;- p + geom_point(alpha = 0.3) +\n    geom_smooth(color = \"orange\", \n                se = FALSE, \n                size = 8, \n                method = \"lm\") +\n    scale_x_log10()"
  },
  {
    "objectID": "slides/03-make-a-graph.html#geoms-can-take-many-arguments-1",
    "href": "slides/03-make-a-graph.html#geoms-can-take-many-arguments-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Geoms can take many arguments",
    "text": "Geoms can take many arguments\n\np_out"
  },
  {
    "objectID": "slides/03-make-a-graph.html#alpha-for-overplotting",
    "href": "slides/03-make-a-graph.html#alpha-for-overplotting",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "alpha for overplotting",
    "text": "alpha for overplotting\n\n\n\np &lt;- ggplot(data = gapminder, \n            mapping = aes(x = gdpPercap, \n                          y = lifeExp))\np + geom_point(alpha = 0.3) + \n  geom_smooth(method = \"lm\") +\n    scale_x_log10(labels = scales::label_dollar()) +\n    labs(x = \"GDP Per Capita\", \n         y = \"Life Expectancy in Years\",\n         title = \"Economic Growth and Life Expectancy\",\n         subtitle = \"Data points are country-years\",\n         caption = \"Source: Gapminder.\")"
  },
  {
    "objectID": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings",
    "href": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Geoms can take their own mappings",
    "text": "Geoms can take their own mappings\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp,\n                          color = continent,\n                          fill = continent))"
  },
  {
    "objectID": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-1",
    "href": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Geoms can take their own mappings",
    "text": "Geoms can take their own mappings\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp,\n                          color = continent,\n                          fill = continent))\np + geom_point()"
  },
  {
    "objectID": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-2",
    "href": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-2",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Geoms can take their own mappings",
    "text": "Geoms can take their own mappings\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp,\n                          color = continent,\n                          fill = continent))\np + geom_point() +\n    geom_smooth(method = \"loess\")"
  },
  {
    "objectID": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-3",
    "href": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-3",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Geoms can take their own mappings",
    "text": "Geoms can take their own mappings\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp,\n                          color = continent,\n                          fill = continent))\np + geom_point() +\n    geom_smooth(method = \"loess\") +\n    scale_x_log10(labels = scales::label_dollar())"
  },
  {
    "objectID": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-4",
    "href": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-4",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Geoms can take their own mappings",
    "text": "Geoms can take their own mappings\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))"
  },
  {
    "objectID": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-5",
    "href": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-5",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Geoms can take their own mappings",
    "text": "Geoms can take their own mappings\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\np + geom_point(mapping = aes(color = continent))"
  },
  {
    "objectID": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-6",
    "href": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-6",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Geoms can take their own mappings",
    "text": "Geoms can take their own mappings\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\np + geom_point(mapping = aes(color = continent)) +\n    geom_smooth(method = \"loess\")"
  },
  {
    "objectID": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-7",
    "href": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-7",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Geoms can take their own mappings",
    "text": "Geoms can take their own mappings\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\np + geom_point(mapping = aes(color = continent)) +\n    geom_smooth(method = \"loess\") +\n    scale_x_log10(labels = scales::label_dollar())"
  },
  {
    "objectID": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-8",
    "href": "slides/03-make-a-graph.html#geoms-can-take-their-own-mappings-8",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Geoms can take their own mappings",
    "text": "Geoms can take their own mappings\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\np + geom_point(mapping = aes(color = continent)) +\n    geom_smooth(method = \"loess\") +\n    scale_x_log10(labels = scales::label_dollar())"
  },
  {
    "objectID": "slides/03-make-a-graph.html#guides-and-scales-reflect-aes-mappings",
    "href": "slides/03-make-a-graph.html#guides-and-scales-reflect-aes-mappings",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Guides and scales reflect aes() mappings",
    "text": "Guides and scales reflect aes() mappings\n\n\n\nmapping = aes(color = continent, fill = continent)"
  },
  {
    "objectID": "slides/03-make-a-graph.html#guides-and-scales-reflect-aes-mappings-1",
    "href": "slides/03-make-a-graph.html#guides-and-scales-reflect-aes-mappings-1",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Guides and scales reflect aes() mappings",
    "text": "Guides and scales reflect aes() mappings\n\n\n\nmapping = aes(color = continent, fill = continent)\n\n\n\n\nmapping = aes(color = continent)"
  },
  {
    "objectID": "slides/03-make-a-graph.html#use-ggsave",
    "href": "slides/03-make-a-graph.html#use-ggsave",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Use ggsave()",
    "text": "Use ggsave()\n\n## Save the most recent plot\nggsave(filename = \"figures/my_figure.png\")\n\n## Use here() for more robust file paths\nggsave(filename = here(\"figures\", \"my_figure.png\"))\n\n## A plot object\np_out &lt;- p + geom_point(mapping = aes(color = log(pop))) +\n    scale_x_log10()\n\nggsave(filename = here(\"figures\", \"lifexp_vs_gdp_gradient.pdf\"), \n       plot = p_out)\n\nggsave(here(\"figures\", \"lifexp_vs_gdp_gradient.png\"), \n       plot = p_out, \n       width = 8, \n       height = 5)"
  },
  {
    "objectID": "slides/03-make-a-graph.html#in-code-chunks",
    "href": "slides/03-make-a-graph.html#in-code-chunks",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "In code chunks",
    "text": "In code chunks\nSet options in any chunk:\nRMarkdown Style\n{r, fig.height=8, fig.width=5, fig.show = \"hold\", fig.cap=\"A caption\"}\nQuarto Style\n#| fig.height=8 \n#| fig.width=5\n#| fig.show: \"hold\" \n#| fig.cap=\"A caption\""
  },
  {
    "objectID": "slides/03-make-a-graph.html#or-for-the-whole-document",
    "href": "slides/03-make-a-graph.html#or-for-the-whole-document",
    "title": "Data Visualization - 3. Make Some Graphs",
    "section": "Or for the whole document:",
    "text": "Or for the whole document:\n\nknitr::opts_chunk$set(warning = TRUE,\n                        message = TRUE,\n                        fig.retina = 3,\n                        fig.align = \"center\",\n                        fig.asp = 0.7,\n                        dev = c(\"png\", \"pdf\"))"
  },
  {
    "objectID": "slides/06-work-with-models.html#load-our-packages",
    "href": "slides/06-work-with-models.html#load-our-packages",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Load our packages",
    "text": "Load our packages\n\nlibrary(here)      # manage file paths\nlibrary(socviz)    # data and some useful functions\nlibrary(tidyverse) # your friend and mine\nlibrary(gapminder) # Everyone's favorite dataset\nlibrary(broom)     # Tidy model output\nlibrary(marginaleffects) # Tidy marginal effects\nlibrary(modelsummary) # Tidy summary tables and graphs\nlibrary(scales)    # Format our axes and guides\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor"
  },
  {
    "objectID": "slides/06-work-with-models.html#ggplot-can-work-with-models",
    "href": "slides/06-work-with-models.html#ggplot-can-work-with-models",
    "title": "Data Visualization - 6. Work With Models",
    "section": "ggplot can work with models",
    "text": "ggplot can work with models\n\nWe know because geoms often do calculations in the background, via their stat functions.\n\n\n\np &lt;- gapminder |&gt; \n  ggplot(mapping = aes(x = log(gdpPercap), \n                       y = lifeExp))  \n\np + geom_point(alpha=0.1) +\n  geom_smooth(color = \"tomato\", \n              fill=\"tomato\", \n              method = MASS::rlm) +\n  geom_smooth(color = \"steelblue\", \n              fill=\"steelblue\", \n              method = \"lm\") + \n  labs(title = \"Robust and OLS fits\")"
  },
  {
    "objectID": "slides/06-work-with-models.html#these-can-be-complex",
    "href": "slides/06-work-with-models.html#these-can-be-complex",
    "title": "Data Visualization - 6. Work With Models",
    "section": "These can be complex …",
    "text": "These can be complex …\n\n\np + geom_point(alpha=0.1) +\n    geom_smooth(color = \"tomato\", \n        method = \"lm\", \n        size = 1.2, \n        formula = y ~ splines::bs(x, 3), \n        se = FALSE)"
  },
  {
    "objectID": "slides/06-work-with-models.html#but-we-usually-wont-do-this-in-ggplot",
    "href": "slides/06-work-with-models.html#but-we-usually-wont-do-this-in-ggplot",
    "title": "Data Visualization - 6. Work With Models",
    "section": "… but we usually won’t do this in ggplot",
    "text": "… but we usually won’t do this in ggplot\n\n\np + geom_point(alpha=0.1) +\n    geom_quantile(color = \"tomato\", \n        size = 1.2, \n        method = \"rqss\",\n        lambda = 1, \n        quantiles = c(0.20, 0.5, 0.85))"
  },
  {
    "objectID": "slides/06-work-with-models.html#objects-are-to-do-list-bento-boxes",
    "href": "slides/06-work-with-models.html#objects-are-to-do-list-bento-boxes",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Objects are To-Do List Bento Boxes",
    "text": "Objects are To-Do List Bento Boxes\n\ngapminder\n\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   &lt;fct&gt;       &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows"
  },
  {
    "objectID": "slides/06-work-with-models.html#fit-a-model",
    "href": "slides/06-work-with-models.html#fit-a-model",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Fit a model",
    "text": "Fit a model\n\nout &lt;- lm(formula = lifeExp ~ gdpPercap + log(pop) + continent, \n          data = gapminder)\n\nsummary(out)\n\n\nCall:\nlm(formula = lifeExp ~ gdpPercap + log(pop) + continent, data = gapminder)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-47.490  -4.614   0.250   5.293  26.094 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       3.816e+01  2.050e+00  18.618  &lt; 2e-16 ***\ngdpPercap         4.557e-04  2.345e-05  19.435  &lt; 2e-16 ***\nlog(pop)          6.394e-01  1.329e-01   4.810 1.64e-06 ***\ncontinentAmericas 1.308e+01  6.063e-01  21.579  &lt; 2e-16 ***\ncontinentAsia     7.784e+00  5.810e-01  13.398  &lt; 2e-16 ***\ncontinentEurope   1.695e+01  6.350e-01  26.691  &lt; 2e-16 ***\ncontinentOceania  1.764e+01  1.779e+00   9.916  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.336 on 1697 degrees of freedom\nMultiple R-squared:  0.585, Adjusted R-squared:  0.5835 \nF-statistic: 398.7 on 6 and 1697 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "slides/06-work-with-models.html#poke-around-inside",
    "href": "slides/06-work-with-models.html#poke-around-inside",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Poke around inside",
    "text": "Poke around inside\n\nUse the Object Inspector to take a look"
  },
  {
    "objectID": "slides/06-work-with-models.html#behind-the-curtain",
    "href": "slides/06-work-with-models.html#behind-the-curtain",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Behind the curtain",
    "text": "Behind the curtain\n\npredict() and its methods do a lot of work behind the scenes\nWe won’t usually need to do this stuff manually. But the idea is that the generic predict() function has methods for specific sorts of models. Give it a model and some new data and it will produce predicted values for the new data. Here’s an example."
  },
  {
    "objectID": "slides/06-work-with-models.html#the-labor-intensive-way",
    "href": "slides/06-work-with-models.html#the-labor-intensive-way",
    "title": "Data Visualization - 6. Work With Models",
    "section": "The labor-intensive way",
    "text": "The labor-intensive way\n\nmin_gdp &lt;- min(gapminder$gdpPercap)\nmax_gdp &lt;- max(gapminder$gdpPercap)\nmed_pop &lt;- median(gapminder$pop)\n\n# Make a grid of predictor values\npred_df &lt;- expand_grid(gdpPercap = (seq(from = min_gdp,\n                                        to = max_gdp,\n                                        length.out = 100)),\n                       pop = med_pop,\n                       continent = c(\"Africa\", \"Americas\",\n                                     \"Asia\", \"Europe\", \"Oceania\"))\n\npred_df\n\n# A tibble: 500 × 3\n   gdpPercap      pop continent\n       &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;    \n 1      241. 7023596. Africa   \n 2      241. 7023596. Americas \n 3      241. 7023596. Asia     \n 4      241. 7023596. Europe   \n 5      241. 7023596. Oceania  \n 6     1385. 7023596. Africa   \n 7     1385. 7023596. Americas \n 8     1385. 7023596. Asia     \n 9     1385. 7023596. Europe   \n10     1385. 7023596. Oceania  \n# ℹ 490 more rows"
  },
  {
    "objectID": "slides/06-work-with-models.html#the-labor-intensive-way-1",
    "href": "slides/06-work-with-models.html#the-labor-intensive-way-1",
    "title": "Data Visualization - 6. Work With Models",
    "section": "The labor-intensive way",
    "text": "The labor-intensive way\n\n# Get the predicted values\npred_out &lt;- predict(object = out,\n                    newdata = pred_df,\n                    interval = \"confidence\")\nhead(pred_out)\n\n       fit      lwr      upr\n1 48.35388 47.67735 49.03041\n2 61.43646 60.43917 62.43375\n3 56.13821 55.22045 57.05597\n4 65.30361 64.21794 66.38927\n5 65.99517 62.55277 69.43757\n6 48.87530 48.20261 49.54799"
  },
  {
    "objectID": "slides/06-work-with-models.html#the-labor-intensive-way-2",
    "href": "slides/06-work-with-models.html#the-labor-intensive-way-2",
    "title": "Data Visualization - 6. Work With Models",
    "section": "The labor-intensive way",
    "text": "The labor-intensive way\n\n# Bind them into one data frame. We can do this safely\n# here because we know the row order by construction. \n# But this is not a safe approach in general.\n\npred_df &lt;- cbind(pred_df, pred_out)\nhead(pred_df)\n\n  gdpPercap     pop continent      fit      lwr      upr\n1  241.1659 7023596    Africa 48.35388 47.67735 49.03041\n2  241.1659 7023596  Americas 61.43646 60.43917 62.43375\n3  241.1659 7023596      Asia 56.13821 55.22045 57.05597\n4  241.1659 7023596    Europe 65.30361 64.21794 66.38927\n5  241.1659 7023596   Oceania 65.99517 62.55277 69.43757\n6 1385.4282 7023596    Africa 48.87530 48.20261 49.54799"
  },
  {
    "objectID": "slides/06-work-with-models.html#the-labor-intensive-way-3",
    "href": "slides/06-work-with-models.html#the-labor-intensive-way-3",
    "title": "Data Visualization - 6. Work With Models",
    "section": "The labor-intensive way",
    "text": "The labor-intensive way\n\n\np &lt;- ggplot(data = subset(pred_df, continent %in% c(\"Europe\", \"Africa\")),\n            aes(x = gdpPercap,\n                y = fit, \n                ymin = lwr, \n                ymax = upr,\n                color = continent,\n                fill = continent,\n                group = continent))\n\n# Use the original data as the point layer\np_out &lt;- p + geom_point(data = subset(gapminder,\n                             continent %in% c(\"Europe\", \"Africa\")),\n               mapping = aes(x = gdpPercap, y = lifeExp,\n                   color = continent),\n               alpha = 0.5,\n               inherit.aes = FALSE) + \n# And the predicted values to draw the lines  \n    geom_line() +\n    geom_ribbon(alpha = 0.2, color = FALSE) +\n    scale_x_log10(labels = scales::label_dollar())"
  },
  {
    "objectID": "slides/06-work-with-models.html#we-cant-do-anything-with-this",
    "href": "slides/06-work-with-models.html#we-cant-do-anything-with-this",
    "title": "Data Visualization - 6. Work With Models",
    "section": "We can’t do anything with this",
    "text": "We can’t do anything with this\n\nout &lt;- lm(formula = lifeExp ~ gdpPercap + log(pop) + continent, \n          data = gapminder)\n\nsummary(out)\n\n\nCall:\nlm(formula = lifeExp ~ gdpPercap + log(pop) + continent, data = gapminder)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-47.490  -4.614   0.250   5.293  26.094 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       3.816e+01  2.050e+00  18.618  &lt; 2e-16 ***\ngdpPercap         4.557e-04  2.345e-05  19.435  &lt; 2e-16 ***\nlog(pop)          6.394e-01  1.329e-01   4.810 1.64e-06 ***\ncontinentAmericas 1.308e+01  6.063e-01  21.579  &lt; 2e-16 ***\ncontinentAsia     7.784e+00  5.810e-01  13.398  &lt; 2e-16 ***\ncontinentEurope   1.695e+01  6.350e-01  26.691  &lt; 2e-16 ***\ncontinentOceania  1.764e+01  1.779e+00   9.916  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.336 on 1697 degrees of freedom\nMultiple R-squared:  0.585, Adjusted R-squared:  0.5835 \nF-statistic: 398.7 on 6 and 1697 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "slides/06-work-with-models.html#tidy-regression-output-with-broom",
    "href": "slides/06-work-with-models.html#tidy-regression-output-with-broom",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Tidy regression output with broom",
    "text": "Tidy regression output with broom\n\nlibrary(broom)\n\n\ntidy(out)\n\n# A tibble: 7 × 5\n  term               estimate std.error statistic   p.value\n  &lt;chr&gt;                 &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)       38.2      2.05          18.6  1.50e- 70\n2 gdpPercap          0.000456 0.0000234     19.4  3.98e- 76\n3 log(pop)           0.639    0.133          4.81 1.64e-  6\n4 continentAmericas 13.1      0.606         21.6  1.85e- 91\n5 continentAsia      7.78     0.581         13.4  5.52e- 39\n6 continentEurope   16.9      0.635         26.7  2.43e-131\n7 continentOceania  17.6      1.78           9.92 1.43e- 22\n\n\nThat’s a lot nicer. Now it’s just a tibble. We know those."
  },
  {
    "objectID": "slides/06-work-with-models.html#tidy-regression-output-with-broom-1",
    "href": "slides/06-work-with-models.html#tidy-regression-output-with-broom-1",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Tidy regression output with broom",
    "text": "Tidy regression output with broom\n\nout_conf &lt;- tidy(out, conf.int = TRUE)\nout_conf \n\n# A tibble: 7 × 7\n  term               estimate std.error statistic   p.value  conf.low conf.high\n  &lt;chr&gt;                 &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)       38.2      2.05          18.6  1.50e- 70 34.1      42.2     \n2 gdpPercap          0.000456 0.0000234     19.4  3.98e- 76  0.000410  0.000502\n3 log(pop)           0.639    0.133          4.81 1.64e-  6  0.379     0.900   \n4 continentAmericas 13.1      0.606         21.6  1.85e- 91 11.9      14.3     \n5 continentAsia      7.78     0.581         13.4  5.52e- 39  6.64      8.92    \n6 continentEurope   16.9      0.635         26.7  2.43e-131 15.7      18.2     \n7 continentOceania  17.6      1.78           9.92 1.43e- 22 14.2      21.1"
  },
  {
    "objectID": "slides/06-work-with-models.html#tidy-regression-output-with-broom-2",
    "href": "slides/06-work-with-models.html#tidy-regression-output-with-broom-2",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Tidy regression output with broom",
    "text": "Tidy regression output with broom\n\nout_conf |&gt; \n    filter(term %nin% \"(Intercept)\")  |&gt; \n    mutate(nicelabs = prefix_strip(term, \"continent\")) |&gt; \n    relocate(nicelabs)\n\n# A tibble: 6 × 8\n  nicelabs  term       estimate std.error statistic   p.value conf.low conf.high\n  &lt;chr&gt;     &lt;chr&gt;         &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;\n1 gdpPercap gdpPercap   4.56e-4 0.0000234     19.4  3.98e- 76  4.10e-4  0.000502\n2 log(Pop)  log(pop)    6.39e-1 0.133          4.81 1.64e-  6  3.79e-1  0.900   \n3 Americas  continent…  1.31e+1 0.606         21.6  1.85e- 91  1.19e+1 14.3     \n4 Asia      continent…  7.78e+0 0.581         13.4  5.52e- 39  6.64e+0  8.92    \n5 Europe    continent…  1.69e+1 0.635         26.7  2.43e-131  1.57e+1 18.2     \n6 Oceania   continent…  1.76e+1 1.78           9.92 1.43e- 22  1.42e+1 21.1"
  },
  {
    "objectID": "slides/06-work-with-models.html#tidy-regression-output-with-broom-3",
    "href": "slides/06-work-with-models.html#tidy-regression-output-with-broom-3",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Tidy regression output with broom",
    "text": "Tidy regression output with broom\n\n\nout_conf |&gt; \n    filter(term %nin% \"(Intercept)\") |&gt; \n    mutate(nicelabs = prefix_strip(term, \"continent\")) |&gt; \n  ggplot(mapping = aes(x = estimate, \n                       xmin = conf.low, \n                       xmax = conf.high, \n                       y = reorder(nicelabs, \n                                   estimate))) + \n  geom_pointrange() + \n  labs(x = \"Estimate\", \n       y = NULL, \n       title = \"Severely Misspecified\")"
  },
  {
    "objectID": "slides/06-work-with-models.html#three-ways-to-tidy",
    "href": "slides/06-work-with-models.html#three-ways-to-tidy",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Three ways to tidy",
    "text": "Three ways to tidy\n\nComponent level: tidy()"
  },
  {
    "objectID": "slides/06-work-with-models.html#three-ways-to-tidy-1",
    "href": "slides/06-work-with-models.html#three-ways-to-tidy-1",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Three ways to tidy",
    "text": "Three ways to tidy\n\nComponent level: tidy()\nObservation level: augment()"
  },
  {
    "objectID": "slides/06-work-with-models.html#three-ways-to-tidy-2",
    "href": "slides/06-work-with-models.html#three-ways-to-tidy-2",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Three ways to tidy",
    "text": "Three ways to tidy\n\nComponent level: tidy()\nObservation level: augment()\nModel level: glance()"
  },
  {
    "objectID": "slides/06-work-with-models.html#component-level",
    "href": "slides/06-work-with-models.html#component-level",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Component level",
    "text": "Component level\n\n&gt; summary(out)\n\nCall:\nlm(formula = lifeExp ~ gdpPercap + log(pop) + continent, data = gapminder)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-47.490  -4.614   0.250   5.293  26.094 \nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       3.816e+01  2.050e+00  18.618  &lt; 2e-16 ***\ngdpPercap         4.557e-04  2.345e-05  19.435  &lt; 2e-16 ***\nlog(pop)          6.394e-01  1.329e-01   4.810 1.64e-06 ***\ncontinentAmericas 1.308e+01  6.063e-01  21.579  &lt; 2e-16 ***\ncontinentAsia     7.784e+00  5.810e-01  13.398  &lt; 2e-16 ***\ncontinentEurope   1.695e+01  6.350e-01  26.691  &lt; 2e-16 ***\ncontinentOceania  1.764e+01  1.779e+00   9.916  &lt; 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\nResidual standard error: 8.336 on 1697 degrees of freedom\nMultiple R-squared:  0.585, Adjusted R-squared:  0.5835 \nF-statistic: 398.7 on 6 and 1697 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "slides/06-work-with-models.html#observation-level",
    "href": "slides/06-work-with-models.html#observation-level",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Observation level",
    "text": "Observation level\n\n&gt; summary(out)\n\nCall:\nlm(formula = lifeExp ~ gdpPercap + log(pop) + continent, data = gapminder)\nResiduals:\n    Min      1Q  Median      3Q     Max \n-47.490  -4.614   0.250   5.293  26.094 \n:::\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       3.816e+01  2.050e+00  18.618  &lt; 2e-16 ***\ngdpPercap         4.557e-04  2.345e-05  19.435  &lt; 2e-16 ***\nlog(pop)          6.394e-01  1.329e-01   4.810 1.64e-06 ***\ncontinentAmericas 1.308e+01  6.063e-01  21.579  &lt; 2e-16 ***\ncontinentAsia     7.784e+00  5.810e-01  13.398  &lt; 2e-16 ***\ncontinentEurope   1.695e+01  6.350e-01  26.691  &lt; 2e-16 ***\ncontinentOceania  1.764e+01  1.779e+00   9.916  &lt; 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\nResidual standard error: 8.336 on 1697 degrees of freedom\nMultiple R-squared:  0.585, Adjusted R-squared:  0.5835 \nF-statistic: 398.7 on 6 and 1697 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "slides/06-work-with-models.html#observation-level-1",
    "href": "slides/06-work-with-models.html#observation-level-1",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Observation level",
    "text": "Observation level\n\naugment(out)\n\n# A tibble: 1,704 × 10\n   lifeExp gdpPercap `log(pop)` continent .fitted .resid    .hat .sigma .cooksd\n     &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt; &lt;fct&gt;       &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n 1    28.8      779.       15.9 Asia         56.5  -27.7 0.00302   8.31 0.00479\n 2    30.3      821.       16.0 Asia         56.6  -26.2 0.00299   8.31 0.00426\n 3    32.0      853.       16.1 Asia         56.7  -24.7 0.00296   8.32 0.00372\n 4    34.0      836.       16.3 Asia         56.7  -22.7 0.00294   8.32 0.00313\n 5    36.1      740.       16.4 Asia         56.8  -20.7 0.00294   8.32 0.00259\n 6    38.4      786.       16.5 Asia         56.9  -18.4 0.00292   8.33 0.00205\n 7    39.9      978.       16.4 Asia         56.9  -17.0 0.00291   8.33 0.00174\n 8    40.8      852.       16.4 Asia         56.9  -16.0 0.00292   8.33 0.00155\n 9    41.7      649.       16.6 Asia         56.9  -15.2 0.00294   8.33 0.00140\n10    41.8      635.       16.9 Asia         57.1  -15.3 0.00297   8.33 0.00144\n# ℹ 1,694 more rows\n# ℹ 1 more variable: .std.resid &lt;dbl&gt;"
  },
  {
    "objectID": "slides/06-work-with-models.html#observation-level-2",
    "href": "slides/06-work-with-models.html#observation-level-2",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Observation level",
    "text": "Observation level\n\nFor OLS models:\n.fitted — The fitted values of the model.\n.se.fit — The standard errors of the fitted values.\n.resid — The residuals.\n.hat — The diagonal of the hat matrix.\n.sigma — An estimate of the residual standard deviation when the corresponding observation is dropped from the model.\n.cooksd — Cook’s distance, a common regression diagnostic.\n.std.resid — The standardized residuals."
  },
  {
    "objectID": "slides/06-work-with-models.html#observation-level-3",
    "href": "slides/06-work-with-models.html#observation-level-3",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Observation level",
    "text": "Observation level\n\n# Adding the data argument puts back any additional columns from the original\n# tibble\nout_aug &lt;-  augment(out, data = gapminder)\nhead(out_aug)\n\n# A tibble: 6 × 12\n  country continent  year lifeExp    pop gdpPercap .fitted .resid    .hat .sigma\n  &lt;fct&gt;   &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;  &lt;int&gt;     &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n1 Afghan… Asia       1952    28.8 8.43e6      779.    56.5  -27.7 0.00302   8.31\n2 Afghan… Asia       1957    30.3 9.24e6      821.    56.6  -26.2 0.00299   8.31\n3 Afghan… Asia       1962    32.0 1.03e7      853.    56.7  -24.7 0.00296   8.32\n4 Afghan… Asia       1967    34.0 1.15e7      836.    56.7  -22.7 0.00294   8.32\n5 Afghan… Asia       1972    36.1 1.31e7      740.    56.8  -20.7 0.00294   8.32\n6 Afghan… Asia       1977    38.4 1.49e7      786.    56.9  -18.4 0.00292   8.33\n# ℹ 2 more variables: .cooksd &lt;dbl&gt;, .std.resid &lt;dbl&gt;\n\n\n\n## Residuals vs Fitted Values\np &lt;- ggplot(data = out_aug,\n            mapping = aes(x = .fitted, y = .resid))\np_out &lt;- p + geom_point()"
  },
  {
    "objectID": "slides/06-work-with-models.html#model-level",
    "href": "slides/06-work-with-models.html#model-level",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Model level",
    "text": "Model level\n\n&gt; summary(out)\n\nCall:\nlm(formula = lifeExp ~ gdpPercap + log(pop) + continent, data = gapminder)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-47.490  -4.614   0.250   5.293  26.094 \nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       3.816e+01  2.050e+00  18.618  &lt; 2e-16 ***\ngdpPercap         4.557e-04  2.345e-05  19.435  &lt; 2e-16 ***\nlog(pop)          6.394e-01  1.329e-01   4.810 1.64e-06 ***\ncontinentAmericas 1.308e+01  6.063e-01  21.579  &lt; 2e-16 ***\ncontinentAsia     7.784e+00  5.810e-01  13.398  &lt; 2e-16 ***\ncontinentEurope   1.695e+01  6.350e-01  26.691  &lt; 2e-16 ***\ncontinentOceania  1.764e+01  1.779e+00   9.916  &lt; 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\nResidual standard error: 8.336 on 1697 degrees of freedom\nMultiple R-squared:  0.585, Adjusted R-squared:  0.5835 \nF-statistic: 398.7 on 6 and 1697 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "slides/06-work-with-models.html#model-level-1",
    "href": "slides/06-work-with-models.html#model-level-1",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Model level",
    "text": "Model level\n\nglance(out)\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic   p.value    df logLik    AIC    BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1     0.585         0.584  8.34      399. 1.01e-319     6 -6028. 12072. 12115.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;\n\n\nThe usefulness of glance() becomes clearer when dealing with ensembles of models."
  },
  {
    "objectID": "slides/06-work-with-models.html#a-kaplan-meier-curve",
    "href": "slides/06-work-with-models.html#a-kaplan-meier-curve",
    "title": "Data Visualization - 6. Work With Models",
    "section": "A Kaplan-Meier Curve",
    "text": "A Kaplan-Meier Curve\n\nlibrary(survival)\n\n\nhead(lung)\n\n  inst time status age sex ph.ecog ph.karno pat.karno meal.cal wt.loss\n1    3  306      2  74   1       1       90       100     1175      NA\n2    3  455      2  68   1       0       90        90     1225      15\n3    3 1010      1  56   1       0       90        90       NA      15\n4    5  210      2  57   1       1       90        60     1150      11\n5    1  883      2  60   1       0      100        90       NA       0\n6   12 1022      1  74   1       1       50        80      513       0\n\ntail(lung)\n\n    inst time status age sex ph.ecog ph.karno pat.karno meal.cal wt.loss\n223    1  116      2  76   1       1       80        80       NA       0\n224    1  188      1  77   1       1       80        60       NA       3\n225   13  191      1  39   1       0       90        90     2350      -5\n226   32  105      1  75   2       2       60        70     1025       5\n227    6  174      1  66   1       1       90       100     1075       1\n228   22  177      1  58   2       1       80        90     1060       0"
  },
  {
    "objectID": "slides/06-work-with-models.html#a-kaplan-meier-curve-1",
    "href": "slides/06-work-with-models.html#a-kaplan-meier-curve-1",
    "title": "Data Visualization - 6. Work With Models",
    "section": "A Kaplan-Meier Curve",
    "text": "A Kaplan-Meier Curve\nFirst we fit the model:\n\n## Hazard model\nout_cph &lt;- coxph(Surv(time, status) ~ age + sex, data = lung)\n\nsummary(out_cph)\n\nCall:\ncoxph(formula = Surv(time, status) ~ age + sex, data = lung)\n\n  n= 228, number of events= 165 \n\n         coef exp(coef)  se(coef)      z Pr(&gt;|z|)   \nage  0.017045  1.017191  0.009223  1.848  0.06459 . \nsex -0.513219  0.598566  0.167458 -3.065  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n    exp(coef) exp(-coef) lower .95 upper .95\nage    1.0172     0.9831    0.9990    1.0357\nsex    0.5986     1.6707    0.4311    0.8311\n\nConcordance= 0.603  (se = 0.025 )\nLikelihood ratio test= 14.12  on 2 df,   p=9e-04\nWald test            = 13.47  on 2 df,   p=0.001\nScore (logrank) test = 13.72  on 2 df,   p=0.001"
  },
  {
    "objectID": "slides/06-work-with-models.html#a-kaplan-meier-curve-2",
    "href": "slides/06-work-with-models.html#a-kaplan-meier-curve-2",
    "title": "Data Visualization - 6. Work With Models",
    "section": "A Kaplan-Meier Curve",
    "text": "A Kaplan-Meier Curve\nThen we create the survival curve, which is nearly tidy out of the box:\n\n## Hazard model\nout_surv &lt;- survfit(out_cph)\n\n## See how this is just a print method,\n## not a tibble, or even a data frame.\n## So it just runs off the end of the slide.\nsummary(out_surv)\n\nCall: survfit(formula = out_cph)\n\n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    5    228       1   0.9958 0.00417       0.9877        1.000\n   11    227       3   0.9833 0.00831       0.9671        1.000\n   12    224       1   0.9791 0.00928       0.9611        0.997\n   13    223       2   0.9706 0.01096       0.9494        0.992\n   15    221       1   0.9664 0.01170       0.9438        0.990\n   26    220       1   0.9622 0.01240       0.9382        0.987\n   30    219       1   0.9579 0.01305       0.9327        0.984\n   31    218       1   0.9537 0.01368       0.9273        0.981\n   53    217       2   0.9452 0.01484       0.9165        0.975\n   54    215       1   0.9409 0.01538       0.9112        0.972\n   59    214       1   0.9366 0.01590       0.9060        0.968\n   60    213       2   0.9280 0.01689       0.8955        0.962\n   61    211       1   0.9237 0.01735       0.8903        0.958\n   62    210       1   0.9194 0.01780       0.8852        0.955\n [ reached getOption(\"max.print\") -- omitted 125 rows ]"
  },
  {
    "objectID": "slides/06-work-with-models.html#a-kaplan-meier-curve-3",
    "href": "slides/06-work-with-models.html#a-kaplan-meier-curve-3",
    "title": "Data Visualization - 6. Work With Models",
    "section": "A Kaplan-Meier Curve",
    "text": "A Kaplan-Meier Curve\nThen we tidy it and draw the plot.\n\n## Much nicer. (See how the column headers have been regularized, too.)\nout_tidy &lt;- tidy(out_surv)\nout_tidy\n\n# A tibble: 186 × 8\n    time n.risk n.event n.censor estimate std.error conf.high conf.low\n   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1     5    228       1        0    0.996   0.00419     1        0.988\n 2    11    227       3        0    0.983   0.00845     1.00     0.967\n 3    12    224       1        0    0.979   0.00947     0.997    0.961\n 4    13    223       2        0    0.971   0.0113      0.992    0.949\n 5    15    221       1        0    0.966   0.0121      0.990    0.944\n 6    26    220       1        0    0.962   0.0129      0.987    0.938\n 7    30    219       1        0    0.958   0.0136      0.984    0.933\n 8    31    218       1        0    0.954   0.0143      0.981    0.927\n 9    53    217       2        0    0.945   0.0157      0.975    0.917\n10    54    215       1        0    0.941   0.0163      0.972    0.911\n# ℹ 176 more rows\n\np_out &lt;- out_tidy |&gt; \n  ggplot(mapping = aes(x = time, y = estimate)) + \n  geom_line() + \n  geom_ribbon(mapping = aes(ymin = conf.low, ymax = conf.high),\n              alpha = 0.4)"
  },
  {
    "objectID": "slides/06-work-with-models.html#iteration-without-tears-or-explicit-loops",
    "href": "slides/06-work-with-models.html#iteration-without-tears-or-explicit-loops",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Iteration without tears (or explicit loops)",
    "text": "Iteration without tears (or explicit loops)\n\nYou might be familiar with code that looks like this:\n\n\nx &lt;- 10\n\nfor (i in 1:5) {\n  print(x + i)\n}\n\n[1] 11\n[1] 12\n[1] 13\n[1] 14\n[1] 15\n\n\n\nThis is one way to do something repeatedly."
  },
  {
    "objectID": "slides/06-work-with-models.html#iteration-without-tears-or-explicit-loops-1",
    "href": "slides/06-work-with-models.html#iteration-without-tears-or-explicit-loops-1",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Iteration without tears (or explicit loops)",
    "text": "Iteration without tears (or explicit loops)\n\nWe can also write, e.g.,\n\n\nx &lt;- c(10, 20, 30, 40)\n\nfor (i in 1:length(x)) {\n  # Add 5 to the ith element of x\n  print(x[i] + 5)\n}\n\n[1] 15\n[1] 25\n[1] 35\n[1] 45\n\n\n\nThis way we can refer to each element of x in turn, and do the same thing do it."
  },
  {
    "objectID": "slides/06-work-with-models.html#iteration-without-tears-or-explicit-loops-2",
    "href": "slides/06-work-with-models.html#iteration-without-tears-or-explicit-loops-2",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Iteration without tears (or explicit loops)",
    "text": "Iteration without tears (or explicit loops)\n\nThe more complicated the thing we want to do, the more likely we are to use functions to help us out.\n\n\nx &lt;- 10\n\nfor (i in 1:5) {\n  print(sqrt(x + i))\n}\n\n[1] 3.316625\n[1] 3.464102\n[1] 3.605551\n[1] 3.741657\n[1] 3.872983"
  },
  {
    "objectID": "slides/06-work-with-models.html#isnt-this-like-vectorized-arithmetic",
    "href": "slides/06-work-with-models.html#isnt-this-like-vectorized-arithmetic",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Isn’t this like … Vectorized arithmetic?",
    "text": "Isn’t this like … Vectorized arithmetic?\n\nThe simplest cases are not that different from the vectorized arithmetic we saw before.\n\n\na &lt;- c(1:10)\n\nb &lt;- 1\n\n# You know what R will do here\na + b\n\n [1]  2  3  4  5  6  7  8  9 10 11"
  },
  {
    "objectID": "slides/06-work-with-models.html#isnt-this-like-vectorized-arithmetic-1",
    "href": "slides/06-work-with-models.html#isnt-this-like-vectorized-arithmetic-1",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Isn’t this like … Vectorized arithmetic?",
    "text": "Isn’t this like … Vectorized arithmetic?\n\nThe simplest cases are not that different from the vectorized arithmetic we saw before.\n\n\na &lt;- c(1:10)\n\nb &lt;- 1\n\n# You know what R will do here\na + b\n\n [1]  2  3  4  5  6  7  8  9 10 11\n\n\nR’s vectorized rules add b to every element of a. In a sense, the + operation can be thought of as a function that takes each element of a and does something with it. In this case “add b”."
  },
  {
    "objectID": "slides/06-work-with-models.html#repeatedly-applying-a-function",
    "href": "slides/06-work-with-models.html#repeatedly-applying-a-function",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Repeatedly applying a function",
    "text": "Repeatedly applying a function\nWe can make this explicit by writing a function:\n\na &lt;- c(1:10)\n\n\nadd_b &lt;- function(x) {\n  b &lt;- 1\n  x + b # for any x\n}\n\nNow:\n\nadd_b(x = a)\n\n [1]  2  3  4  5  6  7  8  9 10 11\n\n\nIn effect we take the vector a and feed it to the add_b() function one element at a time."
  },
  {
    "objectID": "slides/06-work-with-models.html#repeatedly-applying-a-function-1",
    "href": "slides/06-work-with-models.html#repeatedly-applying-a-function-1",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Repeatedly applying a function",
    "text": "Repeatedly applying a function\nAgain, R’s vectorized approach means it automatically applies add_b() to every element of the x we give it.\n\nadd_b(x = 10)\n\n[1] 11\n\n\n\nadd_b(x = c(1, 99, 1000))\n\n[1]    2  100 1001"
  },
  {
    "objectID": "slides/06-work-with-models.html#iterating-in-a-pipeline",
    "href": "slides/06-work-with-models.html#iterating-in-a-pipeline",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Iterating in a pipeline",
    "text": "Iterating in a pipeline\nSome operations can’t directly be vectorized in this way, most often because the function we want to apply only knows what to do if it is handed, say, a vector. It doesn’t understand what to do if it’s handed a list of vectors or a tibble of them, etc. This is when we might find ourselves manually iterating—writing out every single step explicitly.\n\nlibrary(gapminder)\ngapminder |&gt;  \n  summarize(country_n = n_distinct(country), \n            continent_n = n_distinct(continent), \n            year_n = n_distinct(year), \n            lifeExp_n = n_distinct(lifeExp), \n            population_n = n_distinct(population))\n\n# A tibble: 1 × 5\n  country_n continent_n year_n lifeExp_n population_n\n      &lt;int&gt;       &lt;int&gt;  &lt;int&gt;     &lt;int&gt;        &lt;int&gt;\n1       142           5     12      1626         4060\n\n\nThat’s tedious to write! Computers are supposed to allow us to avoid that sort of thing."
  },
  {
    "objectID": "slides/06-work-with-models.html#iterating-in-a-pipeline-1",
    "href": "slides/06-work-with-models.html#iterating-in-a-pipeline-1",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Iterating in a pipeline",
    "text": "Iterating in a pipeline\nSo how would we iterate this? What we want is to apply the n_distinct() function to each column of gapminder. But we can’t easily write a loop inside a pipeline. We want a way to iterate that lets us repeatedly apply a function without explicitly writing a loop.\n\nlibrary(gapminder)\ngapminder |&gt;  \n  summarize(n_distinct(country), \n            n_distinct(continent), \n            n_distinct(year), \n            n_distinct(lifeExp), \n            n_distinct(population))\n\n# A tibble: 1 × 5\n  `n_distinct(country)` `n_distinct(continent)` `n_distinct(year)`\n                  &lt;int&gt;                   &lt;int&gt;              &lt;int&gt;\n1                   142                       5                 12\n# ℹ 2 more variables: `n_distinct(lifeExp)` &lt;int&gt;,\n#   `n_distinct(population)` &lt;int&gt;\n\n\n\n\nUsing n_distinct() in this context is an idea I got from Rebecca Barter’s discussion of purrr."
  },
  {
    "objectID": "slides/06-work-with-models.html#iterating-in-a-pipeline-2",
    "href": "slides/06-work-with-models.html#iterating-in-a-pipeline-2",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Iterating in a pipeline",
    "text": "Iterating in a pipeline\nIn real life, you’d use across(), like this:\n\ngapminder |&gt;  \n  summarize(across(everything(), n_distinct))\n\n# A tibble: 1 × 6\n  country continent  year lifeExp   pop gdpPercap\n    &lt;int&gt;     &lt;int&gt; &lt;int&gt;   &lt;int&gt; &lt;int&gt;     &lt;int&gt;\n1     142         5    12    1626  1704      1704"
  },
  {
    "objectID": "slides/06-work-with-models.html#iterating-in-a-pipeline-3",
    "href": "slides/06-work-with-models.html#iterating-in-a-pipeline-3",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Iterating in a pipeline",
    "text": "Iterating in a pipeline\nBut you could also say “Feed each column of gapminder in turn to the n_distinct() function”.\nThis is what the map() function is for.\n\n  map(gapminder, n_distinct)\n\n$country\n[1] 142\n\n$continent\n[1] 5\n\n$year\n[1] 12\n\n$lifeExp\n[1] 1626\n\n$pop\n[1] 1704\n\n$gdpPercap\n[1] 1704\n\n\nRead it as “Feed each column of gapminder to the n_distinct() function.\n(This is pretty much what across() is doing more nicely.)"
  },
  {
    "objectID": "slides/06-work-with-models.html#iterating-in-a-pipeline-4",
    "href": "slides/06-work-with-models.html#iterating-in-a-pipeline-4",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Iterating in a pipeline",
    "text": "Iterating in a pipeline\nOr, in pipeline form:\n\ngapminder |&gt;  \n  map(n_distinct)\n\n$country\n[1] 142\n\n$continent\n[1] 5\n\n$year\n[1] 12\n\n$lifeExp\n[1] 1626\n\n$pop\n[1] 1704\n\n$gdpPercap\n[1] 1704\n\n\nYou can see we are getting a list back."
  },
  {
    "objectID": "slides/06-work-with-models.html#iterating-in-a-pipeline-5",
    "href": "slides/06-work-with-models.html#iterating-in-a-pipeline-5",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Iterating in a pipeline",
    "text": "Iterating in a pipeline\nOr, in pipeline form:\n\nresult &lt;- gapminder |&gt;  \n  map(n_distinct)\n\nclass(result)\n\n[1] \"list\"\n\nresult$continent\n\n[1] 5\n\nresult[[2]]\n\n[1] 5"
  },
  {
    "objectID": "slides/06-work-with-models.html#iterating-in-a-pipeline-6",
    "href": "slides/06-work-with-models.html#iterating-in-a-pipeline-6",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Iterating in a pipeline",
    "text": "Iterating in a pipeline\nBut we know n_distinct() should always return an integer. So we use map_int() instead of the generic map().\n\ngapminder |&gt;  \n  map_int(n_distinct)\n\n  country continent      year   lifeExp       pop gdpPercap \n      142         5        12      1626      1704      1704 \n\n\nThe thing about the map() family is that it can deal with all kinds of input types and output types."
  },
  {
    "objectID": "slides/06-work-with-models.html#grouped-analysis-and-list-columns",
    "href": "slides/06-work-with-models.html#grouped-analysis-and-list-columns",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Grouped analysis and list columns",
    "text": "Grouped analysis and list columns\nLet’s say I want to fit a model to data for all countries in Europe in 1977.\n\neu77 &lt;- gapminder |&gt; \n  filter(continent == \"Europe\", year == 1977)\n\nfit &lt;- lm(lifeExp ~ log(gdpPercap), data = eu77)\n\n\nsummary(fit)\n\n\nCall:\nlm(formula = lifeExp ~ log(gdpPercap), data = eu77)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-7.4956 -1.0306  0.0935  1.1755  3.7125 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      29.489      7.161   4.118 0.000306 ***\nlog(gdpPercap)    4.488      0.756   5.936 2.17e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.114 on 28 degrees of freedom\nMultiple R-squared:  0.5572,    Adjusted R-squared:  0.5414 \nF-statistic: 35.24 on 1 and 28 DF,  p-value: 2.173e-06"
  },
  {
    "objectID": "slides/06-work-with-models.html#grouped-analysis-and-list-columns-1",
    "href": "slides/06-work-with-models.html#grouped-analysis-and-list-columns-1",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Grouped analysis and list columns",
    "text": "Grouped analysis and list columns\nWhat if I want to do that for all Continent-Year combinations?\n\nout_le &lt;- gapminder |&gt; group_by(continent, year) |&gt;\n    nest() \n\nout_le\n\n# A tibble: 60 × 3\n# Groups:   continent, year [60]\n   continent  year data             \n   &lt;fct&gt;     &lt;int&gt; &lt;list&gt;           \n 1 Asia       1952 &lt;tibble [33 × 4]&gt;\n 2 Asia       1957 &lt;tibble [33 × 4]&gt;\n 3 Asia       1962 &lt;tibble [33 × 4]&gt;\n 4 Asia       1967 &lt;tibble [33 × 4]&gt;\n 5 Asia       1972 &lt;tibble [33 × 4]&gt;\n 6 Asia       1977 &lt;tibble [33 × 4]&gt;\n 7 Asia       1982 &lt;tibble [33 × 4]&gt;\n 8 Asia       1987 &lt;tibble [33 × 4]&gt;\n 9 Asia       1992 &lt;tibble [33 × 4]&gt;\n10 Asia       1997 &lt;tibble [33 × 4]&gt;\n# ℹ 50 more rows\n\n\nThink of nesting as a kind of “super-grouping”. Look in the object inspector."
  },
  {
    "objectID": "slides/06-work-with-models.html#grouped-analysis-and-list-columns-2",
    "href": "slides/06-work-with-models.html#grouped-analysis-and-list-columns-2",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Grouped analysis and list columns",
    "text": "Grouped analysis and list columns\nEurope ’77 is still in there.\n\nout_le |&gt; \n  filter(continent == \"Europe\" & year == 1977) |&gt; \n  unnest(cols = c(data))\n\n# A tibble: 30 × 6\n# Groups:   continent, year [1]\n   continent  year country                lifeExp      pop gdpPercap\n   &lt;fct&gt;     &lt;int&gt; &lt;fct&gt;                    &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 Europe     1977 Albania                   68.9  2509048     3533.\n 2 Europe     1977 Austria                   72.2  7568430    19749.\n 3 Europe     1977 Belgium                   72.8  9821800    19118.\n 4 Europe     1977 Bosnia and Herzegovina    69.9  4086000     3528.\n 5 Europe     1977 Bulgaria                  70.8  8797022     7612.\n 6 Europe     1977 Croatia                   70.6  4318673    11305.\n 7 Europe     1977 Czech Republic            70.7 10161915    14800.\n 8 Europe     1977 Denmark                   74.7  5088419    20423.\n 9 Europe     1977 Finland                   72.5  4738902    15605.\n10 Europe     1977 France                    73.8 53165019    18293.\n# ℹ 20 more rows"
  },
  {
    "objectID": "slides/06-work-with-models.html#grouped-analysis-and-list-columns-3",
    "href": "slides/06-work-with-models.html#grouped-analysis-and-list-columns-3",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Grouped analysis and list columns",
    "text": "Grouped analysis and list columns\nHere we write a tiny, very specific function and map() it to every row in the data column.\n\nfit_ols &lt;- function(df) {\n    lm(lifeExp ~ log(gdpPercap), data = df)\n}\n\nout_le &lt;- gapminder |&gt;\n    group_by(continent, year) |&gt;\n    nest() |&gt; \n    mutate(model = map(data, fit_ols))"
  },
  {
    "objectID": "slides/06-work-with-models.html#grouped-analysis-and-list-columns-4",
    "href": "slides/06-work-with-models.html#grouped-analysis-and-list-columns-4",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Grouped analysis and list columns",
    "text": "Grouped analysis and list columns\n\nNow we have a new column. Each row of the model column contains a full regression for that continent-year.\n\n\nout_le\n\n# A tibble: 60 × 4\n# Groups:   continent, year [60]\n   continent  year data              model \n   &lt;fct&gt;     &lt;int&gt; &lt;list&gt;            &lt;list&gt;\n 1 Asia       1952 &lt;tibble [33 × 4]&gt; &lt;lm&gt;  \n 2 Asia       1957 &lt;tibble [33 × 4]&gt; &lt;lm&gt;  \n 3 Asia       1962 &lt;tibble [33 × 4]&gt; &lt;lm&gt;  \n 4 Asia       1967 &lt;tibble [33 × 4]&gt; &lt;lm&gt;  \n 5 Asia       1972 &lt;tibble [33 × 4]&gt; &lt;lm&gt;  \n 6 Asia       1977 &lt;tibble [33 × 4]&gt; &lt;lm&gt;  \n 7 Asia       1982 &lt;tibble [33 × 4]&gt; &lt;lm&gt;  \n 8 Asia       1987 &lt;tibble [33 × 4]&gt; &lt;lm&gt;  \n 9 Asia       1992 &lt;tibble [33 × 4]&gt; &lt;lm&gt;  \n10 Asia       1997 &lt;tibble [33 × 4]&gt; &lt;lm&gt;  \n# ℹ 50 more rows"
  },
  {
    "objectID": "slides/06-work-with-models.html#grouped-analysis-and-list-columns-5",
    "href": "slides/06-work-with-models.html#grouped-analysis-and-list-columns-5",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Grouped analysis and list columns",
    "text": "Grouped analysis and list columns\nWe can tidy the nested models, too.\n\nfit_ols &lt;- function(df) {\n    lm(lifeExp ~ log(gdpPercap), data = df)\n}\n\nout_tidy &lt;- gapminder |&gt;\n    group_by(continent, year) |&gt;\n    nest() |&gt; \n    mutate(model = map(data, fit_ols),\n           tidied = map(model, tidy)) \n\nout_tidy\n\n# A tibble: 60 × 5\n# Groups:   continent, year [60]\n   continent  year data              model  tidied          \n   &lt;fct&gt;     &lt;int&gt; &lt;list&gt;            &lt;list&gt; &lt;list&gt;          \n 1 Asia       1952 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [2 × 5]&gt;\n 2 Asia       1957 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [2 × 5]&gt;\n 3 Asia       1962 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [2 × 5]&gt;\n 4 Asia       1967 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [2 × 5]&gt;\n 5 Asia       1972 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [2 × 5]&gt;\n 6 Asia       1977 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [2 × 5]&gt;\n 7 Asia       1982 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [2 × 5]&gt;\n 8 Asia       1987 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [2 × 5]&gt;\n 9 Asia       1992 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [2 × 5]&gt;\n10 Asia       1997 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [2 × 5]&gt;\n# ℹ 50 more rows"
  },
  {
    "objectID": "slides/06-work-with-models.html#grouped-analysis-and-list-columns-6",
    "href": "slides/06-work-with-models.html#grouped-analysis-and-list-columns-6",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Grouped analysis and list columns",
    "text": "Grouped analysis and list columns\nWe can get the tidied results out into the main table if we like.\n\nout_tidy &lt;- out_tidy |&gt;\n    unnest(cols = c(tidied)) |&gt;\n    filter(term %nin% \"(Intercept)\" &\n           continent %nin% \"Oceania\")\n\nout_tidy\n\n# A tibble: 48 × 9\n# Groups:   continent, year [48]\n   continent  year data     model  term     estimate std.error statistic p.value\n   &lt;fct&gt;     &lt;int&gt; &lt;list&gt;   &lt;list&gt; &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n 1 Asia       1952 &lt;tibble&gt; &lt;lm&gt;   log(gdp…     4.16     1.25       3.33 2.28e-3\n 2 Asia       1957 &lt;tibble&gt; &lt;lm&gt;   log(gdp…     4.17     1.28       3.26 2.71e-3\n 3 Asia       1962 &lt;tibble&gt; &lt;lm&gt;   log(gdp…     4.59     1.24       3.72 7.94e-4\n 4 Asia       1967 &lt;tibble&gt; &lt;lm&gt;   log(gdp…     4.50     1.15       3.90 4.77e-4\n 5 Asia       1972 &lt;tibble&gt; &lt;lm&gt;   log(gdp…     4.44     1.01       4.41 1.16e-4\n 6 Asia       1977 &lt;tibble&gt; &lt;lm&gt;   log(gdp…     4.87     1.03       4.75 4.42e-5\n 7 Asia       1982 &lt;tibble&gt; &lt;lm&gt;   log(gdp…     4.78     0.852      5.61 3.77e-6\n 8 Asia       1987 &lt;tibble&gt; &lt;lm&gt;   log(gdp…     5.17     0.727      7.12 5.31e-8\n 9 Asia       1992 &lt;tibble&gt; &lt;lm&gt;   log(gdp…     5.09     0.649      7.84 7.60e-9\n10 Asia       1997 &lt;tibble&gt; &lt;lm&gt;   log(gdp…     5.11     0.628      8.15 3.35e-9\n# ℹ 38 more rows"
  },
  {
    "objectID": "slides/06-work-with-models.html#plot-what-we-have",
    "href": "slides/06-work-with-models.html#plot-what-we-have",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Plot what we have",
    "text": "Plot what we have\n\np &lt;- ggplot(data = out_tidy,\n            mapping = aes(x = year, y = estimate,\n                          ymin = estimate - 2*std.error,\n                          ymax = estimate + 2*std.error,\n                          group = continent, \n                          color = continent))\n\np_out &lt;- p + \n  geom_pointrange(size = rel(1.25), \n                  position = position_dodge(width = rel(1.3))) +\n  scale_x_continuous(breaks = unique(gapminder$year)) + \n  labs(x = \"Year\", \n       y = \"Estimate\", \n       color = \"Continent\")"
  },
  {
    "objectID": "slides/06-work-with-models.html#and-theres-more",
    "href": "slides/06-work-with-models.html#and-theres-more",
    "title": "Data Visualization - 6. Work With Models",
    "section": "And there’s more …",
    "text": "And there’s more …\nLet’s go back to this stage:\n\n# New model\nfit_ols2 &lt;- function(df) {\n    lm(lifeExp ~ log(gdpPercap) + log(pop), data = df)\n}\n\nout_tidy &lt;- gapminder |&gt;\n    group_by(continent, year) |&gt;\n    nest() |&gt; \n    mutate(model = map(data, fit_ols2),\n           tidied = map(model, tidy)) \n\nout_tidy\n\n# A tibble: 60 × 5\n# Groups:   continent, year [60]\n   continent  year data              model  tidied          \n   &lt;fct&gt;     &lt;int&gt; &lt;list&gt;            &lt;list&gt; &lt;list&gt;          \n 1 Asia       1952 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [3 × 5]&gt;\n 2 Asia       1957 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [3 × 5]&gt;\n 3 Asia       1962 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [3 × 5]&gt;\n 4 Asia       1967 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [3 × 5]&gt;\n 5 Asia       1972 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [3 × 5]&gt;\n 6 Asia       1977 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [3 × 5]&gt;\n 7 Asia       1982 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [3 × 5]&gt;\n 8 Asia       1987 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [3 × 5]&gt;\n 9 Asia       1992 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [3 × 5]&gt;\n10 Asia       1997 &lt;tibble [33 × 4]&gt; &lt;lm&gt;   &lt;tibble [3 × 5]&gt;\n# ℹ 50 more rows"
  },
  {
    "objectID": "slides/06-work-with-models.html#a-function-to-draw-a-coef-plot",
    "href": "slides/06-work-with-models.html#a-function-to-draw-a-coef-plot",
    "title": "Data Visualization - 6. Work With Models",
    "section": "A function to draw a coef plot",
    "text": "A function to draw a coef plot\n\n# Plot the output from our model\nmod_plot &lt;- function(data, \n                     title){\n  data |&gt; \n    filter(term %nin% \"(Intercept)\") |&gt; \n    ggplot(mapping = aes(x = estimate,\n                         xmin = estimate - std.error,\n                         xmax = estimate + std.error,\n                         y = reorder(term, estimate))) + \n    geom_pointrange() + \n    labs(title = title, \n         y = NULL)\n}"
  },
  {
    "objectID": "slides/06-work-with-models.html#add-it-using-map2-or-pmap",
    "href": "slides/06-work-with-models.html#add-it-using-map2-or-pmap",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Add it using map2() or pmap()",
    "text": "Add it using map2() or pmap()\n\nWhen we have two arguments to feed a function we can use map2(). The general case is pmap(), for passing any number of arguments in a list.\n\n\nout_tidy &lt;- gapminder |&gt; group_by(continent, year) |&gt; nest() |&gt; \n    mutate(title = paste(continent, year),\n           model = map(data, fit_ols2),\n           tidied = map(model, tidy), \n           ggout = pmap(list(tidied, title), \n                        mod_plot)) \n\nout_tidy\n\n# A tibble: 60 × 7\n# Groups:   continent, year [60]\n   continent  year data              title     model  tidied           ggout \n   &lt;fct&gt;     &lt;int&gt; &lt;list&gt;            &lt;chr&gt;     &lt;list&gt; &lt;list&gt;           &lt;list&gt;\n 1 Asia       1952 &lt;tibble [33 × 4]&gt; Asia 1952 &lt;lm&gt;   &lt;tibble [3 × 5]&gt; &lt;gg&gt;  \n 2 Asia       1957 &lt;tibble [33 × 4]&gt; Asia 1957 &lt;lm&gt;   &lt;tibble [3 × 5]&gt; &lt;gg&gt;  \n 3 Asia       1962 &lt;tibble [33 × 4]&gt; Asia 1962 &lt;lm&gt;   &lt;tibble [3 × 5]&gt; &lt;gg&gt;  \n 4 Asia       1967 &lt;tibble [33 × 4]&gt; Asia 1967 &lt;lm&gt;   &lt;tibble [3 × 5]&gt; &lt;gg&gt;  \n 5 Asia       1972 &lt;tibble [33 × 4]&gt; Asia 1972 &lt;lm&gt;   &lt;tibble [3 × 5]&gt; &lt;gg&gt;  \n 6 Asia       1977 &lt;tibble [33 × 4]&gt; Asia 1977 &lt;lm&gt;   &lt;tibble [3 × 5]&gt; &lt;gg&gt;  \n 7 Asia       1982 &lt;tibble [33 × 4]&gt; Asia 1982 &lt;lm&gt;   &lt;tibble [3 × 5]&gt; &lt;gg&gt;  \n 8 Asia       1987 &lt;tibble [33 × 4]&gt; Asia 1987 &lt;lm&gt;   &lt;tibble [3 × 5]&gt; &lt;gg&gt;  \n 9 Asia       1992 &lt;tibble [33 × 4]&gt; Asia 1992 &lt;lm&gt;   &lt;tibble [3 × 5]&gt; &lt;gg&gt;  \n10 Asia       1997 &lt;tibble [33 × 4]&gt; Asia 1997 &lt;lm&gt;   &lt;tibble [3 × 5]&gt; &lt;gg&gt;  \n# ℹ 50 more rows\n\n\nNow, every element of ggout is …"
  },
  {
    "objectID": "slides/06-work-with-models.html#a-plot",
    "href": "slides/06-work-with-models.html#a-plot",
    "title": "Data Visualization - 6. Work With Models",
    "section": "A plot!",
    "text": "A plot!\n\n\n\nout_tidy$ggout[[8]]\n\n\n\n\n\n\n\n\n\n\nout_tidy$ggout[[18]]"
  },
  {
    "objectID": "slides/06-work-with-models.html#we-dont-just-put-them-in-there-for-fun",
    "href": "slides/06-work-with-models.html#we-dont-just-put-them-in-there-for-fun",
    "title": "Data Visualization - 6. Work With Models",
    "section": "We don’t just put them in there for fun",
    "text": "We don’t just put them in there for fun\n\nWe can e.g. walk the plots out to disk\n\nwalk() is map() for when you just want a “side-effect” such as printed output. There is also walk2() and pwalk()\n\npwalk(\n  list(\n    filename = paste0(out_tidy$title, \".png\"),\n    plot = out_tidy$ggout,\n    path = here(\"figures\"),\n    height = 3, width = 4,\n    dpi = 300\n  ),\n  ggsave\n)"
  },
  {
    "objectID": "slides/06-work-with-models.html#peek-in-the-figures-folder",
    "href": "slides/06-work-with-models.html#peek-in-the-figures-folder",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Peek in the figures/ folder",
    "text": "Peek in the figures/ folder\n\nfs::dir_ls(here(\"figures\")) |&gt; \n  basename()\n\n [1] \"Africa 1952.png\"   \"Africa 1957.png\"   \"Africa 1962.png\"  \n [4] \"Africa 1967.png\"   \"Africa 1972.png\"   \"Africa 1977.png\"  \n [7] \"Africa 1982.png\"   \"Africa 1987.png\"   \"Africa 1992.png\"  \n[10] \"Africa 1997.png\"   \"Africa 2002.png\"   \"Africa 2007.png\"  \n[13] \"Americas 1952.png\" \"Americas 1957.png\" \"Americas 1962.png\"\n[16] \"Americas 1967.png\" \"Americas 1972.png\" \"Americas 1977.png\"\n[19] \"Americas 1982.png\" \"Americas 1987.png\" \"Americas 1992.png\"\n[22] \"Americas 1997.png\" \"Americas 2002.png\" \"Americas 2007.png\"\n[25] \"Asia 1952.png\"     \"Asia 1957.png\"     \"Asia 1962.png\"    \n[28] \"Asia 1967.png\"     \"Asia 1972.png\"     \"Asia 1977.png\"    \n[31] \"Asia 1982.png\"     \"Asia 1987.png\"     \"Asia 1992.png\"    \n[34] \"Asia 1997.png\"     \"Asia 2002.png\"     \"Asia 2007.png\"    \n[37] \"Europe 1952.png\"   \"Europe 1957.png\"   \"Europe 1962.png\"  \n[40] \"Europe 1967.png\"   \"Europe 1972.png\"   \"Europe 1977.png\"  \n[43] \"Europe 1982.png\"   \"Europe 1987.png\"   \"Europe 1992.png\"  \n[46] \"Europe 1997.png\"   \"Europe 2002.png\"   \"Europe 2007.png\"  \n[49] \"Oceania 1952.png\"  \"Oceania 1957.png\"  \"Oceania 1962.png\" \n[52] \"Oceania 1967.png\"  \"Oceania 1972.png\"  \"Oceania 1977.png\" \n[55] \"Oceania 1982.png\"  \"Oceania 1987.png\"  \"Oceania 1992.png\" \n[58] \"Oceania 1997.png\"  \"Oceania 2002.png\"  \"Oceania 2007.png\""
  },
  {
    "objectID": "slides/06-work-with-models.html#an-example-from-the-gss",
    "href": "slides/06-work-with-models.html#an-example-from-the-gss",
    "title": "Data Visualization - 6. Work With Models",
    "section": "An example from the GSS",
    "text": "An example from the GSS\n\ngss_sm\n\n# A tibble: 2,867 × 32\n    year    id ballot       age childs sibs   degree race  sex   region income16\n   &lt;dbl&gt; &lt;dbl&gt; &lt;labelled&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;labe&gt; &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt;   \n 1  2016     1 1             47      3 2      Bache… White Male  New E… $170000…\n 2  2016     2 2             61      0 3      High … White Male  New E… $50000 …\n 3  2016     3 3             72      2 3      Bache… White Male  New E… $75000 …\n 4  2016     4 1             43      4 3      High … White Fema… New E… $170000…\n 5  2016     5 3             55      2 2      Gradu… White Fema… New E… $170000…\n 6  2016     6 2             53      2 2      Junio… White Fema… New E… $60000 …\n 7  2016     7 1             50      2 2      High … White Male  New E… $170000…\n 8  2016     8 3             23      3 6      High … Other Fema… Middl… $30000 …\n 9  2016     9 1             45      3 5      High … Black Male  Middl… $60000 …\n10  2016    10 3             71      4 1      Junio… White Male  Middl… $60000 …\n# ℹ 2,857 more rows\n# ℹ 21 more variables: relig &lt;fct&gt;, marital &lt;fct&gt;, padeg &lt;fct&gt;, madeg &lt;fct&gt;,\n#   partyid &lt;fct&gt;, polviews &lt;fct&gt;, happy &lt;fct&gt;, partners &lt;fct&gt;, grass &lt;fct&gt;,\n#   zodiac &lt;fct&gt;, pres12 &lt;labelled&gt;, wtssall &lt;dbl&gt;, income_rc &lt;fct&gt;,\n#   agegrp &lt;fct&gt;, ageq &lt;fct&gt;, siblings &lt;fct&gt;, kids &lt;fct&gt;, religion &lt;fct&gt;,\n#   bigregion &lt;fct&gt;, partners_rc &lt;fct&gt;, obama &lt;dbl&gt;"
  },
  {
    "objectID": "slides/06-work-with-models.html#set-up-our-model",
    "href": "slides/06-work-with-models.html#set-up-our-model",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Set up our model",
    "text": "Set up our model\n\ngss_sm$polviews_m &lt;- relevel(gss_sm$polviews, \n                             ref = \"Moderate\")\n\nout_bo &lt;- glm(obama ~ polviews_m + sex*race,\n              family = \"binomial\", \n              data = gss_sm)\n\ntidy(out_bo)\n\n# A tibble: 12 × 5\n   term                             estimate std.error statistic  p.value\n   &lt;chr&gt;                               &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 (Intercept)                       0.296       0.134   2.21    2.70e- 2\n 2 polviews_mExtremely Liberal       2.37        0.525   4.52    6.20e- 6\n 3 polviews_mLiberal                 2.60        0.357   7.29    3.10e-13\n 4 polviews_mSlightly Liberal        1.29        0.248   5.21    1.94e- 7\n 5 polviews_mSlightly Conservative  -1.36        0.181  -7.48    7.68e-14\n 6 polviews_mConservative           -2.35        0.200 -11.7     1.07e-31\n 7 polviews_mExtremely Conservative -2.73        0.387  -7.04    1.87e-12\n 8 sexFemale                         0.255       0.145   1.75    7.96e- 2\n 9 raceBlack                         3.85        0.501   7.68    1.61e-14\n10 raceOther                        -0.00214     0.436  -0.00492 9.96e- 1\n11 sexFemale:raceBlack              -0.198       0.660  -0.299   7.65e- 1\n12 sexFemale:raceOther               1.57        0.588   2.68    7.37e- 3"
  },
  {
    "objectID": "slides/06-work-with-models.html#calculate-the-average-marginal-effects",
    "href": "slides/06-work-with-models.html#calculate-the-average-marginal-effects",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Calculate the Average Marginal Effects",
    "text": "Calculate the Average Marginal Effects\n\nlibrary(marginaleffects)\n\nbo_mfx &lt;- avg_slopes(out_bo)\n\n## This gives us the marginal effects at the unit level \nas_tibble(bo_mfx)\n\n# A tibble: 9 × 12\n  term       contrast    estimate std.error statistic   p.value s.value conf.low\n  &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1 polviews_m mean(Conse…  -0.412     0.0283    -14.5  6.82e- 48  157.   -0.467  \n2 polviews_m mean(Extre…  -0.454     0.0420    -10.8  3.55e- 27   87.9  -0.536  \n3 polviews_m mean(Extre…   0.268     0.0295      9.10 9.07e- 20   63.3   0.210  \n4 polviews_m mean(Liber…   0.277     0.0229     12.1  1.46e- 33  109.    0.232  \n5 polviews_m mean(Sligh…  -0.266     0.0330     -8.06 7.65e- 16   50.2  -0.330  \n6 polviews_m mean(Sligh…   0.193     0.0303      6.39 1.66e- 10   32.5   0.134  \n7 race       mean(Black…   0.403     0.0173     23.4  1.18e-120  398.    0.369  \n8 race       mean(Other…   0.125     0.0386      3.23 1.24e-  3    9.66  0.0490 \n9 sex        mean(Femal…   0.0443    0.0177      2.51 1.22e-  2    6.36  0.00967\n# ℹ 4 more variables: conf.high &lt;dbl&gt;, predicted_lo &lt;dbl&gt;, predicted_hi &lt;dbl&gt;,\n#   predicted &lt;dbl&gt;"
  },
  {
    "objectID": "slides/06-work-with-models.html#alternatively-do-it-with-broom",
    "href": "slides/06-work-with-models.html#alternatively-do-it-with-broom",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Alternatively, do it with broom",
    "text": "Alternatively, do it with broom\n\ntidy(bo_mfx)\n\n# A tibble: 9 × 12\n  term       contrast    estimate std.error statistic   p.value s.value conf.low\n  &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1 polviews_m mean(Conse…  -0.412     0.0283    -14.5  6.82e- 48  157.   -0.467  \n2 polviews_m mean(Extre…  -0.454     0.0420    -10.8  3.55e- 27   87.9  -0.536  \n3 polviews_m mean(Extre…   0.268     0.0295      9.10 9.07e- 20   63.3   0.210  \n4 polviews_m mean(Liber…   0.277     0.0229     12.1  1.46e- 33  109.    0.232  \n5 polviews_m mean(Sligh…  -0.266     0.0330     -8.06 7.65e- 16   50.2  -0.330  \n6 polviews_m mean(Sligh…   0.193     0.0303      6.39 1.66e- 10   32.5   0.134  \n7 race       mean(Black…   0.403     0.0173     23.4  1.18e-120  398.    0.369  \n8 race       mean(Other…   0.125     0.0386      3.23 1.24e-  3    9.66  0.0490 \n9 sex        mean(Femal…   0.0443    0.0177      2.51 1.22e-  2    6.36  0.00967\n# ℹ 4 more variables: conf.high &lt;dbl&gt;, predicted_lo &lt;dbl&gt;, predicted_hi &lt;dbl&gt;,\n#   predicted &lt;dbl&gt;"
  },
  {
    "objectID": "slides/06-work-with-models.html#which-gets-us-back-to-familiar-territory",
    "href": "slides/06-work-with-models.html#which-gets-us-back-to-familiar-territory",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Which gets us back to familiar territory",
    "text": "Which gets us back to familiar territory\n\n\ntidy(bo_mfx) |&gt; \n  ggplot(mapping = aes(x = estimate, \n                       xmin = conf.low, \n                       xmax = conf.high,\n                       y = reorder(contrast, \n                                   estimate))) + \n  geom_vline(xintercept = 0, color = \"gray70\",\n             size = rel(1.2)) +\n  geom_pointrange() +\n  labs(x = \"Average Marginal Effect\", \n       y = NULL)"
  },
  {
    "objectID": "slides/06-work-with-models.html#marginaleffects-can-do-a-lot-more",
    "href": "slides/06-work-with-models.html#marginaleffects-can-do-a-lot-more",
    "title": "Data Visualization - 6. Work With Models",
    "section": "marginaleffects can do a lot more",
    "text": "marginaleffects can do a lot more"
  },
  {
    "objectID": "slides/06-work-with-models.html#marginaleffects-can-do-a-lot-more-1",
    "href": "slides/06-work-with-models.html#marginaleffects-can-do-a-lot-more-1",
    "title": "Data Visualization - 6. Work With Models",
    "section": "marginaleffects can do a lot more",
    "text": "marginaleffects can do a lot more\n\nIt includes a range of plotting methods, to produce graphics directly.\nThese are built on ggplot. Similarly integration with broom means that you can use the package-specific plotting functions take the tidy output and adapt it to your own needs.\nAlso check out modelsummary, by the same author, for quick and flexible summaries of models and datasets. Again, this sort of package is very convenient to use directly. But with just a little facility with R and tidyverse-style idioms and patterns, you’ll get even more out of it. You’ll better understand how to adapt it and why its functions work as they do."
  },
  {
    "objectID": "slides/06-work-with-models.html#working-with-complex-surveys",
    "href": "slides/06-work-with-models.html#working-with-complex-surveys",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Working with complex surveys",
    "text": "Working with complex surveys\n\nAs always, our question is “What’s the smoothest way for me to get a tidy table of results I need to hand off to ggplot?”\nFor complex surveys, we use survey, the standard package for survey analysis in R, and srvyr, a helper package designed to integrate what survey can do with the Tiydverse framework.\n\n\n## Load the packages\nlibrary(survey)\nlibrary(srvyr)"
  },
  {
    "objectID": "slides/06-work-with-models.html#example-the-gss-again",
    "href": "slides/06-work-with-models.html#example-the-gss-again",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Example: The GSS again",
    "text": "Example: The GSS again\nThis time, a small piece of the full GSS from the early 1970s to 2018.\n\ngss_lon\n\n# A tibble: 62,466 × 25\n    year    id ballot age   degree race  sex   siblings kids  bigregion income16\n   &lt;dbl&gt; &lt;dbl&gt; &lt;labe&gt; &lt;lab&gt; &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;    &lt;fct&gt; &lt;fct&gt;     &lt;fct&gt;   \n 1  1972     1 NA     23    Bache… White Fema… 3        0     Midwest   &lt;NA&gt;    \n 2  1972     2 NA     70    Lt Hi… White Male  4        4+    Midwest   &lt;NA&gt;    \n 3  1972     3 NA     48    High … White Fema… 5        4+    Midwest   &lt;NA&gt;    \n 4  1972     4 NA     27    Bache… White Fema… 5        0     Midwest   &lt;NA&gt;    \n 5  1972     5 NA     61    High … White Fema… 2        2     Midwest   &lt;NA&gt;    \n 6  1972     6 NA     26    High … White Male  1        0     Midwest   &lt;NA&gt;    \n 7  1972     7 NA     28    High … White Male  6+       2     Midwest   &lt;NA&gt;    \n 8  1972     8 NA     27    Bache… White Male  1        0     Midwest   &lt;NA&gt;    \n 9  1972     9 NA     21    High … Black Fema… 2        2     South     &lt;NA&gt;    \n10  1972    10 NA     30    High … Black Fema… 6+       4+    South     &lt;NA&gt;    \n# ℹ 62,456 more rows\n# ℹ 14 more variables: religion &lt;fct&gt;, marital &lt;fct&gt;, padeg &lt;fct&gt;, madeg &lt;fct&gt;,\n#   partyid &lt;fct&gt;, polviews &lt;fct&gt;, happy &lt;fct&gt;, partners_rc &lt;fct&gt;, grass &lt;fct&gt;,\n#   zodiac &lt;fct&gt;, pres12 &lt;labelled&gt;, wtssall &lt;dbl&gt;, vpsu &lt;dbl&gt;, vstrat &lt;dbl&gt;"
  },
  {
    "objectID": "slides/06-work-with-models.html#add-the-weighting-information",
    "href": "slides/06-work-with-models.html#add-the-weighting-information",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Add the weighting information",
    "text": "Add the weighting information\n\n# These details are dependent on the kind of survey you're working with\noptions(survey.lonely.psu = \"adjust\")\noptions(na.action=\"na.pass\")\n\ngss_svy &lt;- gss_lon |&gt; \n  filter(year &gt; 1974) |&gt; \n  mutate(stratvar = interaction(year, vstrat)) |&gt; \n  as_survey_design(ids = vpsu,\n                   strata = stratvar,\n                   weights = wtssall,\n                   nest = TRUE)\n\ngss_svy # Now it's no longer simply a tibble\n\nStratified 1 - level Cluster Sampling design (with replacement)\nWith (4399) clusters.\nCalled via srvyr\nSampling variables:\n  - ids: vpsu \n  - strata: stratvar \n  - weights: wtssall \nData variables: \n  - year (dbl), id (dbl), ballot (labelled), age (labelled), degree (fct), race\n    (fct), sex (fct), siblings (fct), kids (fct), bigregion (fct), income16\n    (fct), religion (fct), marital (fct), padeg (fct), madeg (fct), partyid\n    (fct), polviews (fct), happy (fct), partners_rc (fct), grass (fct), zodiac\n    (fct), pres12 (labelled), wtssall (dbl), vpsu (dbl), vstrat (dbl), stratvar\n    (fct)"
  },
  {
    "objectID": "slides/06-work-with-models.html#trends-in-the-happy-measure",
    "href": "slides/06-work-with-models.html#trends-in-the-happy-measure",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Trends in the happy measure",
    "text": "Trends in the happy measure\n\nout_hap &lt;- gss_svy |&gt; \n    group_by(year, sex, happy)  |&gt; \n    summarize(prop = survey_mean(na.rm = TRUE, vartype = \"ci\"))\n\nout_hap\n\n# A tibble: 221 × 6\n# Groups:   year, sex [56]\n    year sex    happy            prop   prop_low prop_upp\n   &lt;dbl&gt; &lt;fct&gt;  &lt;fct&gt;           &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1  1975 Male   Very Happy    0.319    0.279      0.358  \n 2  1975 Male   Pretty Happy  0.555    0.514      0.597  \n 3  1975 Male   Not Too Happy 0.119    0.0934     0.145  \n 4  1975 Male   &lt;NA&gt;          0.00670 -0.0000539  0.0134 \n 5  1975 Female Very Happy    0.345    0.310      0.380  \n 6  1975 Female Pretty Happy  0.516    0.472      0.560  \n 7  1975 Female Not Too Happy 0.138    0.108      0.167  \n 8  1975 Female &lt;NA&gt;          0.00117 -0.00113    0.00347\n 9  1976 Male   Very Happy    0.328    0.289      0.367  \n10  1976 Male   Pretty Happy  0.543    0.505      0.580  \n# ℹ 211 more rows\n\n\nOnce again, it’s now a tidy tibble, and we know what to do with those."
  },
  {
    "objectID": "slides/06-work-with-models.html#trends-in-the-happy-measure-1",
    "href": "slides/06-work-with-models.html#trends-in-the-happy-measure-1",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Trends in the happy measure",
    "text": "Trends in the happy measure\n\n\nout_hap |&gt;  \n  filter(happy == \"Not Too Happy\") |&gt; \n  ggplot(mapping = aes(x = year, \n                       y = prop,\n                       ymin = prop_low, \n                       ymax = prop_upp)) +\n  geom_line(linewidth = 1.2) +\n  geom_ribbon(alpha = 0.3) +\n  scale_x_continuous(breaks = \n                       seq(1978, 2018, 4)) +\n  scale_y_continuous(labels = \n                       label_percent(accuracy = 1)) + \n  labs(x = \"Year\",\n    y = \"Percent\",\n    title = \"Trends in Unhappiness\", \n    subtitle = \"1975-2018\", \n    caption = \"Data: GSS.\")"
  },
  {
    "objectID": "slides/06-work-with-models.html#with-a-proper-aspect-ratio",
    "href": "slides/06-work-with-models.html#with-a-proper-aspect-ratio",
    "title": "Data Visualization - 6. Work With Models",
    "section": "With a proper aspect ratio",
    "text": "With a proper aspect ratio"
  },
  {
    "objectID": "slides/06-work-with-models.html#a-more-complex-example",
    "href": "slides/06-work-with-models.html#a-more-complex-example",
    "title": "Data Visualization - 6. Work With Models",
    "section": "A more complex example",
    "text": "A more complex example\n\ngss_svy |&gt;\n  filter(year %in% seq(1976, 2016, by = 4)) |&gt;\n  group_by(year, race, degree) |&gt;\n  summarize(prop = survey_mean(na.rm = TRUE)) \n\n# A tibble: 162 × 5\n# Groups:   year, race [30]\n    year race  degree            prop prop_se\n   &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt;            &lt;dbl&gt;   &lt;dbl&gt;\n 1  1976 White Lt High School 0.327   0.0160 \n 2  1976 White High School    0.517   0.0161 \n 3  1976 White Junior College 0.0128  0.00298\n 4  1976 White Bachelor       0.101   0.00955\n 5  1976 White Graduate       0.0392  0.00642\n 6  1976 White &lt;NA&gt;           0.00285 0.00151\n 7  1976 Black Lt High School 0.558   0.0603 \n 8  1976 Black High School    0.335   0.0476 \n 9  1976 Black Junior College 0.0423  0.0192 \n10  1976 Black Bachelor       0.0577  0.0238 \n# ℹ 152 more rows"
  },
  {
    "objectID": "slides/06-work-with-models.html#lets-put-that-in-an-object",
    "href": "slides/06-work-with-models.html#lets-put-that-in-an-object",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Let’s put that in an object",
    "text": "Let’s put that in an object\n\nout_yrd &lt;- gss_svy |&gt;\n  filter(year %in% seq(1976, 2016, by = 4)) |&gt;\n  group_by(year, race, degree) |&gt;\n  summarize(prop = survey_mean(na.rm = TRUE))"
  },
  {
    "objectID": "slides/06-work-with-models.html#check-the-sums",
    "href": "slides/06-work-with-models.html#check-the-sums",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Check the sums",
    "text": "Check the sums\n\nout_yrd |&gt; \n  group_by(year, race) |&gt; \n  summarize(tot = sum(prop))\n\n# A tibble: 30 × 3\n# Groups:   year [10]\n    year race    tot\n   &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt;\n 1  1976 White  1.00\n 2  1976 Black  1.00\n 3  1976 Other  1   \n 4  1980 White  1.00\n 5  1980 Black  1   \n 6  1980 Other  1   \n 7  1984 White  1.00\n 8  1984 Black  1.00\n 9  1984 Other  1   \n10  1988 White  1.00\n# ℹ 20 more rows"
  },
  {
    "objectID": "slides/06-work-with-models.html#set-up-the-plot",
    "href": "slides/06-work-with-models.html#set-up-the-plot",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Set up the plot",
    "text": "Set up the plot\n\np &lt;- out_yrd |&gt; \n  drop_na() |&gt; \n  filter(race %nin% \"Other\") |&gt; \n  ggplot(mapping = aes(x = degree, \n                       y = prop,\n                       ymin = prop - 2*prop_se,\n                       ymax = prop + 2*prop_se,\n                       fill = race,\n                       color = race,\n                       group = race))\n\ndodge_w &lt;- position_dodge(width = 0.9)"
  },
  {
    "objectID": "slides/06-work-with-models.html#draw-the-plot",
    "href": "slides/06-work-with-models.html#draw-the-plot",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Draw the plot",
    "text": "Draw the plot\n\n\np + geom_col(position = dodge_w, alpha = 0.2) +\n    geom_errorbar(position = dodge_w, width = 0.2) +\n    scale_x_discrete(labels = wrap_format(10)) +\n    scale_y_continuous(labels = label_percent()) +\n    scale_color_brewer(type = \"qual\", \n                       palette = \"Dark2\") +\n    scale_fill_brewer(type = \"qual\", \n                      palette = \"Dark2\") +\n    labs(title = \"Educational Attainment by Race\",\n         subtitle = \"GSS 1976-2016\",\n         fill = \"Race\",\n         color = \"Race\",\n         x = NULL, y = \"Percent\") +\n    facet_wrap(~ year, ncol = 2)"
  },
  {
    "objectID": "slides/06-work-with-models.html#in-full-but-switch-to-rows",
    "href": "slides/06-work-with-models.html#in-full-but-switch-to-rows",
    "title": "Data Visualization - 6. Work With Models",
    "section": "In full (but switch to rows)",
    "text": "In full (but switch to rows)\n\np_out &lt;- p + \n  geom_col(position = dodge_w, alpha = 0.2) +\n  geom_errorbar(position = dodge_w, width = 0.2) +\n  scale_x_discrete(labels = wrap_format(10)) +\n  scale_y_continuous(labels = label_percent()) +\n  scale_color_brewer(type = \"qual\", \n                     palette = \"Dark2\") +\n  scale_fill_brewer(type = \"qual\", \n                    palette = \"Dark2\") +\n  labs(title = \"Educational Attainment by Race\",\n       subtitle = \"GSS 1976-2016\",\n       fill = \"Race\",\n       color = \"Race\",\n       x = NULL, y = \"Percent\") +\n  facet_wrap(~ year, nrow = 2) + \n  theme(axis.text.x = \n          element_text(size = rel(0.6), \n                       face = \"bold\"))"
  },
  {
    "objectID": "slides/06-work-with-models.html#lets-try-a-different-view",
    "href": "slides/06-work-with-models.html#lets-try-a-different-view",
    "title": "Data Visualization - 6. Work With Models",
    "section": "Let’s try a different view",
    "text": "Let’s try a different view\n\np &lt;- out_yrd |&gt; \n  drop_na() |&gt; \n  filter(race %nin% \"Other\", \n         degree %nin% \"Junior College\") |&gt; \n  ggplot(mapping = aes(x = year, y = prop, \n                          ymin = prop - 2*prop_se,\n                          ymax = prop + 2*prop_se, \n                          fill = race, color = race,\n                          group = race))\n\np_out &lt;- p + \n  geom_ribbon(mapping = aes(color = NULL),\n              alpha = 0.3) +\n  geom_line(linewidth = rel(1.25)) + \n  scale_y_continuous(labels = label_percent()) +\n  scale_color_brewer(type = \"qual\", palette = \"Dark2\") +\n  scale_fill_brewer(type = \"qual\", palette = \"Dark2\") +\n  facet_wrap(~ degree, ncol = 2) +\n  labs(title = \"Educational Attainment by Race\",\n       subtitle = \"GSS 1976-2016\", fill = \"Race\",\n       color = \"Race\", x = NULL, y = \"Percent\")"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#load-the-packages-we-need",
    "href": "slides/04-show-the-right-numbers.html#load-the-packages-we-need",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Load the packages we need",
    "text": "Load the packages we need\n\nlibrary(tidyverse)      # Your friend and mine\nlibrary(gapminder)      # Gapminder data\nlibrary(here)           # Portable file paths\nlibrary(socviz)         # Handy socviz functions"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#a-grammar-of-graphics",
    "href": "slides/04-show-the-right-numbers.html#a-grammar-of-graphics",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "A grammar of graphics",
    "text": "A grammar of graphics\nThe grammar is a set of rules for how to produce graphics from data, by mapping data to or representing it by geometric objects (like points and lines) that have aesthetic attributes (like position, color, size, and shape), together with further rules for transforming data if needed, for adjusting scales and their guides, and for projecting results onto some coordinate system."
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#section",
    "href": "slides/04-show-the-right-numbers.html#section",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "",
    "text": "Like other rules of syntax, the grammarlimits what you can validly saybut it doesn’t automatically makewhat you saysensible or meaningful"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot",
    "href": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Try to make a lineplot",
    "text": "Try to make a lineplot\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = year,\n                       y = gdpPercap))"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot-1",
    "href": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot-1",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Try to make a lineplot",
    "text": "Try to make a lineplot\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = year,\n                       y = gdpPercap)) +\n  geom_line()"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot-2",
    "href": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot-2",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Try to make a lineplot",
    "text": "Try to make a lineplot\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = year,\n                       y = gdpPercap)) +\n  geom_line()\n\np"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot-3",
    "href": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot-3",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Try to make a lineplot",
    "text": "Try to make a lineplot\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = year,\n                       y = gdpPercap))"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot-4",
    "href": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot-4",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Try to make a lineplot",
    "text": "Try to make a lineplot\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = year,\n                       y = gdpPercap)) +\n  geom_line(mapping = aes(group = country))"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot-5",
    "href": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot-5",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Try to make a lineplot",
    "text": "Try to make a lineplot\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = year,\n                       y = gdpPercap)) +\n  geom_line(mapping = aes(group = country))\n\np"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot-6",
    "href": "slides/04-show-the-right-numbers.html#try-to-make-a-lineplot-6",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Try to make a lineplot",
    "text": "Try to make a lineplot\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = year,\n                       y = gdpPercap)) +\n  geom_line(mapping = aes(group = country))\n\np"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#facet-the-plot",
    "href": "slides/04-show-the-right-numbers.html#facet-the-plot",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Facet the plot",
    "text": "Facet the plot\n\n\n\ngapminder\n\n\n\n\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   &lt;fct&gt;       &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#facet-the-plot-1",
    "href": "slides/04-show-the-right-numbers.html#facet-the-plot-1",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Facet the plot",
    "text": "Facet the plot\n\n\n\ngapminder |&gt;\n  ggplot(mapping =\n           aes(x = year,\n           y = gdpPercap))"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#facet-the-plot-2",
    "href": "slides/04-show-the-right-numbers.html#facet-the-plot-2",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Facet the plot",
    "text": "Facet the plot\n\n\n\ngapminder |&gt;\n  ggplot(mapping =\n           aes(x = year,\n           y = gdpPercap)) +\n  geom_line(mapping = aes(group = country))"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#facet-the-plot-3",
    "href": "slides/04-show-the-right-numbers.html#facet-the-plot-3",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Facet the plot",
    "text": "Facet the plot\n\n\n\ngapminder |&gt;\n  ggplot(mapping =\n           aes(x = year,\n           y = gdpPercap)) +\n  geom_line(mapping = aes(group = country)) +\n  facet_wrap(~ continent)"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#faceting",
    "href": "slides/04-show-the-right-numbers.html#faceting",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Faceting",
    "text": "Faceting\n\nA facet is not a geom; it’s a way of arranging repeated geoms by some additional variable\nFacets use R’s “formula” syntax: facet_wrap(~ continent)\nRead the ~ as “on” or “by”"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#faceting-1",
    "href": "slides/04-show-the-right-numbers.html#faceting-1",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Faceting",
    "text": "Faceting\n\nYou can also use this syntax: facet_wrap(vars(continent))\nThis is newer, and consistent with other ways of referring to variables within tidyverse functions."
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#facets-in-action",
    "href": "slides/04-show-the-right-numbers.html#facets-in-action",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Facets in action",
    "text": "Facets in action\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = year,\n                          y = gdpPercap))\n\np_out &lt;- p + geom_line(color=\"gray70\", \n              mapping=aes(group = country)) +\n    geom_smooth(size = 1.1,\n                method = \"loess\",\n                se = FALSE) +\n    scale_y_log10(labels=scales::label_dollar()) +\n    facet_wrap(~ continent, ncol = 5) +\n    labs(x = \"Year\",\n         y = \"log GDP per capita\",\n         title = \"GDP per capita on Five Continents\",\n         caption = \"Data: Gapminder\")"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#the-midwest-dataset",
    "href": "slides/04-show-the-right-numbers.html#the-midwest-dataset",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "The midwest dataset",
    "text": "The midwest dataset\n\nCounty-level census data for Midwestern U.S. Counties\n\n\nmidwest\n\n# A tibble: 437 × 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   561 ADAMS   IL    0.052    66090      1271.    63917     1702            98\n 2   562 ALEXAN… IL    0.014    10626       759      7054     3496            19\n 3   563 BOND    IL    0.022    14991       681.    14477      429            35\n 4   564 BOONE   IL    0.017    30806      1812.    29344      127            46\n 5   565 BROWN   IL    0.018     5836       324.     5264      547            14\n 6   566 BUREAU  IL    0.05     35688       714.    35157       50            65\n 7   567 CALHOUN IL    0.017     5322       313.     5298        1             8\n 8   568 CARROLL IL    0.027    16805       622.    16519      111            30\n 9   569 CASS    IL    0.024    13437       560.    13384       16             8\n10   570 CHAMPA… IL    0.058   173025      2983.   146506    16559           331\n# ℹ 427 more rows\n# ℹ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#stat_-functions-behind-the-scenes",
    "href": "slides/04-show-the-right-numbers.html#stat_-functions-behind-the-scenes",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "stat_ functions behind the scenes",
    "text": "stat_ functions behind the scenes\n\n\np &lt;- ggplot(data = midwest, \n            mapping = aes(x = area))\n\np + geom_histogram()\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nHere the default stat_ function for this geom has to make a choice. It is letting us know we might want to override it."
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#stat_-functions-behind-the-scenes-1",
    "href": "slides/04-show-the-right-numbers.html#stat_-functions-behind-the-scenes-1",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "stat_ functions behind the scenes",
    "text": "stat_ functions behind the scenes\n\n\np &lt;- ggplot(data = midwest, \n            mapping = aes(x = area))\n\np + geom_histogram(bins = 10)\n\n\n\n\n\n\n\n\n\n\nWe can choose either the number of bins or the binwidth"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#compare-two-distributions",
    "href": "slides/04-show-the-right-numbers.html#compare-two-distributions",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Compare two distributions",
    "text": "Compare two distributions\n\n\n## Two state codes\noh_wi &lt;- c(\"OH\", \"WI\")\n\nmidwest |&gt; \n  filter(state %in% oh_wi) |&gt; \n  ggplot(mapping = aes(x = percollege, \n                       fill = state)) + \n  geom_histogram(alpha = 0.5, \n                 position = \"identity\")\n\n\n\n\n\n\n\n\n\n\nHere we do the whole thing in a pipeline using the pipe and the dplyr verb filter() to subset rows of the data by some condition.\nExperiment with leaving the position argument out, or changing it to \"dodge\"."
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#geom_density",
    "href": "slides/04-show-the-right-numbers.html#geom_density",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "geom_density()",
    "text": "geom_density()\n\n\np &lt;- ggplot(data = midwest, \n            mapping = aes(x = area))\n\np + geom_density()"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#geom_density-1",
    "href": "slides/04-show-the-right-numbers.html#geom_density-1",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "geom_density()",
    "text": "geom_density()\n\n\np &lt;- ggplot(data = midwest,\n            mapping = aes(x = area, \n                          fill = state, \n                          color = state))\np + geom_density(alpha = 0.3)"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#geom_density-2",
    "href": "slides/04-show-the-right-numbers.html#geom_density-2",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "geom_density()",
    "text": "geom_density()\n\n\nmidwest |&gt;\n  filter(state %in% oh_wi) |&gt; \n  ggplot(mapping = aes(x = area,\n                       fill = state, \n                       color = state)) + \n  geom_density(mapping = aes(y = after_stat(ndensity)), \n               alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\nndensity here is not in our data! It’s computed. Histogram and density geoms have default statistics, but you can ask them to do more. The after_stat functions can do this work for us."
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#some-made-up-data",
    "href": "slides/04-show-the-right-numbers.html#some-made-up-data",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Some made-up data",
    "text": "Some made-up data\n\nConsider 3,000 observations of some unit (e.g., a county) with summary measures for each group, and the population average.\n\n\ndf\n\n# A tibble: 3,000 × 5\n    unit   pop_a pop_b   pop_c pop_total\n   &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1     1  1.29   1.93  -0.0869     1.09 \n 2     2  0.522  0.536 -0.762      0.190\n 3     3  2.14   1.47  -0.616      1.15 \n 4     4  1.13   0.673 -0.242      0.575\n 5     5  1.04   1.30   1.18       1.12 \n 6     6  1.80   0.140  2.05       1.33 \n 7     7  0.186  1.30  -0.709      0.476\n 8     8 -0.953  0.520 -2.44      -0.767\n 9     9  0.700  1.66  -1.09       0.749\n10    10  0.0416 0.484 -0.180      0.177\n# ℹ 2,990 more rows"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#get-the-data-into-long-format",
    "href": "slides/04-show-the-right-numbers.html#get-the-data-into-long-format",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Get the data into long format!",
    "text": "Get the data into long format!\n\n\n\n df\n\n\n\n\n# A tibble: 3,000 × 5\n    unit   pop_a pop_b   pop_c pop_total\n   &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1     1  1.29   1.93  -0.0869     1.09 \n 2     2  0.522  0.536 -0.762      0.190\n 3     3  2.14   1.47  -0.616      1.15 \n 4     4  1.13   0.673 -0.242      0.575\n 5     5  1.04   1.30   1.18       1.12 \n 6     6  1.80   0.140  2.05       1.33 \n 7     7  0.186  1.30  -0.709      0.476\n 8     8 -0.953  0.520 -2.44      -0.767\n 9     9  0.700  1.66  -1.09       0.749\n10    10  0.0416 0.484 -0.180      0.177\n# ℹ 2,990 more rows"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#get-the-data-into-long-format-1",
    "href": "slides/04-show-the-right-numbers.html#get-the-data-into-long-format-1",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Get the data into long format!",
    "text": "Get the data into long format!\n\n\n\n df |&gt;\n  pivot_longer(cols = pop_a:pop_total)\n\n\n\n\n# A tibble: 12,000 × 3\n    unit name        value\n   &lt;int&gt; &lt;chr&gt;       &lt;dbl&gt;\n 1     1 pop_a      1.29  \n 2     1 pop_b      1.93  \n 3     1 pop_c     -0.0869\n 4     1 pop_total  1.09  \n 5     2 pop_a      0.522 \n 6     2 pop_b      0.536 \n 7     2 pop_c     -0.762 \n 8     2 pop_total  0.190 \n 9     3 pop_a      2.14  \n10     3 pop_b      1.47  \n# ℹ 11,990 more rows"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#first-effort-hard-to-read",
    "href": "slides/04-show-the-right-numbers.html#first-effort-hard-to-read",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "First effort: Hard to read",
    "text": "First effort: Hard to read\n\n\ndf |&gt; \n  pivot_longer(cols = pop_a:pop_total)  |&gt; \n  ggplot() + \n  geom_histogram(mapping = aes(x = value, \n                               y = after_stat(ncount), \n                          color = name, fill = name), \n            stat = \"bin\", bins = 20, \n            linewidth = 0.5, alpha = 0.7,\n            position = \"identity\") + \n  labs(x = \"Measure\", y = \"Scaled Count\", color = \"Group\", \n       fill = \"Group\",\n       title = \"Comparing Subgroups: Histograms\")\n\n\n\n\n\n\n\n\n\n\nAgain, after_stat(ncount) is computed."
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#a-little-pivot-trick",
    "href": "slides/04-show-the-right-numbers.html#a-little-pivot-trick",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "A little pivot trick",
    "text": "A little pivot trick\n\n\n\n# Treat pop_a to pop_total as a single variable\ndf\n\n\n\n\n# A tibble: 3,000 × 5\n    unit   pop_a pop_b   pop_c pop_total\n   &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1     1  1.29   1.93  -0.0869     1.09 \n 2     2  0.522  0.536 -0.762      0.190\n 3     3  2.14   1.47  -0.616      1.15 \n 4     4  1.13   0.673 -0.242      0.575\n 5     5  1.04   1.30   1.18       1.12 \n 6     6  1.80   0.140  2.05       1.33 \n 7     7  0.186  1.30  -0.709      0.476\n 8     8 -0.953  0.520 -2.44      -0.767\n 9     9  0.700  1.66  -1.09       0.749\n10    10  0.0416 0.484 -0.180      0.177\n# ℹ 2,990 more rows"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#a-little-pivot-trick-1",
    "href": "slides/04-show-the-right-numbers.html#a-little-pivot-trick-1",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "A little pivot trick",
    "text": "A little pivot trick\n\n\n\n# Treat pop_a to pop_total as a single variable\ndf |&gt;\n  pivot_longer(cols = pop_a:pop_total)\n\n\n\n\n# A tibble: 12,000 × 3\n    unit name        value\n   &lt;int&gt; &lt;chr&gt;       &lt;dbl&gt;\n 1     1 pop_a      1.29  \n 2     1 pop_b      1.93  \n 3     1 pop_c     -0.0869\n 4     1 pop_total  1.09  \n 5     2 pop_a      0.522 \n 6     2 pop_b      0.536 \n 7     2 pop_c     -0.762 \n 8     2 pop_total  0.190 \n 9     3 pop_a      2.14  \n10     3 pop_b      1.47  \n# ℹ 11,990 more rows"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#a-little-pivot-trick-2",
    "href": "slides/04-show-the-right-numbers.html#a-little-pivot-trick-2",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "A little pivot trick",
    "text": "A little pivot trick\n\n\n\n# Just treat pop_a to pop_c as the single variable.\n# Notice that pop_total just gets repeated.\n df\n\n\n\n\n# A tibble: 3,000 × 5\n    unit   pop_a pop_b   pop_c pop_total\n   &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1     1  1.29   1.93  -0.0869     1.09 \n 2     2  0.522  0.536 -0.762      0.190\n 3     3  2.14   1.47  -0.616      1.15 \n 4     4  1.13   0.673 -0.242      0.575\n 5     5  1.04   1.30   1.18       1.12 \n 6     6  1.80   0.140  2.05       1.33 \n 7     7  0.186  1.30  -0.709      0.476\n 8     8 -0.953  0.520 -2.44      -0.767\n 9     9  0.700  1.66  -1.09       0.749\n10    10  0.0416 0.484 -0.180      0.177\n# ℹ 2,990 more rows"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#a-little-pivot-trick-3",
    "href": "slides/04-show-the-right-numbers.html#a-little-pivot-trick-3",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "A little pivot trick",
    "text": "A little pivot trick\n\n\n\n# Just treat pop_a to pop_c as the single variable.\n# Notice that pop_total just gets repeated.\n df |&gt;\n  pivot_longer(cols = pop_a:pop_c)\n\n\n\n\n# A tibble: 9,000 × 4\n    unit pop_total name    value\n   &lt;int&gt;     &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1     1     1.09  pop_a  1.29  \n 2     1     1.09  pop_b  1.93  \n 3     1     1.09  pop_c -0.0869\n 4     2     0.190 pop_a  0.522 \n 5     2     0.190 pop_b  0.536 \n 6     2     0.190 pop_c -0.762 \n 7     3     1.15  pop_a  2.14  \n 8     3     1.15  pop_b  1.47  \n 9     3     1.15  pop_c -0.616 \n10     4     0.575 pop_a  1.13  \n# ℹ 8,990 more rows"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#now-facet-with-that-data",
    "href": "slides/04-show-the-right-numbers.html#now-facet-with-that-data",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Now facet with that data",
    "text": "Now facet with that data\n\n\n\np_out &lt;- df |&gt;\n  pivot_longer(cols = pop_a:pop_c) |&gt;\n  ggplot() + \n  geom_histogram(mapping = aes(x = pop_total, \n                               y = after_stat(ncount)), \n                bins = 20, alpha = 0.7,\n                fill = \"gray40\", linewidth = 0.5) + \n  geom_histogram(mapping = aes(x = value, \n                               y = after_stat(ncount), \n                          color = name, fill = name), \n            stat = \"bin\", bins = 20, linewidth = 0.5,\n            alpha = 0.5) + \n  guides(color = \"none\", fill = \"none\") + \n  labs(x = \"Measure\", y = \"Scaled Count\", \n       title = \"Comparing Subgroups: Histograms\", \n       subtitle = \"Reference distribution shown in gray\") + \n  facet_wrap(~ name, nrow = 1) \n\n\n\nRemember, we can layer geoms one on top of the other. Here we call geom_histogram() twice. What happens if you comment one or other of them out?\nThe call to guides() turns off the legend for the color and fill, because we don’t need them."
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#now-facet-with-that-data-1",
    "href": "slides/04-show-the-right-numbers.html#now-facet-with-that-data-1",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Now facet with that data",
    "text": "Now facet with that data"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#sometimes-no-counting-is-needed",
    "href": "slides/04-show-the-right-numbers.html#sometimes-no-counting-is-needed",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Sometimes no counting is needed",
    "text": "Sometimes no counting is needed\n\ntitanic\n\n      fate    sex    n percent\n1 perished   male 1364    62.0\n2 perished female  126     5.7\n3 survived   male  367    16.7\n4 survived female  344    15.6\n\n\n\nHere we just have a summary table and want to plot a few numbers directly in a bar chart."
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#geom_bar-wants-to-count-up",
    "href": "slides/04-show-the-right-numbers.html#geom_bar-wants-to-count-up",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "geom_bar() wants to count up",
    "text": "geom_bar() wants to count up\n\nBy default geom_bar() tries to count up data by category. (Really it’s the stat_count() function that does this behind the scenes.) By saying stat=\"identity\" we explicitly tell it not to do that. This also allows us to use a y mapping. Normally this would be the result of the counting up.\n\n\n\np &lt;- ggplot(data = titanic,\n            mapping = aes(x = fate, \n                          y = percent, \n                          fill = sex))\np + geom_bar(stat = \"identity\")"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#geom_bar-stacks-by-default",
    "href": "slides/04-show-the-right-numbers.html#geom_bar-stacks-by-default",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "geom_bar() stacks by default",
    "text": "geom_bar() stacks by default\n\n\np &lt;- ggplot(data = titanic,\n            mapping = aes(x = fate, \n                          y = percent, \n                          fill = sex))\np + geom_bar(stat = \"identity\", \n             position = \"dodge\") \n\n\n\n\n\n\n\n\n\n\nPosition arguments adjust whether the things drawn are placed on top of one another (\"stack\"), side-by-side (\"dodge\"), or taken as-is (\"identity\")."
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#a-quick-theme-adjustment",
    "href": "slides/04-show-the-right-numbers.html#a-quick-theme-adjustment",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "A quick theme() adjustment",
    "text": "A quick theme() adjustment\nThe theme() function controls the styling of parts of the plot that don’t belong to its “grammatical” structure. That is, that are not contributing to directly representing data.\n\n\np &lt;- ggplot(data = titanic,\n            mapping = aes(x = fate, \n                          y = percent, \n                          fill = sex))\np + geom_bar(stat = \"identity\", \n             position = \"dodge\") +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#for-convenience-use-geom_col",
    "href": "slides/04-show-the-right-numbers.html#for-convenience-use-geom_col",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "For convenience, use geom_col()",
    "text": "For convenience, use geom_col()\n\n\np &lt;- ggplot(data = titanic,\n            mapping = aes(x = fate, \n                          y = percent, \n                          fill = sex))\np + geom_col(position = \"dodge\") + \n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\ngeom_col() assumes stat = \"identity\" by default. It’s for when you want to directly plot a table of values, rather than create a bar chart by summing over one varible categorized by another."
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#using-geom_col-for-thresholds",
    "href": "slides/04-show-the-right-numbers.html#using-geom_col-for-thresholds",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Using geom_col() for thresholds",
    "text": "Using geom_col() for thresholds\n\n\n\noecd_sum\n\n# A tibble: 57 × 5\n# Groups:   year [57]\n    year other   usa  diff hi_lo\n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1  1960  68.6  69.9 1.30  Below\n 2  1961  69.2  70.4 1.20  Below\n 3  1962  68.9  70.2 1.30  Below\n 4  1963  69.1  70   0.900 Below\n 5  1964  69.5  70.3 0.800 Below\n 6  1965  69.6  70.3 0.700 Below\n 7  1966  69.9  70.3 0.400 Below\n 8  1967  70.1  70.7 0.600 Below\n 9  1968  70.1  70.4 0.300 Below\n10  1969  70.1  70.6 0.5   Below\n# ℹ 47 more rows\n\n\n\n\nData comparing U.S. average life expectancy to the rest of the OECD average.\ndiff is difference in years with respect to the U.S.\nhi_lo is a flag saying whether the OECD is above or below the U.S."
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#using-geom_col-for-thresholds-1",
    "href": "slides/04-show-the-right-numbers.html#using-geom_col-for-thresholds-1",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Using geom_col() for thresholds",
    "text": "Using geom_col() for thresholds\n\n\n\np &lt;- ggplot(data = oecd_sum, \n            mapping = aes(x = year, \n                          y = diff, \n                          fill = hi_lo))\n\np_out &lt;- p + geom_col() + \n  geom_hline(yintercept = 0, linewidth = 1.2) + \n  guides(fill = \"none\") + \n  labs(x = NULL, \n       y = \"Difference in Years\", \n       title = \"The U.S. Life Expectancy Gap\", \n       subtitle = \"Difference between U.S. and \n       OECD average life expectancies, 1960-2015\",\n       caption = \"Data: OECD.\")\n\n\n\ngeom_hline() doesn’t take any data argument. It just draws a horizontal line with a given y-intercept.\nx = NULL means “Don’t label the x-axis (not even with the default value, the variable name)."
  },
  {
    "objectID": "slides/04-show-the-right-numbers.html#using-geom_col-for-thresholds-2",
    "href": "slides/04-show-the-right-numbers.html#using-geom_col-for-thresholds-2",
    "title": "Data Visualization - 4. Show the Right Numbers",
    "section": "Using geom_col() for thresholds",
    "text": "Using geom_col() for thresholds"
  },
  {
    "objectID": "slides/01-looking-at-data-2.html#workhorses",
    "href": "slides/01-looking-at-data-2.html#workhorses",
    "title": "Data Visualization - 1. Looking at Data (part 2)",
    "section": "Workhorses",
    "text": "Workhorses\n\nHistogram"
  },
  {
    "objectID": "slides/01-looking-at-data-2.html#workhorses-1",
    "href": "slides/01-looking-at-data-2.html#workhorses-1",
    "title": "Data Visualization - 1. Looking at Data (part 2)",
    "section": "Workhorses",
    "text": "Workhorses\n\nScatterplot"
  },
  {
    "objectID": "slides/01-looking-at-data-2.html#workhorses-2",
    "href": "slides/01-looking-at-data-2.html#workhorses-2",
    "title": "Data Visualization - 1. Looking at Data (part 2)",
    "section": "Workhorses",
    "text": "Workhorses\n\nTrend"
  },
  {
    "objectID": "slides/01-looking-at-data-2.html#workhorses-3",
    "href": "slides/01-looking-at-data-2.html#workhorses-3",
    "title": "Data Visualization - 1. Looking at Data (part 2)",
    "section": "Workhorses",
    "text": "Workhorses\n\nPoint-and-range"
  },
  {
    "objectID": "slides/01-looking-at-data-2.html#workhorses-4",
    "href": "slides/01-looking-at-data-2.html#workhorses-4",
    "title": "Data Visualization - 1. Looking at Data (part 2)",
    "section": "Workhorses",
    "text": "Workhorses\n\nFaceting"
  },
  {
    "objectID": "slides/01-looking-at-data-2.html#show-ponies",
    "href": "slides/01-looking-at-data-2.html#show-ponies",
    "title": "Data Visualization - 1. Looking at Data (part 2)",
    "section": "Show Ponies",
    "text": "Show Ponies\n\nCongressional comparison"
  },
  {
    "objectID": "slides/01-looking-at-data-2.html#show-ponies-1",
    "href": "slides/01-looking-at-data-2.html#show-ponies-1",
    "title": "Data Visualization - 1. Looking at Data (part 2)",
    "section": "Show Ponies",
    "text": "Show Ponies\n\nSeveral plots at once"
  },
  {
    "objectID": "slides/01-looking-at-data-2.html#show-ponies-2",
    "href": "slides/01-looking-at-data-2.html#show-ponies-2",
    "title": "Data Visualization - 1. Looking at Data (part 2)",
    "section": "Show Ponies",
    "text": "Show Ponies\n\nBeeswarm plot"
  },
  {
    "objectID": "slides/01-looking-at-data-2.html#show-ponies-3",
    "href": "slides/01-looking-at-data-2.html#show-ponies-3",
    "title": "Data Visualization - 1. Looking at Data (part 2)",
    "section": "Show Ponies",
    "text": "Show Ponies\n\nLexis Surface"
  },
  {
    "objectID": "slides/01-looking-at-data-2.html#show-ponies-4",
    "href": "slides/01-looking-at-data-2.html#show-ponies-4",
    "title": "Data Visualization - 1. Looking at Data (part 2)",
    "section": "Show Ponies",
    "text": "Show Ponies\n\nFaceted maps"
  },
  {
    "objectID": "slides/01-looking-at-data-2.html#unicorns",
    "href": "slides/01-looking-at-data-2.html#unicorns",
    "title": "Data Visualization - 1. Looking at Data (part 2)",
    "section": "Unicorns …",
    "text": "Unicorns …\n\nThe inevitable Minard"
  },
  {
    "objectID": "slides/01-looking-at-data-2.html#unicorns-1",
    "href": "slides/01-looking-at-data-2.html#unicorns-1",
    "title": "Data Visualization - 1. Looking at Data (part 2)",
    "section": "Unicorns …",
    "text": "Unicorns …\n\nSwedish mortality"
  },
  {
    "objectID": "slides/01-looking-at-data-2.html#or-monsters",
    "href": "slides/01-looking-at-data-2.html#or-monsters",
    "title": "Data Visualization - 1. Looking at Data (part 2)",
    "section": "… or monsters",
    "text": "… or monsters\n\n\nNetwork chords"
  },
  {
    "objectID": "slides/01-looking-at-data-1.html#housekeeping",
    "href": "slides/01-looking-at-data-1.html#housekeeping",
    "title": "Data Visualization - 1. Looking at Data (part 1)",
    "section": "Housekeeping",
    "text": "Housekeeping\n\n10:00am to 12:30pm US EST\nBreak from 12:30:pm to 1:30pm\n1:30pm to 3:30pm\nUse the Zoom chat to ask questions, or raise a hand with"
  },
  {
    "objectID": "slides/01-looking-at-data-1.html#in-between-class-sessions",
    "href": "slides/01-looking-at-data-1.html#in-between-class-sessions",
    "title": "Data Visualization - 1. Looking at Data (part 1)",
    "section": "In between class sessions",
    "text": "In between class sessions"
  },
  {
    "objectID": "slides/01-looking-at-data-1.html#my-setup-and-yours",
    "href": "slides/01-looking-at-data-1.html#my-setup-and-yours",
    "title": "Data Visualization - 1. Looking at Data (part 1)",
    "section": "My Setup and Yours",
    "text": "My Setup and Yours\n\nTalking, Slides, and Live-Coding in RStudio\nFollow along and take notes in RStudio yourself\n\nThe course packet is also an RStudio project"
  },
  {
    "objectID": "slides/01-looking-at-data-1.html#get-up-and-running",
    "href": "slides/01-looking-at-data-1.html#get-up-and-running",
    "title": "Data Visualization - 1. Looking at Data (part 1)",
    "section": "Get up and Running",
    "text": "Get up and Running"
  },
  {
    "objectID": "slides/01-looking-at-data-1.html#try-rendering-your-notes",
    "href": "slides/01-looking-at-data-1.html#try-rendering-your-notes",
    "title": "Data Visualization - 1. Looking at Data (part 1)",
    "section": "Try rendering your notes",
    "text": "Try rendering your notes\n\n\nDon’t worry if it’s not clear what’s happening at this point."
  },
  {
    "objectID": "slides/01-looking-at-data-1.html#now-write-the-following-code",
    "href": "slides/01-looking-at-data-1.html#now-write-the-following-code",
    "title": "Data Visualization - 1. Looking at Data (part 1)",
    "section": "Now write the following code",
    "text": "Now write the following code\nWrite this out inside the “code chunk” in your notes.\n\np &lt;- ggplot(data = gapminder, \n            mapping = aes(x = gdpPercap, \n                          y = lifeExp))  \n\n\np + geom_point()\n\n… And Render your document again."
  },
  {
    "objectID": "slides/01-looking-at-data-1.html#now-write-the-following-code-1",
    "href": "slides/01-looking-at-data-1.html#now-write-the-following-code-1",
    "title": "Data Visualization - 1. Looking at Data (part 1)",
    "section": "Now write the following code",
    "text": "Now write the following code\nWrite this out inside the “code chunk” in your notes.\n\n\np &lt;- ggplot(data = gapminder, \n            mapping = aes(x = gdpPercap, \n                          y = lifeExp))  \n\n\np + geom_point()\n\n\n\n\n\n\n\n\n\n… And Render your document again."
  },
  {
    "objectID": "slides/01-looking-at-data-1.html#tuftes-data-to-ink-ratio",
    "href": "slides/01-looking-at-data-1.html#tuftes-data-to-ink-ratio",
    "title": "Data Visualization - 1. Looking at Data (part 1)",
    "section": "Tufte’s “Data to Ink Ratio”",
    "text": "Tufte’s “Data to Ink Ratio”"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#load-our-packages",
    "href": "slides/08-polishing-and-presenting-plots.html#load-our-packages",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Load our packages",
    "text": "Load our packages\n\nlibrary(here)       # manage file paths\nlibrary(tidyverse)  # your friend and mine\nlibrary(socviz)     # data and some useful functions\nlibrary(ggrepel)    # Text and labels\nlibrary(colorspace) # luminance-balanced palettes\nlibrary(scales)      # scale adjustments and enhancements\nlibrary(ggforce)    # useful enhancements to ggplot"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time",
    "href": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build your plots a piece at a time",
    "text": "Build your plots a piece at a time\n\nasasec &lt;- as_tibble(asasec)\nasasec\n\n# A tibble: 572 × 9\n   Section        Sname Beginning Revenues Expenses Ending Journal  Year Members\n   &lt;fct&gt;          &lt;fct&gt;     &lt;int&gt;    &lt;int&gt;    &lt;int&gt;  &lt;int&gt; &lt;fct&gt;   &lt;int&gt;   &lt;int&gt;\n 1 Aging and the… Aging     12752    12104    12007  12849 No       2005     598\n 2 Alcohol, Drug… Alco…     11933     1144      400  12677 No       2005     301\n 3 Altruism and … Altr…      1139     1862     1875   1126 No       2005      NA\n 4 Animals and S… Anim…       473      820     1116    177 No       2005     209\n 5 Asia/Asian Am… Asia       9056     2116     1710   9462 No       2005     365\n 6 Body and Embo… Body       3408     1618     1920   3106 No       2005      NA\n 7 Children and … Chil…      3692     3653     3713   3632 No       2005     418\n 8 Coll Behavior… CBSM       8127     3470     2704   8893 No       2005     708\n 9 Communication… CITA…     17093     4800     4804  17089 No       2005     301\n10 Community and… Comm…     26598    24883    23379  28102 Yes      2005     721\n# ℹ 562 more rows"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-1",
    "href": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-1",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build your plots a piece at a time",
    "text": "Build your plots a piece at a time"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-2",
    "href": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-2",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build your plots a piece at a time",
    "text": "Build your plots a piece at a time"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-3",
    "href": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-3",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build your plots a piece at a time",
    "text": "Build your plots a piece at a time\n\n\n\nasasec\n\n\n\n\n# A tibble: 572 × 9\n   Section        Sname Beginning Revenues Expenses Ending Journal  Year Members\n   &lt;fct&gt;          &lt;fct&gt;     &lt;int&gt;    &lt;int&gt;    &lt;int&gt;  &lt;int&gt; &lt;fct&gt;   &lt;int&gt;   &lt;int&gt;\n 1 Aging and the… Aging     12752    12104    12007  12849 No       2005     598\n 2 Alcohol, Drug… Alco…     11933     1144      400  12677 No       2005     301\n 3 Altruism and … Altr…      1139     1862     1875   1126 No       2005      NA\n 4 Animals and S… Anim…       473      820     1116    177 No       2005     209\n 5 Asia/Asian Am… Asia       9056     2116     1710   9462 No       2005     365\n 6 Body and Embo… Body       3408     1618     1920   3106 No       2005      NA\n 7 Children and … Chil…      3692     3653     3713   3632 No       2005     418\n 8 Coll Behavior… CBSM       8127     3470     2704   8893 No       2005     708\n 9 Communication… CITA…     17093     4800     4804  17089 No       2005     301\n10 Community and… Comm…     26598    24883    23379  28102 Yes      2005     721\n# ℹ 562 more rows"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-4",
    "href": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-4",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build your plots a piece at a time",
    "text": "Build your plots a piece at a time\n\n\n\nasasec |&gt;\n  filter(Year == 2014)\n\n\n\n\n# A tibble: 52 × 9\n   Section        Sname Beginning Revenues Expenses Ending Journal  Year Members\n   &lt;fct&gt;          &lt;fct&gt;     &lt;int&gt;    &lt;int&gt;    &lt;int&gt;  &lt;int&gt; &lt;fct&gt;   &lt;int&gt;   &lt;int&gt;\n 1 Aging and the… Aging     12752    12104    12007  12849 No       2014     580\n 2 Alcohol, Drug… Alco…     11933     1144      400  12677 No       2014     173\n 3 Altruism and … Altr…      1139     1862     1875   1126 No       2014     318\n 4 Animals and S… Anim…       473      820     1116    177 No       2014     154\n 5 Asia/Asian Am… Asia       9056     2116     1710   9462 No       2014     336\n 6 Body and Embo… Body       3408     1618     1920   3106 No       2014     312\n 7 Children and … Chil…      3692     3653     3713   3632 No       2014     421\n 8 Coll Behavior… CBSM       8127     3470     2704   8893 No       2014     835\n 9 Communication… CITA…     17093     4800     4804  17089 No       2014     371\n10 Community and… Comm…     26598    24883    23379  28102 Yes      2014     630\n# ℹ 42 more rows"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-5",
    "href": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-5",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build your plots a piece at a time",
    "text": "Build your plots a piece at a time\n\n\n\nasasec |&gt;\n  filter(Year == 2014) |&gt;\n  ggplot(mapping = aes(x = Members,\n                       y = Revenues,\n                       label = Sname))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-6",
    "href": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-6",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build your plots a piece at a time",
    "text": "Build your plots a piece at a time\n\n\n\nasasec |&gt;\n  filter(Year == 2014) |&gt;\n  ggplot(mapping = aes(x = Members,\n                       y = Revenues,\n                       label = Sname)) +\n  geom_smooth(method = \"lm\",\n              se = FALSE,\n              color = \"gray60\")"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-7",
    "href": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-7",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build your plots a piece at a time",
    "text": "Build your plots a piece at a time\n\n\n\nasasec |&gt;\n  filter(Year == 2014) |&gt;\n  ggplot(mapping = aes(x = Members,\n                       y = Revenues,\n                       label = Sname)) +\n  geom_smooth(method = \"lm\",\n              se = FALSE,\n              color = \"gray60\") +\n  geom_point(mapping = aes(color = Journal),\n             size = rel(3))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-8",
    "href": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-8",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build your plots a piece at a time",
    "text": "Build your plots a piece at a time\n\n\n\nasasec |&gt;\n  filter(Year == 2014) |&gt;\n  ggplot(mapping = aes(x = Members,\n                       y = Revenues,\n                       label = Sname)) +\n  geom_smooth(method = \"lm\",\n              se = FALSE,\n              color = \"gray60\") +\n  geom_point(mapping = aes(color = Journal),\n             size = rel(3)) +\n  geom_text_repel(data=subset(asasec,\n                    Year == 2014 &\n                    Revenues &gt; 7000),\n                    size = rel(5),\n                    mapping =\n                    aes(family = \"Tenso Slide\"))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-9",
    "href": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-9",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build your plots a piece at a time",
    "text": "Build your plots a piece at a time\n\n\n\nasasec |&gt;\n  filter(Year == 2014) |&gt;\n  ggplot(mapping = aes(x = Members,\n                       y = Revenues,\n                       label = Sname)) +\n  geom_smooth(method = \"lm\",\n              se = FALSE,\n              color = \"gray60\") +\n  geom_point(mapping = aes(color = Journal),\n             size = rel(3)) +\n  geom_text_repel(data=subset(asasec,\n                    Year == 2014 &\n                    Revenues &gt; 7000),\n                    size = rel(5),\n                    mapping =\n                    aes(family = \"Tenso Slide\")) +\n  scale_y_continuous(labels =\n                       scales::label_dollar())"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-10",
    "href": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-10",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build your plots a piece at a time",
    "text": "Build your plots a piece at a time\n\n\n\nasasec |&gt;\n  filter(Year == 2014) |&gt;\n  ggplot(mapping = aes(x = Members,\n                       y = Revenues,\n                       label = Sname)) +\n  geom_smooth(method = \"lm\",\n              se = FALSE,\n              color = \"gray60\") +\n  geom_point(mapping = aes(color = Journal),\n             size = rel(3)) +\n  geom_text_repel(data=subset(asasec,\n                    Year == 2014 &\n                    Revenues &gt; 7000),\n                    size = rel(5),\n                    mapping =\n                    aes(family = \"Tenso Slide\")) +\n  scale_y_continuous(labels =\n                       scales::label_dollar()) +\n  labs(x=\"Membership\", y=\"Revenues\",\n        color = \"Section has own Journal\",\n        title = \"ASA Sections\",\n        subtitle = \"2014 Calendar year.\",\n        caption = \"Source: ASA annual report.\")"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-11",
    "href": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-11",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build your plots a piece at a time",
    "text": "Build your plots a piece at a time\n\n\n\nasasec |&gt;\n  filter(Year == 2014) |&gt;\n  ggplot(mapping = aes(x = Members,\n                       y = Revenues,\n                       label = Sname)) +\n  geom_smooth(method = \"lm\",\n              se = FALSE,\n              color = \"gray60\") +\n  geom_point(mapping = aes(color = Journal),\n             size = rel(3)) +\n  geom_text_repel(data=subset(asasec,\n                    Year == 2014 &\n                    Revenues &gt; 7000),\n                    size = rel(5),\n                    mapping =\n                    aes(family = \"Tenso Slide\")) +\n  scale_y_continuous(labels =\n                       scales::label_dollar()) +\n  labs(x=\"Membership\", y=\"Revenues\",\n        color = \"Section has own Journal\",\n        title = \"ASA Sections\",\n        subtitle = \"2014 Calendar year.\",\n        caption = \"Source: ASA annual report.\") +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-12",
    "href": "slides/08-polishing-and-presenting-plots.html#build-your-plots-a-piece-at-a-time-12",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build your plots a piece at a time",
    "text": "Build your plots a piece at a time\n\n\n\nasasec |&gt;\n  filter(Year == 2014) |&gt;\n  ggplot(mapping = aes(x = Members,\n                       y = Revenues,\n                       label = Sname)) +\n  geom_smooth(method = \"lm\",\n              se = FALSE,\n              color = \"gray60\") +\n  geom_point(mapping = aes(color = Journal),\n             size = rel(3)) +\n  geom_text_repel(data=subset(asasec,\n                    Year == 2014 &\n                    Revenues &gt; 7000),\n                    size = rel(5),\n                    mapping =\n                    aes(family = \"Tenso Slide\")) +\n  scale_y_continuous(labels =\n                       scales::label_dollar()) +\n  labs(x=\"Membership\", y=\"Revenues\",\n        color = \"Section has own Journal\",\n        title = \"ASA Sections\",\n        subtitle = \"2014 Calendar year.\",\n        caption = \"Source: ASA annual report.\") +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#working-with-color-and-fill-scales",
    "href": "slides/08-polishing-and-presenting-plots.html#working-with-color-and-fill-scales",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Working with color and fill scales",
    "text": "Working with color and fill scales\n\nscale_&lt;MAPPING&gt;_&lt;KIND&gt;()\n\n\nScale functions control the display of the variables they map. So to change the colors for color or fill mappings, you adjust the corresponding scale_ function, not the theme() function.\nggplot has several color palettes built in. A variety of packages provide others."
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\norgandata\n\n\n\n\n# A tibble: 238 × 21\n   country   year       donors   pop pop_dens   gdp gdp_lag health health_lag\n   &lt;chr&gt;     &lt;date&gt;      &lt;dbl&gt; &lt;int&gt;    &lt;dbl&gt; &lt;int&gt;   &lt;int&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n 1 Australia NA          NA    17065    0.220 16774   16591   1300       1224\n 2 Australia 1991-01-01  12.1  17284    0.223 17171   16774   1379       1300\n 3 Australia 1992-01-01  12.4  17495    0.226 17914   17171   1455       1379\n 4 Australia 1993-01-01  12.5  17667    0.228 18883   17914   1540       1455\n 5 Australia 1994-01-01  10.2  17855    0.231 19849   18883   1626       1540\n 6 Australia 1995-01-01  10.2  18072    0.233 21079   19849   1737       1626\n 7 Australia 1996-01-01  10.6  18311    0.237 21923   21079   1846       1737\n 8 Australia 1997-01-01  10.3  18518    0.239 22961   21923   1948       1846\n 9 Australia 1998-01-01  10.5  18711    0.242 24148   22961   2077       1948\n10 Australia 1999-01-01   8.67 18926    0.244 25445   24148   2231       2077\n# ℹ 228 more rows\n# ℹ 12 more variables: pubhealth &lt;dbl&gt;, roads &lt;dbl&gt;, cerebvas &lt;int&gt;,\n#   assault &lt;int&gt;, external &lt;int&gt;, txp_pop &lt;dbl&gt;, world &lt;chr&gt;, opt &lt;chr&gt;,\n#   consent_law &lt;chr&gt;, consent_practice &lt;chr&gt;, consistent &lt;chr&gt;, ccode &lt;chr&gt;"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-1",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-1",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\norgandata |&gt;\n  ggplot(mapping = aes(x = roads,\n                       y = donors,\n                       color = world))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-2",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-2",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\norgandata |&gt;\n  ggplot(mapping = aes(x = roads,\n                       y = donors,\n                       color = world)) +\n  geom_point(size = 4)"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-3",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-3",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\norgandata |&gt;\n  ggplot(mapping = aes(x = roads,\n                       y = donors,\n                       color = world)) +\n  geom_point(size = 4) -&gt;\n  p"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-4",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-4",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\norgandata |&gt;\n  ggplot(mapping = aes(x = roads,\n                       y = donors,\n                       color = world)) +\n  geom_point(size = 4) -&gt;\n  p\n\n\n\n\n\n\np &lt;- organdata |&gt; \n  ggplot(mapping = aes(x = roads,\n                       y = donors, \n                       color = world)) + \n  geom_point(size = 4)"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-5",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-5",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\np"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-6",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-6",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\np +\n  scale_color_manual(\n  values = c(\"red\", \"green\", \"blue\"))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-7",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-7",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\np +\n  scale_color_manual(\n  values = c(\"red\", \"green\", \"blue\"))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-8",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-8",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\np"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-9",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-9",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\np +\n  scale_color_manual(\n  values = c(\"#1B9E77\",\"#D95F02\", \"#7570B3\"))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-10",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-10",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\np +\n  scale_color_manual(\n  values = c(\"#1B9E77\",\"#D95F02\", \"#7570B3\"))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-11",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-11",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\ncolkey &lt;- c(\"Corporatist\" = \"pink\",\n            \"Liberal\" = \"goldenrod\",\n            \"SocDem\" = \"firebrick\")"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-12",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-12",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\ncolkey &lt;- c(\"Corporatist\" = \"pink\",\n            \"Liberal\" = \"goldenrod\",\n            \"SocDem\" = \"firebrick\")\ncolkey\n\n\n\n\nCorporatist     Liberal      SocDem \n     \"pink\" \"goldenrod\" \"firebrick\""
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-13",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-13",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\ncolkey &lt;- c(\"Corporatist\" = \"pink\",\n            \"Liberal\" = \"goldenrod\",\n            \"SocDem\" = \"firebrick\")\ncolkey\n\np + scale_color_manual(\n  values = colkey)\n\n\n\n\nCorporatist     Liberal      SocDem \n     \"pink\" \"goldenrod\" \"firebrick\""
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-14",
    "href": "slides/08-polishing-and-presenting-plots.html#you-can-specify-scales-manually-14",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "You can specify scales manually",
    "text": "You can specify scales manually\n\n\n\ncolkey &lt;- c(\"Corporatist\" = \"pink\",\n            \"Liberal\" = \"goldenrod\",\n            \"SocDem\" = \"firebrick\")\ncolkey\n\np + scale_color_manual(\n  values = colkey)\n\n\n\n\nCorporatist     Liberal      SocDem \n     \"pink\" \"goldenrod\" \"firebrick\""
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#use-balanced-palettes",
    "href": "slides/08-polishing-and-presenting-plots.html#use-balanced-palettes",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Use balanced palettes",
    "text": "Use balanced palettes\n\n\n\nE.g., the RColorBrewer Palettes\nThese are available through the scale_color-brewer() and scale_fill_brewer() functions, as well as independently.\nSee the palettes with RColorBrewer::display.brewer.all()\n\n\nQualitative palettes"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#use-balanced-palettes-1",
    "href": "slides/08-polishing-and-presenting-plots.html#use-balanced-palettes-1",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Use balanced palettes",
    "text": "Use balanced palettes\n\n\n\nE.g., the RColorBrewer Palettes\nThese are available through the scale_color-brewer() and scale_fill_brewer() functions, as well as independently.\nSee the palettes with RColorBrewer::display.brewer.all()\n\n\nSequential palettes"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#use-balanced-palettes-2",
    "href": "slides/08-polishing-and-presenting-plots.html#use-balanced-palettes-2",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Use balanced palettes",
    "text": "Use balanced palettes\n\n\n\nE.g., the RColorBrewer Palettes\nThese are available through the scale_color-brewer() and scale_fill_brewer() functions, as well as independently.\nSee the palettes with RColorBrewer::display.brewer.all()\n\n\nDiverging palettes"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#qualitative-brewer-palettes",
    "href": "slides/08-polishing-and-presenting-plots.html#qualitative-brewer-palettes",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Qualitative Brewer Palettes",
    "text": "Qualitative Brewer Palettes\n\np + geom_point(size = 2) + \n  scale_color_brewer(palette = \"Set2\") +\n  labs(title = \"Set2\")\n\np + geom_point(size = 2) + \n  scale_color_brewer(palette = \"Pastel2\") +\n  labs(title = \"Pastel2\")\n\np + geom_point(size = 2) + \n  scale_color_brewer(palette = \"Dark2\") +\n  labs(title = \"Dark2\")\n\np + geom_point(size = 2) + \n  scale_color_brewer(palette = \"Accent\") +\n  labs(title = \"Accent\")"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#some-color-palettes",
    "href": "slides/08-polishing-and-presenting-plots.html#some-color-palettes",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Some color palettes",
    "text": "Some color palettes"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#the-colorspace-package-has-more",
    "href": "slides/08-polishing-and-presenting-plots.html#the-colorspace-package-has-more",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "The colorspace package has more",
    "text": "The colorspace package has more\n\nMany palettes"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#the-colorspace-function-convention",
    "href": "slides/08-polishing-and-presenting-plots.html#the-colorspace-function-convention",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "The colorspace function convention",
    "text": "The colorspace function convention\nscale_&lt;MAPPING&gt;_&lt;KIND&gt;&lt;COLORSCALE&gt;()\n\n\n\nscale_color_binned_diverging()\nscale_color_binned_qualitative()\nscale_color_binned_sequential()\nscale_color_continuous_diverging()\nscale_color_continuous_qualitative()\nscale_color_continuous_sequential()\nscale_color_discrete_diverging()\nscale_color_discrete_qualitative()\nscale_color_discrete_sequential()\n\nscale_fill_binned_diverging()\nscale_fill_binned_divergingx()\nscale_fill_binned_qualitative()\nscale_fill_binned_sequential()\nscale_fill_continuous_diverging()\nscale_fill_continuous_qualitative()\nscale_fill_continuous_sequential()\nscale_fill_discrete_diverging()\nscale_fill_discrete_qualitative()\nscale_fill_discrete_sequential()"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this",
    "href": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "We know how to build this",
    "text": "We know how to build this\n\n\n\n## Brighter Blue and Red\nparty_colors &lt;- c(\"royalblue1\", \"red2\")"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-1",
    "href": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-1",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "We know how to build this",
    "text": "We know how to build this\n\n\n\n## Brighter Blue and Red\nparty_colors &lt;- c(\"royalblue1\", \"red2\")\n\nggplot(data = subset(county_data,\n                     flipped == \"No\"),\n       mapping = aes(x = pop,\n                     y = black/100))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-2",
    "href": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-2",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "We know how to build this",
    "text": "We know how to build this\n\n\n\n## Brighter Blue and Red\nparty_colors &lt;- c(\"royalblue1\", \"red2\")\n\nggplot(data = subset(county_data,\n                     flipped == \"No\"),\n       mapping = aes(x = pop,\n                     y = black/100)) +\n  geom_point(alpha = 0.15, color = \"gray30\",\n             size = rel(2))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-3",
    "href": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-3",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "We know how to build this",
    "text": "We know how to build this\n\n\n\n## Brighter Blue and Red\nparty_colors &lt;- c(\"royalblue1\", \"red2\")\n\nggplot(data = subset(county_data,\n                     flipped == \"No\"),\n       mapping = aes(x = pop,\n                     y = black/100)) +\n  geom_point(alpha = 0.15, color = \"gray30\",\n             size = rel(2)) +\n  scale_x_log10(labels = label_comma())"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-4",
    "href": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-4",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "We know how to build this",
    "text": "We know how to build this\n\n\n\n## Brighter Blue and Red\nparty_colors &lt;- c(\"royalblue1\", \"red2\")\n\nggplot(data = subset(county_data,\n                     flipped == \"No\"),\n       mapping = aes(x = pop,\n                     y = black/100)) +\n  geom_point(alpha = 0.15, color = \"gray30\",\n             size = rel(2)) +\n  scale_x_log10(labels = label_comma()) +\n  geom_point(data = subset(county_data,\n                      flipped == \"Yes\"),\n             mapping = aes(x = pop, y = black/100,\n                           color = partywinner16),\n             size = rel(2))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-5",
    "href": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-5",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "We know how to build this",
    "text": "We know how to build this\n\n\n\n## Brighter Blue and Red\nparty_colors &lt;- c(\"royalblue1\", \"red2\")\n\nggplot(data = subset(county_data,\n                     flipped == \"No\"),\n       mapping = aes(x = pop,\n                     y = black/100)) +\n  geom_point(alpha = 0.15, color = \"gray30\",\n             size = rel(2)) +\n  scale_x_log10(labels = label_comma()) +\n  geom_point(data = subset(county_data,\n                      flipped == \"Yes\"),\n             mapping = aes(x = pop, y = black/100,\n                           color = partywinner16),\n             size = rel(2)) +\n  geom_text_repel(data = subset(county_data,\n              flipped == \"Yes\" & black  &gt; 25),\n                  mapping = aes(x = pop,\n                    y = black/100, label = state,\n                    family = \"Tenso Slide\",\n                    face = \"bold\"), size = rel(3.5))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-6",
    "href": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-6",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "We know how to build this",
    "text": "We know how to build this\n\n\n\n## Brighter Blue and Red\nparty_colors &lt;- c(\"royalblue1\", \"red2\")\n\nggplot(data = subset(county_data,\n                     flipped == \"No\"),\n       mapping = aes(x = pop,\n                     y = black/100)) +\n  geom_point(alpha = 0.15, color = \"gray30\",\n             size = rel(2)) +\n  scale_x_log10(labels = label_comma()) +\n  geom_point(data = subset(county_data,\n                      flipped == \"Yes\"),\n             mapping = aes(x = pop, y = black/100,\n                           color = partywinner16),\n             size = rel(2)) +\n  geom_text_repel(data = subset(county_data,\n              flipped == \"Yes\" & black  &gt; 25),\n                  mapping = aes(x = pop,\n                    y = black/100, label = state,\n                    family = \"Tenso Slide\",\n                    face = \"bold\"), size = rel(3.5)) +\n  scale_color_manual(values = party_colors)"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-7",
    "href": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-7",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "We know how to build this",
    "text": "We know how to build this\n\n\n\n## Brighter Blue and Red\nparty_colors &lt;- c(\"royalblue1\", \"red2\")\n\nggplot(data = subset(county_data,\n                     flipped == \"No\"),\n       mapping = aes(x = pop,\n                     y = black/100)) +\n  geom_point(alpha = 0.15, color = \"gray30\",\n             size = rel(2)) +\n  scale_x_log10(labels = label_comma()) +\n  geom_point(data = subset(county_data,\n                      flipped == \"Yes\"),\n             mapping = aes(x = pop, y = black/100,\n                           color = partywinner16),\n             size = rel(2)) +\n  geom_text_repel(data = subset(county_data,\n              flipped == \"Yes\" & black  &gt; 25),\n                  mapping = aes(x = pop,\n                    y = black/100, label = state,\n                    family = \"Tenso Slide\",\n                    face = \"bold\"), size = rel(3.5)) +\n  scale_color_manual(values = party_colors) +\n  scale_y_continuous(labels = label_percent())"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-8",
    "href": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-8",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "We know how to build this",
    "text": "We know how to build this\n\n\n\n## Brighter Blue and Red\nparty_colors &lt;- c(\"royalblue1\", \"red2\")\n\nggplot(data = subset(county_data,\n                     flipped == \"No\"),\n       mapping = aes(x = pop,\n                     y = black/100)) +\n  geom_point(alpha = 0.15, color = \"gray30\",\n             size = rel(2)) +\n  scale_x_log10(labels = label_comma()) +\n  geom_point(data = subset(county_data,\n                      flipped == \"Yes\"),\n             mapping = aes(x = pop, y = black/100,\n                           color = partywinner16),\n             size = rel(2)) +\n  geom_text_repel(data = subset(county_data,\n              flipped == \"Yes\" & black  &gt; 25),\n                  mapping = aes(x = pop,\n                    y = black/100, label = state,\n                    family = \"Tenso Slide\",\n                    face = \"bold\"), size = rel(3.5)) +\n  scale_color_manual(values = party_colors) +\n  scale_y_continuous(labels = label_percent()) +\n  labs(color = \"County flipped to ... \",\n       x = \"County Population (log scale)\",\n       y = \"Percent Black Population\",\n       title = \"Flipped counties, 2016\",\n       caption = \"Counties in gray did not flip.\")"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-9",
    "href": "slides/08-polishing-and-presenting-plots.html#we-know-how-to-build-this-9",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "We know how to build this",
    "text": "We know how to build this\n\n\n\n## Brighter Blue and Red\nparty_colors &lt;- c(\"royalblue1\", \"red2\")\n\nggplot(data = subset(county_data,\n                     flipped == \"No\"),\n       mapping = aes(x = pop,\n                     y = black/100)) +\n  geom_point(alpha = 0.15, color = \"gray30\",\n             size = rel(2)) +\n  scale_x_log10(labels = label_comma()) +\n  geom_point(data = subset(county_data,\n                      flipped == \"Yes\"),\n             mapping = aes(x = pop, y = black/100,\n                           color = partywinner16),\n             size = rel(2)) +\n  geom_text_repel(data = subset(county_data,\n              flipped == \"Yes\" & black  &gt; 25),\n                  mapping = aes(x = pop,\n                    y = black/100, label = state,\n                    family = \"Tenso Slide\",\n                    face = \"bold\"), size = rel(3.5)) +\n  scale_color_manual(values = party_colors) +\n  scale_y_continuous(labels = label_percent()) +\n  labs(color = \"County flipped to ... \",\n       x = \"County Population (log scale)\",\n       y = \"Percent Black Population\",\n       title = \"Flipped counties, 2016\",\n       caption = \"Counties in gray did not flip.\")"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-from-ideas-to-data",
    "href": "slides/08-polishing-and-presenting-plots.html#build-from-ideas-to-data",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build from ideas to data",
    "text": "Build from ideas to data\n\nThe relationship of interest"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-from-ideas-to-data-1",
    "href": "slides/08-polishing-and-presenting-plots.html#build-from-ideas-to-data-1",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build from ideas to data",
    "text": "Build from ideas to data\n\nTheory says …"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#build-from-ideas-to-data-2",
    "href": "slides/08-polishing-and-presenting-plots.html#build-from-ideas-to-data-2",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Build from ideas to data",
    "text": "Build from ideas to data\n\nData suggests …"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#repeat-to-differentiate",
    "href": "slides/08-polishing-and-presenting-plots.html#repeat-to-differentiate",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Repeat to differentiate",
    "text": "Repeat to differentiate\n\nPointrange"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#repeat-to-differentiate-1",
    "href": "slides/08-polishing-and-presenting-plots.html#repeat-to-differentiate-1",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Repeat to differentiate",
    "text": "Repeat to differentiate\n\nAdd a comparison group"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#layer-and-repeat-with-facets",
    "href": "slides/08-polishing-and-presenting-plots.html#layer-and-repeat-with-facets",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Layer and repeat with facets",
    "text": "Layer and repeat with facets\n\nCompare across facets"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#layer-and-repeat-across-facets",
    "href": "slides/08-polishing-and-presenting-plots.html#layer-and-repeat-across-facets",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Layer and repeat across facets",
    "text": "Layer and repeat across facets\n\nLayer to compare"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#layer-and-repeat-across-facets-1",
    "href": "slides/08-polishing-and-presenting-plots.html#layer-and-repeat-across-facets-1",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Layer and repeat across facets",
    "text": "Layer and repeat across facets\n\nLayer to copmare"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#x-ray-vision",
    "href": "slides/08-polishing-and-presenting-plots.html#x-ray-vision",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "X-Ray Vision",
    "text": "X-Ray Vision\n\nSeeing through it"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#themes-1",
    "href": "slides/08-polishing-and-presenting-plots.html#themes-1",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Themes …",
    "text": "Themes …\n\nare controlled by the theme() function\ncan be bundled into functions of their own, like theme_bw() or theme_minimal()\ncan be set for the duration of a file or project with theme_set()\nmake changes that are applied additively\nand most importantly …"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#make-a-plot",
    "href": "slides/08-polishing-and-presenting-plots.html#make-a-plot",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Make a plot",
    "text": "Make a plot\n\nkjh_set_classic_theme(3)\n\n\n\np &lt;- organdata |&gt; \n  drop_na(world) |&gt; \n  ggplot(mapping = aes(x = roads, y = donors, \n                          color = world)) + \n  geom_point(size = 3) + \n  labs(x = \"Road Deaths\", \n       y = \"Procurement Rate\",\n       title = \"By Welfare State Regime\")\n\np"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#add-a-theme-theme_bw",
    "href": "slides/08-polishing-and-presenting-plots.html#add-a-theme-theme_bw",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Add a theme … theme_bw()",
    "text": "Add a theme … theme_bw()\n\n\np + theme_bw()"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#add-a-theme-theme_minimal",
    "href": "slides/08-polishing-and-presenting-plots.html#add-a-theme-theme_minimal",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Add a theme … theme_minimal()",
    "text": "Add a theme … theme_minimal()\n\n\np + theme_minimal()"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#add-a-theme-theme_dark",
    "href": "slides/08-polishing-and-presenting-plots.html#add-a-theme-theme_dark",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Add a theme … theme_dark()",
    "text": "Add a theme … theme_dark()\n\n\np + theme_dark()"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#adjust-with-the-theme-function",
    "href": "slides/08-polishing-and-presenting-plots.html#adjust-with-the-theme-function",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Adjust with the theme() function",
    "text": "Adjust with the theme() function\n\nNone of this directly touches the parts of the plot that are representing your data—i.e. the visual parts that are mapped to a variable, and thus have a scale. Adjusting those is the job of the scale_ and guide() functions.\n\n\n\np + theme_bw() +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#there-are-many-theme-elements",
    "href": "slides/08-polishing-and-presenting-plots.html#there-are-many-theme-elements",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "There are many theme elements",
    "text": "There are many theme elements\n\n\n\nline rect text title aspect.ratio\naxis.title axis.title.x axis.title.x.top axis.title.x.bottom axis.title.y axis.title.y.left axis.title.y.right axis.text axis.text.x axis.text.x.top axis.text.x.bottom axis.text.y axis.text.y.left axis.text.y.right axis.ticks axis.ticks.x axis.ticks.x.top axis.ticks.x.bottom axis.ticks.y axis.ticks.y.left axis.ticks.y.right axis.ticks.length axis.ticks.length.x axis.ticks.length.x.top axis.ticks.length.x.bottom axis.ticks.length.y axis.ticks.length.y.left axis.ticks.length.y.right axis.line axis.line.x axis.line.x.top axis.line.x.bottom axis.line.y axis.line.y.left axis.line.y.right\n\n\n\nlegend.background legend.margin legend.spacing legend.spacing.x legend.spacing.y legend.key legend.key.size legend.key.height legend.key.width legend.text legend.text.align legend.title legend.title.align legend.position legend.direction legend.justification legend.box legend.box.just legend.box.margin legend.box.background legend.box.spacing\npanel.background panel.border panel.spacing panel.spacing.x panel.spacing.y panel.grid panel.grid.major panel.grid.minor panel.grid.major.x panel.grid.major.y panel.grid.minor.x panel.grid.minor.y panel.ontop plot.background\nplot.title plot.title.position plot.subtitle plot.caption plot.caption.position plot.tag plot.tag.position plot.margin\nstrip.background strip.background.x strip.background.y strip.placement strip.text strip.text.x strip.text.y strip.switch.pad.grid strip.switch.pad.wrap"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#but-they-are-structured",
    "href": "slides/08-polishing-and-presenting-plots.html#but-they-are-structured",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "But they are structured",
    "text": "But they are structured\n\n\n\nline rect text title aspect.ratio\naxis.title axis.title.x axis.title.x.top axis.title.x.bottom axis.title.y axis.title.y.left axis.title.y.right axis.text axis.text.x axis.text.x.top axis.text.x.bottom axis.text.y axis.text.y.left axis.text.y.right axis.ticks axis.ticks.x axis.ticks.x.top axis.ticks.x.bottom axis.ticks.y axis.ticks.y.left axis.ticks.y.right axis.ticks.length axis.ticks.length.x axis.ticks.length.x.top axis.ticks.length.x.bottom axis.ticks.length.y axis.ticks.length.y.left axis.ticks.length.y.right axis.line axis.line.x axis.line.x.top axis.line.x.bottom axis.line.y axis.line.y.left axis.line.y.right\n\n\n\nlegend.background legend.margin legend.spacing legend.spacing.x legend.spacing.y legend.key legend.key.size legend.key.height legend.key.width legend.text legend.text.align legend.title legend.title.align legend.position legend.direction legend.justification legend.box legend.box.just legend.box.margin legend.box.background legend.box.spacing\npanel.background panel.border panel.spacing panel.spacing.x panel.spacing.y panel.grid panel.grid.major panel.grid.minor panel.grid.major.x panel.grid.major.y panel.grid.minor.x panel.grid.minor.y panel.ontop\nplot.background plot.title plot.title.position plot.subtitle plot.caption plot.caption.position plot.tag plot.tag.position plot.margin\nstrip.background strip.background.x strip.background.y strip.placement strip.text strip.text.x strip.text.y strip.switch.pad.grid strip.switch.pad.wrap"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#and-inherit",
    "href": "slides/08-polishing-and-presenting-plots.html#and-inherit",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "And inherit",
    "text": "And inherit\n\n\n\nline rect text title aspect.ratio\naxis.title axis.title.x axis.title.x.top axis.title.x.bottom axis.title.y axis.title.y.left axis.title.y.right axis.text axis.text.x axis.text.x.top axis.text.x.bottom axis.text.y axis.text.y.left axis.text.y.right axis.ticks axis.ticks.x axis.ticks.x.top axis.ticks.x.bottom axis.ticks.y axis.ticks.y.left axis.ticks.y.right axis.ticks.length axis.ticks.length.x axis.ticks.length.x.top axis.ticks.length.x.bottom axis.ticks.length.y axis.ticks.length.y.left axis.ticks.length.y.right axis.line axis.line.x axis.line.x.top axis.line.x.bottom axis.line.y axis.line.y.left axis.line.y.right\n\nlegend.background legend.margin legend.spacing legend.spacing.x legend.spacing.y legend.key legend.key.size legend.key.height legend.key.width legend.text legend.text.align legend.title legend.title.align legend.position legend.direction legend.justification legend.box legend.box.just legend.box.margin legend.box.background legend.box.spacing\npanel.background panel.border panel.spacing panel.spacing.x panel.spacing.y panel.grid panel.grid.major panel.grid.minor panel.grid.major.x panel.grid.major.y panel.grid.minor.x panel.grid.minor.y panel.ontop\nplot.background plot.title plot.title.position plot.subtitle plot.caption plot.caption.position plot.tag plot.tag.position plot.margin\nstrip.background strip.background.x strip.background.y strip.placement strip.text strip.text.x strip.text.y strip.switch.pad.grid strip.switch.pad.wrap"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#two-kinds-of-adjustment",
    "href": "slides/08-polishing-and-presenting-plots.html#two-kinds-of-adjustment",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Two kinds of adjustment",
    "text": "Two kinds of adjustment\nIt’s a single setting.\n\nE.g, legend.position can be \"none\", \"left\", \"right\", \"bottom\", or \"top\"\nHence, e.g., theme(legend.position = \"top\"), which we have seen several times. Similarly for e.g. legend.direction (can be “horizontal” or “vertical”).\nIt’s a component of the plot that might be styled in several ways. E.g., The text on the axes, or the lines in the plot panel.\n\nIf the latter …"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask",
    "href": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "If adjusting a thematic element ask…",
    "text": "If adjusting a thematic element ask…\n\nWhere on the plot is it?"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-1",
    "href": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-1",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "If adjusting a thematic element ask…",
    "text": "If adjusting a thematic element ask…\n\nWhere on the plot is it?\nIs it part of an axis, part of the panel, the strip (facet title) box, or the legend? This will help you find the name of the thing you want to adjust."
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-2",
    "href": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-2",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "If adjusting a thematic element ask…",
    "text": "If adjusting a thematic element ask…\n\nWhere on the plot is it?\nIs it part of an axis, part of the panel, the strip (facet title) box, or the legend? This will help you find the name of the thing you want to adjust.\nE.g. “I want to adjust the text for the markings on the x-axis”\nYou want axis.ticks.x\nE.g. “I want to adjust the styling of the main y-axis grid lines inside the plot”\nYou want panel.grid.major.y"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-3",
    "href": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-3",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "If adjusting a thematic element, ask…",
    "text": "If adjusting a thematic element, ask…\n\nWhat kind of element is it?"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-4",
    "href": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-4",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "If adjusting a thematic element, ask…",
    "text": "If adjusting a thematic element, ask…\n\nWhat kind of element is it?\nIs it text, or a line, or a rectangle?\nThis will tell you what function to use to make the adjustment to the named element."
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-5",
    "href": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-5",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "If adjusting a thematic element, ask…",
    "text": "If adjusting a thematic element, ask…\n\nWhat kind of element is it?\nIs it text, or a line, or a rectangle?\nThis will tell you what function to use to make the adjustment to the named element.\nIf it’s text, adjust the element with element_text()"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-6",
    "href": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-6",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "If adjusting a thematic element, ask…",
    "text": "If adjusting a thematic element, ask…\n\nWhat kind of element is it?\nIs it text, or a line, or a rectangle?\nThis will tell you what function to use to make the adjustment to the named element.\nIf it’s text, adjust the element with element_text()\nIf it’s a line, adjust it with element_line()"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-7",
    "href": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-7",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "If adjusting a thematic element, ask…",
    "text": "If adjusting a thematic element, ask…\n\nWhat kind of element is it?\nIs it text, or a line, or a rectangle?\nThis will tell you what function to use to make the adjustment to the named element.\nIf it’s text, adjust the element with element_text()\nIf it’s a line, adjust it with element_line()\nIf it’s a rectangle, with element_rect()"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-8",
    "href": "slides/08-polishing-and-presenting-plots.html#if-adjusting-a-thematic-element-ask-8",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "If adjusting a thematic element, ask…",
    "text": "If adjusting a thematic element, ask…\n\nWhat kind of element is it?\nIs it text, or a line, or a rectangle?\nThis will tell you what function to use to make the adjustment to the named element.\nIf it’s text, adjust the element with element_text()\nIf it’s a line, adjust it with element_line()\nIf it’s a rectangle, with element_rect()\nIf you want to fully turn off an element, use element_blank()"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#for-example",
    "href": "slides/08-polishing-and-presenting-plots.html#for-example",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "For example …",
    "text": "For example …\n“I want to adjust the styling of the plot title”"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#for-example-1",
    "href": "slides/08-polishing-and-presenting-plots.html#for-example-1",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "For example …",
    "text": "For example …\n“I want to adjust the styling of the plot title”\n\nThe relevant element is plot.title.\nIt’s text.\nInside the theme function, adjust it with element_text()."
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#for-example-2",
    "href": "slides/08-polishing-and-presenting-plots.html#for-example-2",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "For example …",
    "text": "For example …\n\n\np + theme(plot.title = \n            element_text(size = rel(3),\n                         face = \"bold\", \n                         color = \"orange\"))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#for-example-3",
    "href": "slides/08-polishing-and-presenting-plots.html#for-example-3",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "For example …",
    "text": "For example …\n“I want to adjust y axis grid lines on the plot”"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#for-example-4",
    "href": "slides/08-polishing-and-presenting-plots.html#for-example-4",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "For example …",
    "text": "For example …\n“I want to adjust y axis grid lines on the plot”\n\nThe relevant elements are panel.grid.major.y and panel.grid.minor.y.\nThese are lines.\nInside the theme function, adjust it with element_line()."
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#for-example-5",
    "href": "slides/08-polishing-and-presenting-plots.html#for-example-5",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "For example …",
    "text": "For example …\n\n\np + theme(panel.grid.major.y = \n            element_line(color = \"red\"),\n          panel.grid.minor.y = \n            element_line(color = \"black\", \n                         linetype = \"dotted\"))"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#theming-a-plot",
    "href": "slides/08-polishing-and-presenting-plots.html#theming-a-plot",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Theming a plot",
    "text": "Theming a plot\n\nlibrary(ggthemes)\ntheme_set(theme_fivethirtyeight())\n\nSee how the full function call goes inside theme_set(), including the parentheses, because we are actually running that function to set all the elements."
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#theming-a-plot-1",
    "href": "slides/08-polishing-and-presenting-plots.html#theming-a-plot-1",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "Theming a plot",
    "text": "Theming a plot\n\ntheme_set(theme_economist())"
  },
  {
    "objectID": "slides/08-polishing-and-presenting-plots.html#this-seems-morally-wrong",
    "href": "slides/08-polishing-and-presenting-plots.html#this-seems-morally-wrong",
    "title": "Data Visualization - 8. Polishing and Presenting Plots",
    "section": "This seems morally wrong",
    "text": "This seems morally wrong\n\ntheme_set(theme_stata())"
  }
]